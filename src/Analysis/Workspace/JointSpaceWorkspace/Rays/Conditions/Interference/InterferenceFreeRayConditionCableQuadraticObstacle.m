% Class to compute whether a pose (dynamics) is within the interference
% free workspace (IFW)
%
% Author        : Paul Cheng
% Created       : 2020
% Description   :

classdef InterferenceFreeRayConditionCableQuadraticObstacle < WorkspaceRayConditionBase
    properties (Constant)
        ROUNDING_DIGIT = 9;
        % Type of workspace condition (WorkspaceConditionType enum)
        type = WorkspaceRayConditionType.INTERFERENCE_CABLE_QUADSURF;
    end
    
    properties (SetAccess = protected)
        % Set constants
        areDofsTranslation;         % Array for the q of the joint (true if translation and false if rotation)
        numDofs;                    % The number of dofs
        numCables;                  % The number of cables
        QuadSurf;                   % The obstacle surface equations
        surface_bound;               % Obstacle boundary
        numSurf
        is_compiled_mode;
    end
    
    methods
        % Constructor for interference free worksapce
        function w = InterferenceFreeRayConditionCableQuadraticObstacle(model, min_ray_lengths, QuadSurf)
            w@WorkspaceRayConditionBase(min_ray_lengths);
            w.areDofsTranslation = (model.bodyModel.q_dofType == DoFType.TRANSLATION);
            w.numDofs = model.numDofs;
            w.numCables = model.numCables;
            w.QuadSurf = QuadSurf.Quad_Matrix;
            w.surface_bound = QuadSurf.boundary;
            w.is_compiled_mode = (model.modelMode == ModelModeType.COMPILED);
            w.numSurf = size(QuadSurf.Quad_Matrix,2);
        end
        
        % Evaluate the interference free intervals
        function intervals =  evaluateFunction(obj, model, ws_ray)
            % Variable initialisation
            intervals = [];
            intervals_count = 1;
            %             tic
            free_variable_index = ws_ray.freeVariableIndex;
            is_dof_translation = obj.areDofsTranslation(free_variable_index);
            
            q_begin = [ws_ray.fixedVariables(1:free_variable_index-1);ws_ray.freeVariableRange(1);ws_ray.fixedVariables(free_variable_index:end)];
            q_end = [ws_ray.fixedVariables(1:free_variable_index-1);ws_ray.freeVariableRange(2);ws_ray.fixedVariables(free_variable_index:end)];
            
            all_intersection_poses = [q_begin,q_end];
            all_intersected_pts = [];
            % Cable_Surface_End_pts{1} -> base point,  Cable_Surface_End_pts{2}-> start point,  Cable_Surface_End_pts{3}-> end point
            [Cable_Surface_End_pts{1},Cable_Surface_End_pts{2}] = obj.GetSegmentData(model,q_begin);
            [~,Cable_Surface_End_pts{3}] = obj.GetSegmentData(model,q_end);
            for surf_ind = 1:size(obj.QuadSurf,2)
                QuadSurfCoeff(surf_ind,:)  = obj.GetQuadSurfCoeff(obj.QuadSurf{surf_ind});
            end
            
            if is_dof_translation
                [u_coeff_quad,v_coeff_u_quad] = obj.GetUVCoeff4QuadTrans();
                t_coeff_edge = obj.GetUVCoeff4EdgeTrans();
                %                     for i = 1:obj.numCables
                for i = 1:obj.numCables
                    % three attachements from base frame
                    AttPts{i} = [Cable_Surface_End_pts{1}(i,:);Cable_Surface_End_pts{2}(i,:);Cable_Surface_End_pts{3}(i,:)];
                    % parametric form f(u,v) of the cable segment surface
                    parametric_cable_surf_uv{i,:} = @(u,v) (((Cable_Surface_End_pts{3}(i,:) - Cable_Surface_End_pts{2}(i,:))'.*u +  Cable_Surface_End_pts{2}(i,:)') - Cable_Surface_End_pts{1}(i,:)').*v + Cable_Surface_End_pts{1}(i,:)';
                    
                end
                % find the intersection of the triangle surface to the quadratic surface
                [q_intersected_at_surf,intersected_pts_at_surf] = obj.ParametericSurfaceIntersectionTranslation(QuadSurfCoeff,AttPts,parametric_cable_surf_uv,q_begin,q_end,surf_ind,u_coeff_quad,v_coeff_u_quad);
                all_intersection_poses = [all_intersection_poses, q_intersected_at_surf];
                all_intersected_pts = [all_intersected_pts,intersected_pts_at_surf];
                
                %% Three edges of the triangle surface
                % find the intersection of three edges with the
                % quadratic surface
                [q_intersected_at_edges,intersected_pts_at_edges] = Edges2QuadSurfIntersection(obj,QuadSurfCoeff,AttPts,q_begin,q_end,surf_ind,t_coeff_edge);
                
                all_intersection_poses = [all_intersection_poses, q_intersected_at_edges];
                all_intersected_pts = [all_intersected_pts,intersected_pts_at_edges];
                
                %                     end
                
            else
                
                valid_range = [tan(q_begin(free_variable_index)/2), tan(q_end(free_variable_index)/2)];
                [Si,rot_axis] = GetSegmentEquation(obj,model,q_begin,q_end);
                %                     toc1 = toc + toc1;
                [u_coeff_quad,v_coeff_u_quad] = obj.GetUVCoeff4QuadOrient(rot_axis);
                [t_coeff_line,t_coeff_curve] = obj.GetUVCoeff4EdgeOrient(rot_axis);
                if obj.is_compiled_mode
                    q_zero = zeros(model.numDofs,1);
                    rOAi_all = model.cableModel.compiled_r_OAs_fn(q_begin,q_zero,q_zero,q_zero);
                else
                    rOAi_all = model.cableModel.r_OAs;
                end
                rOAi = rOAi_all(1:3,:);
                for i = 1:obj.numCables
                    % three attachements from base frame
                    AttPts{i} = [Cable_Surface_End_pts{1}(i,:);Cable_Surface_End_pts{2}(i,:);Cable_Surface_End_pts{3}(i,:)];
                    O_vector(i,:) = AttPts{i}(2,:);
                    unit_vector(i,:) = (AttPts{i}(3,:) - AttPts{i}(2,:))/norm(AttPts{i}(3,:) - AttPts{i}(2,:));
                    ray_o(:,i) = Cable_Surface_End_pts{2}(i,:)';
                    ray_d(:,i) = unit_vector(i,:)';
                    Si_u =@(u) Si{i}(u);
                    parametric_cable_surf_uv{i} =@(u,v) Si_u(u)* v + rOAi(:,i);
                    rGAi(:,i) = model.cableModel.cables{1,i}.attachments{1,2}.r_GA;
                    Segment{1,i} =@(t) Si_u(t) + rOAi(:,i);
                    Segment{2,i} =@(t) (Cable_Surface_End_pts{3}(i,:) - Cable_Surface_End_pts{1}(i,:)).'.*t + Cable_Surface_End_pts{1}(i,:).';
                    Segment{3,i} =@(t) (Cable_Surface_End_pts{2}(i,:) - Cable_Surface_End_pts{1}(i,:)).'.*t + Cable_Surface_End_pts{1}(i,:).';
                end
                [q_intersected,intersected_pts] = ParametericSurfaceIntersectionOrientation(obj,QuadSurfCoeff,rOAi,rGAi,parametric_cable_surf_uv,...
                    q_begin,q_end,valid_range,u_coeff_quad,v_coeff_u_quad);
                
                all_intersection_poses = [all_intersection_poses, q_intersected];
                all_intersected_pts = [all_intersected_pts,intersected_pts];
                
                %% boundary curves intersection
                %                         Segment{1} =@(t) Si_u(t) + [a1;a2 ;a3];
                
                [q_intersected,intersected_pts] = Curve2QuadSurfIntersection(obj,QuadSurfCoeff,rGAi,AttPts,Segment,q_begin,q_end,valid_range,...
                    t_coeff_line,t_coeff_curve);
                
                all_intersection_poses = [all_intersection_poses, q_intersected];
                all_intersected_pts = [all_intersected_pts,intersected_pts];
                
            end
            
            %% verify the intersection interval
            all_intersection_poses = unique(round(all_intersection_poses',obj.ROUNDING_DIGIT),'rows')';
            
            %             pre_has_intersected = 1;
            [t_coeff_verify] = obj.GetUVCoeff4EdgeTrans();
            
            for i = 1:size(all_intersection_poses,2) - 1
                has_intersected = [];
                
                has_intersected = obj.IntervalVerify(model,QuadSurfCoeff,all_intersection_poses(:,i),all_intersection_poses(:,i+1),t_coeff_verify);
                
                if ~has_intersected
                    if ~isempty(intervals) && intervals(end) == all_intersection_poses(free_variable_index,i)
                        intervals(end) = all_intersection_poses(free_variable_index,i+1);
                    else
                        intervals(intervals_count,:) = [all_intersection_poses(free_variable_index,i),all_intersection_poses(free_variable_index,i+1)];
                        intervals_count = intervals_count + 1;
                    end
                    
                end
                
                
            end
            
            %             if ~isempty(all_intersected_pts)
            %                                 scatter3(all_intersected_pts(1,:),all_intersected_pts(2,:),all_intersected_pts(3,:),'r','filled');
            %             end
        end
    end
    methods (Access = private)
        %functin to get the cable segment data
        function [base_att_pt,EE_att_pt] = GetSegmentData(obj,model,q)
            q_zero = zeros(model.numDofs,1);
            if obj.is_compiled_mode
                rOAi = model.cableModel.compiled_r_OAs_fn(q,q_zero,q_zero,q_zero);
                base_att_pt =  rOAi(1:3,:)';
                EE_att_pt = rOAi(4:6,:)';
            else
                model.update(q,q_zero,q_zero,q_zero);
                rOAi = model.cableModel.r_OAs;
                base_att_pt =  rOAi(1:3,:)';
                EE_att_pt = rOAi(4:6,:)';
            end
        end
        
        %% function to get the cable segment equation
        function [Si,Rotational_axis_ind] = GetSegmentEquation(obj,model,q_begin,q_end)
            % codes here may need to be change according to the actually
            % situtation since it's difficult to find to which axis is
            % rotating from just the model
            Rotational_axis_ind =  find(~(q_begin == q_end));
            %             Rotational_axis_ind = [4,5,6];
            %             model.update(q_end,zeros(model.numDofs,1), zeros(model.numDofs,1),zeros(model.numDofs,1));
            %             S1 = model.cableModel.cables{1, 1}.segments{1,1}.segmentVector;
            %             model.update(q_begin,zeros(model.numDofs,1), zeros(model.numDofs,1),zeros(model.numDofs,1));
            %             S2 = model.cableModel.cables{1, 1}.segments{1,1}.segmentVector;
            %             Rotational_axis_ind(S2 == S1);
            % 4: rotate about x-axis 5: rotate about x-axis 6: rotate about x-axis
            if Rotational_axis_ind == 4
                Rot_Mat =@(u) [1 0 0;
                    0 (1-u^2)/(1+u^2) -2*u/(1+u^2);
                    0 2*u/(1+u^2) (1-u^2)/(1+u^2)];
            elseif Rotational_axis_ind == 5
                Rot_Mat =@(u) [(1-u^2)/(1+u^2) 0 2*u/(1+u^2);
                    0 1 0 ;
                    -2*u/(1+u^2) 0 (1-u^2)/(1+u^2)];
            elseif Rotational_axis_ind == 6
                Rot_Mat =@(u) [(1-u^2)/(1+u^2) -2*u/(1+u^2) 0;
                    2*u/(1+u^2) (1-u^2)/(1+u^2) 0;
                    0 0 1];
            else
                CASPR_log.Error('Cannot find rotational axis of this ray')
            end
            if obj.is_compiled_mode
                q_zero = zeros(model.numDofs,1);
                rOAi_all = model.cableModel.compiled_r_OAs_fn(q_begin,q_zero,q_zero,q_zero);
            else
                rOAi_all = model.cableModel.r_OAs;
            end
            for i = 1:model.numCables
                r_OA_i = rOAi_all(1:3,i);
                r_GA_i = model.cableModel.cables{1,i}.attachments{1,2}.r_GA;
                Si{i} =@(u) (q_begin(obj.areDofsTranslation) - r_OA_i) + Rot_Mat(u)*r_GA_i;
            end
        end
        
        %% function to calculate the intersected poses between quad-surface and cable segment bounded surface
        function [q_intersected,intersected_pts] = ParametericSurfaceIntersectionOrientation(obj,QuadSurfCoeff,r_OA_i,r_GA_i,uv_equ,q_begin,q_end,u_range,u_coeff_u,v_coeff_u)
            intersected_pts = [];q_intersected = [];
            %%
            q = q_begin(obj.areDofsTranslation);
            q1 = q(1);
            q2 = q(2);
            q3 = q(3);
            
            a1 = r_OA_i(1,:);
            a2 = r_OA_i(2,:);
            a3 = r_OA_i(3,:);
            b1 = r_GA_i(1,:);
            b2 = r_GA_i(2,:);
            b3 = r_GA_i(3,:);
            
            s1 = QuadSurfCoeff(:,1);
            s2 = QuadSurfCoeff(:,2);
            s3 = QuadSurfCoeff(:,3);
            s4 = QuadSurfCoeff(:,4);
            s5 = QuadSurfCoeff(:,5);
            s6 = QuadSurfCoeff(:,6);
            s7 = QuadSurfCoeff(:,7);
            s8 = QuadSurfCoeff(:,8);
            s9 = QuadSurfCoeff(:,9);
            s10 = QuadSurfCoeff(:,10);
            %%
            %%%%%%% A*v^2 + B*v + C = 0, coefficient of v is shown below in
            %%%%%%% the form of v_coeff = [A;B;C;...]
            
            u_coeff = round(u_coeff_u(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3),obj.ROUNDING_DIGIT);
            
            tmp_u_value = [];
            for i = 1:size(u_coeff,1)
                tmp_u_value = [tmp_u_value;unique((roots(u_coeff(i,:))))];
            end
            ans_size = size(u_coeff,2) - 1;
            surf_num = repmat((1:obj.numSurf)',obj.numCables,ans_size)'; surf_num = surf_num(:);
            cable_num = repmat(1:1:obj.numCables,ans_size*obj.numSurf,1); cable_num = cable_num(:);
            surf_n_cable_ind = repmat([surf_num,cable_num],[obj.numSurf,1]);
            
            real_sol_index = find(imag(tmp_u_value) == 0);
            %             u_value = unique((roots(u_coeff)));
            u_value = tmp_u_value(imag(tmp_u_value)==0);
            [u_value,ia,~] = unique(u_value);
            real_sol_index = real_sol_index(ia,:);
            %             u_value = u_value(imag(u_value)==0);
            remove_index = [find(u_value < u_range(1));find(u_value > u_range(2))];
            real_sol_index(remove_index) = [];
            u_value(remove_index) = [];
            %             u_value(u_value <u_range(1)) = [];u_value(u_value > u_range(2)) = [];
            
            if ~isempty(u_value)
                for i = 1:size(u_value,1)
                    surf_ind = surf_n_cable_ind(real_sol_index(i),1);
                    cable_ind = surf_n_cable_ind(real_sol_index(i),2);
                    
                    v_coeff = v_coeff_u(u_value(i),a1(cable_ind),a2(cable_ind),a3(cable_ind),b1(cable_ind),b2(cable_ind),b3(cable_ind),...
                        s1(surf_ind),s2(surf_ind),s3(surf_ind),s4(surf_ind),s5(surf_ind),s6(surf_ind),s7(surf_ind),s8(surf_ind),s9(surf_ind),s10(surf_ind),q1,q2,q3);
                    v_value = double(-v_coeff(:,2)./(2*v_coeff(:,1)));
                    %                     tmp_v_value = reshape(v_value,[obj.numCables,size(obj.QuadSurf,2)]);
                    v_value = v_value(imag(v_value)==0);
                    v_value = unique(v_value);
                    v_value(v_value <0) = [];v_value(v_value > 1) = [];
                    %% find the corresponding pose by finding the same unit vector
                    if ~isempty(v_value)
                        for ii = 1:size(v_value,1)
                            %                             [cable_ind,surf_ind] = find(v_value(ii)==tmp_v_value);
                            %% check if out of surface boundary
                            tmp_val = uv_equ{cable_ind}(u_value(i),v_value(ii));
                            if tmp_val(1) <= obj.surface_bound{surf_ind}(2) && tmp_val(1) >= obj.surface_bound{surf_ind}(1) && ...
                                    tmp_val(2) <= obj.surface_bound{surf_ind}(4) && tmp_val(2) >= obj.surface_bound{surf_ind}(3) &&...
                                    tmp_val(3) <= obj.surface_bound{surf_ind}(6) && tmp_val(3) >= obj.surface_bound{surf_ind}(5)
                                q_intersected = [q_intersected,(q_end - q_begin)*interp1(u_range,[0 1],u_value(i)) + q_begin];
                                intersected_pts = [intersected_pts, tmp_val];
                            end
                        end
                    end
                    %
                end
            end
        end
        %% function to calculate the intersected poses between quad-surface and 3 cable segment equations
        function [q_intersected,intersected_pts] = Curve2QuadSurfIntersection(obj,QuadSurfCoeff,r_GA_i,AttPts,t_equ,q_begin,q_end,u_range,t_coeff_line,t_coeff_curve)
            q_intersected = [];intersected_pts = [];
            
            q = q_begin(obj.areDofsTranslation);
            q1 = q(1);
            q2 = q(2);
            q3 = q(3);
            
            s1 = QuadSurfCoeff(:,1);
            s2 = QuadSurfCoeff(:,2);
            s3 = QuadSurfCoeff(:,3);
            s4 = QuadSurfCoeff(:,4);
            s5 = QuadSurfCoeff(:,5);
            s6 = QuadSurfCoeff(:,6);
            s7 = QuadSurfCoeff(:,7);
            s8 = QuadSurfCoeff(:,8);
            s9 = QuadSurfCoeff(:,9);
            s10 = QuadSurfCoeff(:,10);
            
            for i = 1:size(AttPts,2)
                a1(:,i) = AttPts{i}(1,1);
                a2(:,i) = AttPts{i}(1,2);
                a3(:,i) = AttPts{i}(1,3);
                b1(:,i) = r_GA_i(1,i);
                b2(:,i) = r_GA_i(2,i);
                b3(:,i) = r_GA_i(3,i);
            end
            %%%%%%% A*t^2 + B*t + C = 0, coefficient of t is shown below in
            %%%%%%% the form of t_coeff = [A;B;C;...]
            
            for i = 1:3
                curve_t_ans = [];
                if i == 1
                    t_coeff = t_coeff_curve(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3);
                    
                    for j = 1:size(t_coeff,1)
                        tmp_ans = roots(round(t_coeff(j,:),obj.ROUNDING_DIGIT));
                        curve_t_ans = [curve_t_ans;tmp_ans];
                    end
                    t_ans = curve_t_ans;
                elseif i == 2
                    for j = 1:size(AttPts,2)
                        c1(:,j) = AttPts{j}(3,1);
                        c2(:,j) = AttPts{j}(3,2);
                        c3(:,j) = AttPts{j}(3,3);
                    end
                    t_coeff = t_coeff_line(a1,a2,a3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10);
                    u_range = [0 1];
                    t_ans_1 = (-t_coeff(:,2) + sqrt(t_coeff(:,2).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1));
                    t_ans_2 = (-t_coeff(:,2) - sqrt(t_coeff(:,2.).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1));
                    t_ans = [t_ans_1';t_ans_2'];
                    t_ans = t_ans(:);
                else
                    for j = 1:size(AttPts,2)
                        c1(:,j) = AttPts{j}(2,1);
                        c2(:,j) = AttPts{j}(2,2);
                        c3(:,j) = AttPts{j}(2,3);
                    end
                    t_coeff = t_coeff_line(a1,a2,a3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10);
                    u_range = [0 1];
                    t_ans_1 = (-t_coeff(:,2) + sqrt(t_coeff(:,2).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1));
                    t_ans_2 = (-t_coeff(:,2) - sqrt(t_coeff(:,2.).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1));
                    t_ans = [t_ans_1';t_ans_2'];
                    t_ans = t_ans(:);
                    
                end
                ans_size = size(t_coeff,2) - 1;
                surf_num = repmat((1:obj.numSurf)',obj.numCables,ans_size)'; surf_num = surf_num(:);
                cable_num = repmat(1:1:obj.numCables,ans_size*obj.numSurf,1); cable_num = cable_num(:);
                surf_n_cable_ind = repmat([surf_num,cable_num],[obj.numSurf,1]);
                
                
                real_sol_index = find(imag(t_ans) == 0);
                t_ans = t_ans(imag(t_ans)==0);
                [t_ans,ia,~] = unique(t_ans);
                %                 t_ans = unique(t_ans);
                real_sol_index = real_sol_index(ia,:);
                remove_index = [find(t_ans < u_range(1));find(t_ans > u_range(2))];
                real_sol_index(remove_index) = [];
                t_ans(remove_index) = [];
                %                 t_ans(t_ans < u_range(1)) = [];t_ans(t_ans > u_range(2)) = [];
                %                 t_ans = double(t_ans);
                if ~isempty(t_ans)
                    for ii = 1:size(t_ans,1)
                        surf_ind = surf_n_cable_ind(real_sol_index(ii),1);
                        cable_ind = surf_n_cable_ind(real_sol_index(ii),2);
                        %% finding the corresponding poses of intersection and
                        %% check if out of surface boundary
                        tmp_val = t_equ{i,cable_ind}(t_ans(ii));
                        if tmp_val(1) <= obj.surface_bound{surf_ind}(2) && tmp_val(1) >= obj.surface_bound{surf_ind}(1) && ...
                                tmp_val(2) <= obj.surface_bound{surf_ind}(4) && tmp_val(2) >= obj.surface_bound{surf_ind}(3) &&...
                                tmp_val(3) <= obj.surface_bound{surf_ind}(6) && tmp_val(3) >= obj.surface_bound{surf_ind}(5)
                            intersected_pts = [intersected_pts, tmp_val];
                            q_intersected = [q_intersected,(q_end - q_begin)*interp1(u_range,[0 1],t_ans(ii)) + q_begin];
                        end
                    end
                end
            end
        end
        
        %% function to calculate the intersected poses between quad-surface and cable segment bounded surface
        function [q_intersected,intersected_pts] = ParametericSurfaceIntersectionTranslation(obj,QuadSurfCoeff,AttPts,uv_equ,q_begin,q_end,surf_ind,u_coeff,v_coeff_u)
            intersected_pts = [];q_intersected = [];
            %%
            u_range = [0,1];
            
            for i = 1:size(AttPts,2)
                a11(:,i) = AttPts{i}(1,1);
                a12(:,i) = AttPts{i}(1,2);
                a13(:,i) = AttPts{i}(1,3);
                a21(:,i) = AttPts{i}(2,1);
                a22(:,i) = AttPts{i}(2,2);
                a23(:,i) = AttPts{i}(2,3);
                a31(:,i) = AttPts{i}(3,1);
                a32(:,i) = AttPts{i}(3,2);
                a33(:,i) = AttPts{i}(3,3);
            end
            
            s1 = QuadSurfCoeff(:,1);
            s2 = QuadSurfCoeff(:,2);
            s3 = QuadSurfCoeff(:,3);
            s4 = QuadSurfCoeff(:,4);
            s5 = QuadSurfCoeff(:,5);
            s6 = QuadSurfCoeff(:,6);
            s7 = QuadSurfCoeff(:,7);
            s8 = QuadSurfCoeff(:,8);
            s9 = QuadSurfCoeff(:,9);
            s10 = QuadSurfCoeff(:,10);
            
            %%
            %%%%%%% A*v^2 + B*v + C = 0, coefficient of v is shown below in
            %%%%%%% the form of v_coeff = [A;B;C]
            u_coeff = u_coeff(a11,a12,a13,a21,a22,a23,a31,a32,a33,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10);
            
            u_value(1,:) = ((-u_coeff(:,2) + sqrt(u_coeff(:,2).^2 - 4.*u_coeff(:,1).*u_coeff(:,3)))./(2.*u_coeff(:,1)))';
            u_value(2,:) = ((-u_coeff(:,2) - sqrt(u_coeff(:,2.).^2 - 4.*u_coeff(:,1).*u_coeff(:,3)))./(2.*u_coeff(:,1)))';
            u_value = u_value(:);
            ans_size = size(u_coeff,2) - 1;
            surf_num = repmat((1:obj.numSurf)',obj.numCables,ans_size)'; surf_num = surf_num(:);
            cable_num = repmat(1:1:obj.numCables,ans_size*obj.numSurf,1); cable_num = cable_num(:);
            surf_n_cable_ind = repmat([surf_num,cable_num],[obj.numSurf,1]);
            real_sol_index = find(imag(u_value) == 0);
            u_value = u_value(real_sol_index,:);
            [u_value,ia,~] = unique(u_value);
            real_sol_index = real_sol_index(ia,:);
            remove_index = [find(u_value < u_range(1));find(u_value > u_range(2))];
            real_sol_index(remove_index) = [];
            u_value(remove_index) = [];
            
            if ~isempty(u_value)
                for i = 1:size(u_value,1)
                    %%%%%%% find v using -B/(2*A*C) since the B^2 - 4*A*C is zero
                    surf_ind = surf_n_cable_ind(real_sol_index(i),1);
                    cable_ind = surf_n_cable_ind(real_sol_index(i),2);
                    v_coeff = v_coeff_u(u_value(i),a11(cable_ind),a12(cable_ind),a13(cable_ind),a21(cable_ind),a22(cable_ind),a23(cable_ind),a31(cable_ind),a32(cable_ind),a33(cable_ind),...
                        s1(surf_ind),s2(surf_ind),s3(surf_ind),s4(surf_ind),s5(surf_ind),s6(surf_ind),s7(surf_ind),s8(surf_ind),s9(surf_ind),s10(surf_ind));
                    v_value = -v_coeff(2)/(2*v_coeff(1));
                    v_value = v_value(imag(v_value)==0);
                    v_value(v_value <0) = [];v_value(v_value > 1) = [];
                    %% find the corresponding pose by finding the same unit vector
                    if ~isempty(v_value)
                        for ii = 1:size(v_value,2)
                            %% check if out of surface boundary
                            tmp_val = uv_equ{cable_ind,:}(u_value(i),v_value(ii));
                            if tmp_val(1) <= obj.surface_bound{surf_ind}(2) && tmp_val(1) >= obj.surface_bound{surf_ind}(1) && ...
                                    tmp_val(2) <= obj.surface_bound{surf_ind}(4) && tmp_val(2) >= obj.surface_bound{surf_ind}(3) &&...
                                    tmp_val(3) <= obj.surface_bound{surf_ind}(6) && tmp_val(3) >= obj.surface_bound{surf_ind}(5)
                                q_intersected = [q_intersected,(q_end - q_begin)*u_value(i) + q_begin];
                                intersected_pts = [intersected_pts, tmp_val];
                            end
                            
                        end
                    end
                    %
                end
            end
            
            
        end
        %% function to calculate the intersected poses between quad-surface and 3 cable segment equations
        function [q_intersected,intersected_pts] = Edges2QuadSurfIntersection(obj,QuadSurfCoeff,AttPts,q_begin,q_end,surf_ind,t_coeff_t)
            
            
            s1 = QuadSurfCoeff(:,1);
            s2 = QuadSurfCoeff(:,2);
            s3 = QuadSurfCoeff(:,3);
            s4 = QuadSurfCoeff(:,4);
            s5 = QuadSurfCoeff(:,5);
            s6 = QuadSurfCoeff(:,6);
            s7 = QuadSurfCoeff(:,7);
            s8 = QuadSurfCoeff(:,8);
            s9 = QuadSurfCoeff(:,9);
            s10 = QuadSurfCoeff(:,10);
            
            q_intersected = [];intersected_pts = [];
            att_sequence = [3 2; 3 1; 2 1 ];
            
            for i = 1:3
                t_ans = [];
                for j = 1:size(AttPts,2)
                    b1(:,j) = AttPts{j}(att_sequence(i,1),1);
                    b2(:,j) = AttPts{j}(att_sequence(i,1),2);
                    b3(:,j) = AttPts{j}(att_sequence(i,1),3);
                    
                    c1(:,j) = AttPts{j}(att_sequence(i,2),1);
                    c2(:,j) = AttPts{j}(att_sequence(i,2),2);
                    c3(:,j) = AttPts{j}(att_sequence(i,2),3);
                end
                %%%%%%% A*t^2 + B*t + C = 0, coefficient of t is shown below in
                %%%%%%% the form of t_coeff = [A;B;C]
                t_coeff = t_coeff_t(b1,b2,b3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10);
                %%%%%%% then the solution of A*t^2 + B*t + C = 0 is given below
                t_ans(1,:) = ((-t_coeff(:,2) + sqrt(t_coeff(:,2).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1)))';
                t_ans(2,:) = ((-t_coeff(:,2) - sqrt(t_coeff(:,2.).^2 - 4.*t_coeff(:,1).*t_coeff(:,3)))./(2.*t_coeff(:,1)))';
                t_ans = t_ans(:);
                ans_size = size(t_coeff,2) - 1;
                surf_num = repmat((1:obj.numSurf)',obj.numCables,ans_size)'; surf_num = surf_num(:);
                cable_num = repmat(1:1:obj.numCables,ans_size*obj.numSurf,1); cable_num = cable_num(:);
                surf_n_cable_ind = repmat([surf_num,cable_num],[obj.numSurf,1]);
                real_sol_index = find(imag(t_ans) == 0);
                t_ans = t_ans(real_sol_index,:);
                [t_ans,ia,~] = unique(t_ans);
                real_sol_index = real_sol_index(ia,:);
                remove_index = [find(t_ans < 0);find(t_ans > 1)];
                real_sol_index(remove_index) = [];
                t_ans(remove_index) = [];
                
                if ~isempty(t_ans)
                    for ii = 1:size(t_ans,1)
                        surf_ind = surf_n_cable_ind(real_sol_index(ii),1);
                        cable_ind = surf_n_cable_ind(real_sol_index(ii),2);
                        %% check if out of surface boundary
                        tmp_val =  [c1(cable_ind) + t_ans(ii)*(b1(cable_ind) - c1(cable_ind));
                            c2(cable_ind) + t_ans(ii)*(b2(cable_ind) - c2(cable_ind));
                            c3(cable_ind) + t_ans(ii)*(b3(cable_ind) - c3(cable_ind))];
                        
                        if tmp_val(1) <= obj.surface_bound{surf_ind}(2) && tmp_val(1) >= obj.surface_bound{surf_ind}(1) && ...
                                tmp_val(2) <= obj.surface_bound{surf_ind}(4) && tmp_val(2) >= obj.surface_bound{surf_ind}(3) &&...
                                tmp_val(3) <= obj.surface_bound{surf_ind}(6) && tmp_val(3) >= obj.surface_bound{surf_ind}(5)
                            intersected_pts = [intersected_pts, tmp_val];
                            q_intersected = [q_intersected,(q_end - q_begin)*t_ans(ii) + q_begin];
                        end
                    end
                end
            end
        end
        
        %% function to check the intersected interval valid
        function has_intersected = IntervalVerify(obj,model,QuadSurfCoeff,q1,q2,t_coeff_verify)
            
            [Att1,Att2] = obj.GetSegmentData(model,(q1+q2)/2);
            
            s1 = QuadSurfCoeff(:,1);
            s2 = QuadSurfCoeff(:,2);
            s3 = QuadSurfCoeff(:,3);
            s4 = QuadSurfCoeff(:,4);
            s5 = QuadSurfCoeff(:,5);
            s6 = QuadSurfCoeff(:,6);
            s7 = QuadSurfCoeff(:,7);
            s8 = QuadSurfCoeff(:,8);
            s9 = QuadSurfCoeff(:,9);
            s10 = QuadSurfCoeff(:,10);
            
            for i = 1:obj.numCables
                b1(:,i) = Att2(i,1);
                b2(:,i) = Att2(i,2);
                b3(:,i) = Att2(i,3);
                
                c1(:,i) = Att1(i,1);
                c2(:,i) = Att1(i,2);
                c3(:,i) = Att1(i,3);
            end
            t_coeff = t_coeff_verify(b1,b2,b3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10);
            t_condition = round(t_coeff(:,2).^2 - 4.*t_coeff(:,1).*t_coeff(:,3),5);
            %                 sum(t_condition >= 0)
            if sum(t_condition >= 0)
                has_intersected = 1;
            else
                has_intersected = 0;
            end
            
        end
        
        %% function to get the coeffcient of the quadratic surface
        function Q  = GetQuadSurfCoeff(~,QuadSurf)
            %              Q = sym('s%d',[1 10]);
            Q = zeros(1,10);
            Q(1) = QuadSurf(1,1);
            Q(2) = QuadSurf(2,2);
            Q(3) = QuadSurf(3,3);
            Q(4) = 2*QuadSurf(1,2);
            Q(5) = 2*QuadSurf(2,3);
            Q(6) = 2*QuadSurf(1,3);
            Q(7) = 2*QuadSurf(1,4);
            Q(8) = 2*QuadSurf(2,4);
            Q(9) = 2*QuadSurf(3,4);
            Q(10) = QuadSurf(4,4);
        end
        %% function to get the correpsonding v and u coefficient in order to speed up the calculation
        function [u_coeff,v_coeff_u] = GetUVCoeff4QuadOrient(~,rot_axis)
            if rot_axis == 5 % y-axis
                v_coeff_u =@(u,a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3)...
                    [reshape(s1.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)).^2 + s3.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)).^2 + s2.*(b2 - a2 + q2).^2 + s5.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)).*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)) - s4.*(b2 - a2 + q2).*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)) - s6.*(b2 - a2 + q2).*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)),[size(a1,2)*size(s1,1),1]),...
                    reshape(s8.*(b2 - a2 + q2) - s9.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)) - s7.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)) - 2.*a1.*s1.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)) - a2.*s4.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)) - a3.*s5.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) - (2.*b3.*u)./(u.^2 + 1)) - a1.*s5.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)) - 2.*a3.*s3.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)) - a2.*s6.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) + (2.*b1.*u)./(u.^2 + 1)) + 2.*a2.*s2.*(b2 - a2 + q2) + a1.*s4.*(b2 - a2 + q2) + a3.*s6.*(b2 - a2 + q2),[size(a1,2)*size(s1,1),1]),...
                    reshape(s1.*a1.^2 + s4.*a1.*a2 + s5.*a1.*a3 + s7.*a1 + s2.*a2.^2 + s6.*a2.*a3 + s8.*a2 + s3.*a3.^2 + s9.*a3 + s10,[size(a1,2)*size(s1,1),1])];
                
                u_coeff = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 - 2.*a1.^2.*b2.*b3.*s4.*s5 + 4.*s1.*a1.^2.*b2.*b3.*s6 + 2.*a1.^2.*b2.*q2.*s4.^2 - 8.*s1.*s2.*a1.^2.*b2.*q2 + 2.*a1.^2.*b2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*q3.*s6 + 2.*a1.^2.*b2.*s4.*s7 - 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 - 2.*a1.^2.*b3.*q2.*s4.*s5 + 4.*s1.*a1.^2.*b3.*q2.*s6 - 2.*a1.^2.*b3.*q3.*s5.^2 + 8.*s1.*s3.*a1.^2.*b3.*q3 - 2.*a1.^2.*b3.*s5.*s7 + 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*q2.*q3.*s6 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s5.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 + 2.*a1.*a2.*b1.*b2.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b1.*b2 - 2.*a1.*a2.*b1.*b3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*b3.*s6 + 2.*a1.*a2.*b1.*q2.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b1.*q2 + 2.*a1.*a2.*b1.*q3.*s4.*s5 - 4.*s1.*a1.*a2.*b1.*q3.*s6 + 2.*a1.*a2.*b1.*s4.*s7 - 4.*s1.*a1.*a2.*b1.*s8 + 2.*a1.*a2.*b2.*b3.*s4.*s6 - 4.*s2.*a1.*a2.*b2.*b3.*s5 - 2.*a1.*a2.*b2.*q1.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b2.*q1 - 2.*a1.*a2.*b2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*q3.*s5 - 2.*a1.*a2.*b2.*s4.*s8 + 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 + 2.*a1.*a2.*b3.*q1.*s4.*s5 - 4.*s1.*a1.*a2.*b3.*q1.*s6 + 2.*a1.*a2.*b3.*q2.*s4.*s6 - 4.*s2.*a1.*a2.*b3.*q2.*s5 + 8.*s3.*a1.*a2.*b3.*q3.*s4 - 4.*a1.*a2.*b3.*q3.*s5.*s6 + 4.*a1.*a2.*b3.*s4.*s9 - 2.*a1.*a2.*b3.*s5.*s8 - 2.*a1.*a2.*b3.*s6.*s7 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*q1.*q3.*s6 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*q2.*q3.*s5 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s8 + 2.*a1.*a2.*q3.*s6.*s7 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 + 2.*a1.*a3.*b1.*b2.*s4.*s5 - 4.*s1.*a1.*a3.*b1.*b2.*s6 - 2.*a1.*a3.*b1.*b3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*b3 + 2.*a1.*a3.*b1.*q2.*s4.*s5 - 4.*s1.*a1.*a3.*b1.*q2.*s6 + 2.*a1.*a3.*b1.*q3.*s5.^2 - 8.*s1.*s3.*a1.*a3.*b1.*q3 + 2.*a1.*a3.*b1.*s5.*s7 - 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*b2.^2.*s5 - 4.*s3.*a1.*a3.*b2.*b3.*s4 + 2.*a1.*a3.*b2.*b3.*s5.*s6 - 2.*a1.*a3.*b2.*q1.*s4.*s5 + 4.*s1.*a1.*a3.*b2.*q1.*s6 + 4.*a1.*a3.*b2.*q2.*s4.*s6 - 8.*s2.*a1.*a3.*b2.*q2.*s5 + 4.*s3.*a1.*a3.*b2.*q3.*s4 - 2.*a1.*a3.*b2.*q3.*s5.*s6 + 2.*a1.*a3.*b2.*s4.*s9 - 4.*a1.*a3.*b2.*s5.*s8 + 2.*a1.*a3.*b2.*s6.*s7 + 2.*a1.*a3.*b3.*q1.*s5.^2 - 8.*s1.*s3.*a1.*a3.*b3.*q1 - 4.*s3.*a1.*a3.*b3.*q2.*s4 + 2.*a1.*a3.*b3.*q2.*s5.*s6 + 2.*a1.*a3.*b3.*s5.*s9 - 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*q1.*q2.*s6 - 2.*a1.*a3.*q1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s5.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*q2.^2.*s5 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 - 4.*a1.*a3.*q2.*s5.*s8 + 2.*a1.*a3.*q2.*s6.*s7 - 2.*a1.*a3.*q3.*s5.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s5 + 2.*a1.*a3.*s7.*s9 + 2.*a1.*b1.*b2.*s4.*s7 - 4.*s1.*a1.*b1.*b2.*s8 - 2.*a1.*b1.*b3.*s5.*s7 + 4.*s1.*a1.*b1.*b3.*s9 + 2.*a1.*b1.*q2.*s4.*s7 - 4.*s1.*a1.*b1.*q2.*s8 + 2.*a1.*b1.*q3.*s5.*s7 - 4.*s1.*a1.*b1.*q3.*s9 + 2.*a1.*b1.*s7.^2 - 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 - 2.*a1.*b2.*b3.*s4.*s9 - 2.*a1.*b2.*b3.*s5.*s8 + 4.*a1.*b2.*b3.*s6.*s7 - 2.*a1.*b2.*q1.*s4.*s7 + 4.*s1.*a1.*b2.*q1.*s8 + 4.*a1.*b2.*q2.*s4.*s8 - 8.*s2.*a1.*b2.*q2.*s7 + 2.*a1.*b2.*q3.*s4.*s9 + 2.*a1.*b2.*q3.*s5.*s8 - 4.*a1.*b2.*q3.*s6.*s7 + 4.*s10.*a1.*b2.*s4 - 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s5.*s9 - 4.*s3.*a1.*b3.^2.*s7 + 2.*a1.*b3.*q1.*s5.*s7 - 4.*s1.*a1.*b3.*q1.*s9 - 2.*a1.*b3.*q2.*s4.*s9 - 2.*a1.*b3.*q2.*s5.*s8 + 4.*a1.*b3.*q2.*s6.*s7 - 4.*a1.*b3.*q3.*s5.*s9 + 8.*s3.*a1.*b3.*q3.*s7 - 4.*s10.*a1.*b3.*s5 + 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s5.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 + 2.*a1.*q2.*q3.*s5.*s8 - 4.*a1.*q2.*q3.*s6.*s7 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s5.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s5 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 + 2.*a2.^2.*b1.*b3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*b3.*s5 - 2.*a2.^2.*b1.*q1.*s4.^2 + 8.*s1.*s2.*a2.^2.*b1.*q1 - 2.*a2.^2.*b1.*q3.*s4.*s6 + 4.*s2.*a2.^2.*b1.*q3.*s5 - 2.*a2.^2.*b1.*s4.*s8 + 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 - 2.*a2.^2.*b3.*q1.*s4.*s6 + 4.*s2.*a2.^2.*b3.*q1.*s5 - 2.*a2.^2.*b3.*q3.*s6.^2 + 8.*s2.*s3.*a2.^2.*b3.*q3 - 2.*a2.^2.*b3.*s6.*s8 + 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*q1.*q3.*s5 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s6.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*b1.^2.*s6 + 2.*a2.*a3.*b1.*b2.*s4.*s6 - 4.*s2.*a2.*a3.*b1.*b2.*s5 + 4.*s3.*a2.*a3.*b1.*b3.*s4 - 2.*a2.*a3.*b1.*b3.*s5.*s6 - 4.*a2.*a3.*b1.*q1.*s4.*s5 + 8.*s1.*a2.*a3.*b1.*q1.*s6 + 2.*a2.*a3.*b1.*q2.*s4.*s6 - 4.*s2.*a2.*a3.*b1.*q2.*s5 - 4.*s3.*a2.*a3.*b1.*q3.*s4 + 2.*a2.*a3.*b1.*q3.*s5.*s6 - 2.*a2.*a3.*b1.*s4.*s9 - 2.*a2.*a3.*b1.*s5.*s8 + 4.*a2.*a3.*b1.*s6.*s7 + 2.*a2.*a3.*b2.*b3.*s6.^2 - 8.*s2.*s3.*a2.*a3.*b2.*b3 - 2.*a2.*a3.*b2.*q1.*s4.*s6 + 4.*s2.*a2.*a3.*b2.*q1.*s5 - 2.*a2.*a3.*b2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*q3 - 2.*a2.*a3.*b2.*s6.*s8 + 4.*s2.*a2.*a3.*b2.*s9 - 4.*s3.*a2.*a3.*b3.*q1.*s4 + 2.*a2.*a3.*b3.*q1.*s5.*s6 + 2.*a2.*a3.*b3.*q2.*s6.^2 - 8.*s2.*s3.*a2.*a3.*b3.*q2 + 2.*a2.*a3.*b3.*s6.*s9 - 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*q1.^2.*s6 - 2.*a2.*a3.*q1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*q1.*q2.*s5 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 + 2.*a2.*a3.*q1.*s5.*s8 - 4.*a2.*a3.*q1.*s6.*s7 - 2.*a2.*a3.*q2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s6.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s6.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s6 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 + 2.*a2.*b1.*b2.*s4.*s8 - 4.*s2.*a2.*b1.*b2.*s7 + 2.*a2.*b1.*b3.*s4.*s9 - 4.*a2.*b1.*b3.*s5.*s8 + 2.*a2.*b1.*b3.*s6.*s7 - 4.*a2.*b1.*q1.*s4.*s7 + 8.*s1.*a2.*b1.*q1.*s8 + 2.*a2.*b1.*q2.*s4.*s8 - 4.*s2.*a2.*b1.*q2.*s7 - 2.*a2.*b1.*q3.*s4.*s9 + 4.*a2.*b1.*q3.*s5.*s8 - 2.*a2.*b1.*q3.*s6.*s7 - 4.*s10.*a2.*b1.*s4 + 2.*a2.*b1.*s7.*s8 + 2.*a2.*b2.*b3.*s6.*s8 - 4.*s2.*a2.*b2.*b3.*s9 - 2.*a2.*b2.*q1.*s4.*s8 + 4.*s2.*a2.*b2.*q1.*s7 - 2.*a2.*b2.*q3.*s6.*s8 + 4.*s2.*a2.*b2.*q3.*s9 - 2.*a2.*b2.*s8.^2 + 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s6.*s9 - 4.*s3.*a2.*b3.^2.*s8 - 2.*a2.*b3.*q1.*s4.*s9 + 4.*a2.*b3.*q1.*s5.*s8 - 2.*a2.*b3.*q1.*s6.*s7 + 2.*a2.*b3.*q2.*s6.*s8 - 4.*s2.*a2.*b3.*q2.*s9 - 4.*a2.*b3.*q3.*s6.*s9 + 8.*s3.*a2.*b3.*q3.*s8 - 4.*s10.*a2.*b3.*s6 + 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 - 4.*a2.*q1.*q3.*s5.*s8 + 2.*a2.*q1.*q3.*s6.*s7 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s6.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s6.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s6 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 + 4.*s3.*a3.^2.*b1.*b2.*s4 - 2.*a3.^2.*b1.*b2.*s5.*s6 - 2.*a3.^2.*b1.*q1.*s5.^2 + 8.*s1.*s3.*a3.^2.*b1.*q1 + 4.*s3.*a3.^2.*b1.*q2.*s4 - 2.*a3.^2.*b1.*q2.*s5.*s6 - 2.*a3.^2.*b1.*s5.*s9 + 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 - 4.*s3.*a3.^2.*b2.*q1.*s4 + 2.*a3.^2.*b2.*q1.*s5.*s6 + 2.*a3.^2.*b2.*q2.*s6.^2 - 8.*s2.*s3.*a3.^2.*b2.*q2 + 2.*a3.^2.*b2.*s6.*s9 - 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s5.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s6.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s5.*s7 - 4.*s1.*a3.*b1.^2.*s9 + 4.*a3.*b1.*b2.*s4.*s9 - 2.*a3.*b1.*b2.*s5.*s8 - 2.*a3.*b1.*b2.*s6.*s7 - 2.*a3.*b1.*b3.*s5.*s9 + 4.*s3.*a3.*b1.*b3.*s7 - 4.*a3.*b1.*q1.*s5.*s7 + 8.*s1.*a3.*b1.*q1.*s9 + 4.*a3.*b1.*q2.*s4.*s9 - 2.*a3.*b1.*q2.*s5.*s8 - 2.*a3.*b1.*q2.*s6.*s7 + 2.*a3.*b1.*q3.*s5.*s9 - 4.*s3.*a3.*b1.*q3.*s7 - 4.*s10.*a3.*b1.*s5 + 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s6.*s8 - 4.*s2.*a3.*b2.^2.*s9 + 2.*a3.*b2.*b3.*s6.*s9 - 4.*s3.*a3.*b2.*b3.*s8 - 4.*a3.*b2.*q1.*s4.*s9 + 2.*a3.*b2.*q1.*s5.*s8 + 2.*a3.*b2.*q1.*s6.*s7 + 4.*a3.*b2.*q2.*s6.*s8 - 8.*s2.*a3.*b2.*q2.*s9 - 2.*a3.*b2.*q3.*s6.*s9 + 4.*s3.*a3.*b2.*q3.*s8 + 4.*s10.*a3.*b2.*s6 - 2.*a3.*b2.*s8.*s9 + 2.*a3.*b3.*q1.*s5.*s9 - 4.*s3.*a3.*b3.*q1.*s7 + 2.*a3.*b3.*q2.*s6.*s9 - 4.*s3.*a3.*b3.*q2.*s8 + 2.*a3.*b3.*s9.^2 - 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s5.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s8 + 2.*a3.*q1.*q2.*s6.*s7 - 2.*a3.*q1.*q3.*s5.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s5 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s6.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s6.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s6 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 + 4.*s10.*b1.*b2.*s4 - 2.*b1.*b2.*s7.*s8 - 4.*s10.*b1.*b3.*s5 + 2.*b1.*b3.*s7.*s9 - 2.*b1.*q1.*s7.^2 + 8.*s1.*s10.*b1.*q1 + 4.*s10.*b1.*q2.*s4 - 2.*b1.*q2.*s7.*s8 + 4.*s10.*b1.*q3.*s5 - 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 + 4.*s10.*b2.*b3.*s6 - 2.*b2.*b3.*s8.*s9 - 4.*s10.*b2.*q1.*s4 + 2.*b2.*q1.*s7.*s8 + 2.*b2.*q2.*s8.^2 - 8.*s2.*s10.*b2.*q2 - 4.*s10.*b2.*q3.*s6 + 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 + 4.*s10.*b3.*q1.*s5 - 2.*b3.*q1.*s7.*s9 + 4.*s10.*b3.*q2.*s6 - 2.*b3.*q2.*s8.*s9 - 2.*b3.*q3.*s9.^2 + 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s5 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s6 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b3.*q1.*s7.^2 - 4.*b1.*q3.*s9.^2 - 8.*b1.^2.*s5.*s10 + 4.*b1.^2.*s7.*s9 + 8.*b3.^2.*s5.*s10 - 4.*b3.^2.*s7.*s9 - 4.*a1.*b3.*s7.^2 + 4.*a3.*b1.*s9.^2 - 4.*b1.*b3.*s7.^2 + 4.*b1.*b3.*s9.^2 + 16.*a1.*b3.*s1.*s10 - 8.*a1.*b1.*s5.*s10 - 16.*a3.*b1.*s3.*s10 + 4.*a1.*b1.*s7.*s9 - 8.*a2.*b1.*s6.*s10 + 8.*a2.*b3.*s4.*s10 + 4.*a2.*b1.*s8.*s9 - 4.*a2.*b3.*s7.*s8 + 8.*a3.*b3.*s5.*s10 - 4.*a3.*b3.*s7.*s9 + 16.*b1.*b3.*s1.*s10 - 16.*b1.*b3.*s3.*s10 + 8.*b1.*b2.*s6.*s10 - 8.*b2.*b3.*s4.*s10 - 4.*b1.*b2.*s8.*s9 + 4.*b2.*b3.*s7.*s8 - 16.*b3.*q1.*s1.*s10 + 8.*b1.*q1.*s5.*s10 + 16.*b1.*q3.*s3.*s10 - 4.*b1.*q1.*s7.*s9 + 8.*b1.*q2.*s6.*s10 - 8.*b3.*q2.*s4.*s10 - 4.*b1.*q2.*s8.*s9 + 4.*b3.*q2.*s7.*s8 - 8.*b3.*q3.*s5.*s10 + 4.*b3.*q3.*s7.*s9 + 8.*a1.*b1.^2.*s1.*s9 + 8.*a1.^2.*b1.*s1.*s9 - 4.*a1.*b1.^2.*s5.*s7 - 8.*a1.*b3.^2.*s1.*s9 + 8.*a3.*b1.^2.*s3.*s7 - 4.*a1.^2.*b1.*s5.*s7 + 8.*a2.^2.*b1.*s2.*s9 - 8.*a2.^2.*b3.*s2.*s7 + 4.*a1.*b3.^2.*s5.*s7 + 4.*a2.*b1.^2.*s4.*s9 - 8.*a2.*b1.^2.*s5.*s8 + 4.*a2.*b1.^2.*s6.*s7 - 8.*a3.*b3.^2.*s3.*s7 - 8.*a3.^2.*b3.*s3.*s7 - 4.*a2.^2.*b1.*s6.*s8 + 4.*a2.^2.*b3.*s4.*s8 - 4.*a2.*b3.^2.*s4.*s9 + 8.*a2.*b3.^2.*s5.*s8 - 4.*a2.*b3.^2.*s6.*s7 - 4.*a3.*b1.^2.*s5.*s9 + 4.*a3.*b3.^2.*s5.*s9 + 4.*a3.^2.*b3.*s5.*s9 - 4.*a1.*a3.*b1.^2.*s5.^2 + 4.*a1.*a3.*b3.^2.*s5.^2 + 4.*a1.^2.*b1.*b3.*s5.^2 - 4.*a2.^2.*b1.*b3.*s4.^2 + 4.*a2.^2.*b1.*b3.*s6.^2 - 4.*a3.^2.*b1.*b3.*s5.^2 - 4.*a1.^2.*b1.*q3.*s5.^2 + 4.*a2.^2.*b3.*q1.*s4.^2 - 4.*a2.^2.*b1.*q3.*s6.^2 + 4.*a3.^2.*b3.*q1.*s5.^2 - 8.*a2.^2.*b1.^2.*s2.*s5 + 8.*a2.^2.*b3.^2.*s2.*s5 + 4.*a2.^2.*b1.^2.*s4.*s6 - 4.*a2.^2.*b3.^2.*s4.*s6 + 8.*a1.*a2.*b3.*s1.*s8 - 8.*a1.*a3.*b1.*s3.*s7 + 8.*a1.*a2.*b1.*s4.*s9 - 4.*a1.*a2.*b1.*s5.*s8 - 4.*a1.*a2.*b1.*s6.*s7 - 4.*a1.*a2.*b3.*s4.*s7 + 8.*a1.*a3.*b3.*s1.*s9 - 8.*a2.*a3.*b1.*s3.*s8 + 4.*a1.*a3.*b1.*s5.*s9 - 4.*a1.*a3.*b3.*s5.*s7 + 4.*a2.*a3.*b1.*s6.*s9 + 4.*a2.*a3.*b3.*s4.*s9 + 4.*a2.*a3.*b3.*s5.*s8 - 8.*a2.*a3.*b3.*s6.*s7 - 16.*a1.*b1.*b3.*s3.*s7 + 8.*a1.*b2.*b3.*s1.*s8 + 16.*a2.*b1.*b3.*s1.*s8 - 8.*a2.*b1.*b2.*s2.*s9 + 8.*a2.*b2.*b3.*s2.*s7 - 4.*a1.*b1.*b2.*s4.*s9 - 4.*a1.*b1.*b2.*s5.*s8 + 8.*a1.*b1.*b2.*s6.*s7 - 4.*a1.*b2.*b3.*s4.*s7 - 16.*a2.*b1.*b3.*s3.*s8 - 8.*a2.*b1.*b3.*s4.*s7 - 8.*a3.*b1.*b2.*s3.*s8 + 16.*a3.*b1.*b3.*s1.*s9 + 8.*a1.*b1.*b3.*s5.*s9 + 4.*a2.*b1.*b2.*s6.*s8 - 4.*a2.*b2.*b3.*s4.*s8 - 8.*a3.*b1.*b3.*s5.*s7 + 8.*a2.*b1.*b3.*s6.*s9 + 4.*a3.*b1.*b2.*s6.*s9 - 8.*a3.*b2.*b3.*s4.*s9 + 4.*a3.*b2.*b3.*s5.*s8 + 4.*a3.*b2.*b3.*s6.*s7 - 8.*a1.*b1.*q1.*s1.*s9 + 4.*a1.*b1.*q1.*s5.*s7 + 16.*a1.*b1.*q3.*s3.*s7 + 8.*a1.*b3.*q2.*s1.*s8 - 16.*a2.*b3.*q1.*s1.*s8 - 8.*a3.*b1.*q1.*s3.*s7 - 8.*a2.*b1.*q2.*s2.*s9 + 8.*a2.*b3.*q2.*s2.*s7 - 4.*a1.*b1.*q2.*s4.*s9 - 4.*a1.*b1.*q2.*s5.*s8 + 8.*a1.*b1.*q2.*s6.*s7 - 4.*a1.*b3.*q2.*s4.*s7 + 8.*a1.*b3.*q3.*s1.*s9 - 4.*a2.*b1.*q1.*s4.*s9 + 8.*a2.*b1.*q1.*s5.*s8 - 4.*a2.*b1.*q1.*s6.*s7 + 16.*a2.*b1.*q3.*s3.*s8 + 8.*a2.*b3.*q1.*s4.*s7 - 8.*a3.*b1.*q2.*s3.*s8 - 16.*a3.*b3.*q1.*s1.*s9 - 8.*a1.*b1.*q3.*s5.*s9 - 4.*a1.*b3.*q3.*s5.*s7 + 4.*a2.*b1.*q2.*s6.*s8 - 4.*a2.*b3.*q2.*s4.*s8 + 4.*a3.*b1.*q1.*s5.*s9 + 8.*a3.*b3.*q1.*s5.*s7 + 8.*a3.*b3.*q3.*s3.*s7 - 8.*a2.*b1.*q3.*s6.*s9 + 4.*a2.*b3.*q3.*s4.*s9 - 8.*a2.*b3.*q3.*s5.*s8 + 4.*a2.*b3.*q3.*s6.*s7 + 4.*a3.*b1.*q2.*s6.*s9 - 8.*a3.*b3.*q2.*s4.*s9 + 4.*a3.*b3.*q2.*s5.*s8 + 4.*a3.*b3.*q2.*s6.*s7 - 4.*a3.*b3.*q3.*s5.*s9 - 4.*a1.*a2.*b2.*b3.*s4.^2 + 4.*a2.*a3.*b1.*b2.*s6.^2 + 4.*a1.*a3.*b1.*q1.*s5.^2 - 4.*a1.*a2.*b3.*q2.*s4.^2 + 4.*a2.*a3.*b1.*q2.*s6.^2 - 4.*a1.*a3.*b3.*q3.*s5.^2 + 16.*a1.*a3.*b1.^2.*s1.*s3 + 8.*a1.*a2.*b1.^2.*s1.*s6 - 16.*a1.*a3.*b3.^2.*s1.*s3 - 4.*a1.*a2.*b1.^2.*s4.*s5 - 8.*a1.*a2.*b3.^2.*s1.*s6 + 8.*a2.*a3.*b1.^2.*s3.*s4 + 4.*a1.*a2.*b3.^2.*s4.*s5 - 8.*a2.*a3.*b3.^2.*s3.*s4 - 4.*a2.*a3.*b1.^2.*s5.*s6 + 4.*a2.*a3.*b3.^2.*s5.*s6 - 16.*a1.^2.*b1.*b3.*s1.*s3 + 16.*a2.^2.*b1.*b3.*s1.*s2 + 8.*a1.^2.*b1.*b2.*s1.*s6 - 16.*a2.^2.*b1.*b3.*s2.*s3 + 16.*a3.^2.*b1.*b3.*s1.*s3 - 4.*a1.^2.*b1.*b2.*s4.*s5 - 8.*a3.^2.*b2.*b3.*s3.*s4 + 4.*a3.^2.*b2.*b3.*s5.*s6 + 16.*a1.^2.*b1.*q3.*s1.*s3 - 16.*a2.^2.*b3.*q1.*s1.*s2 + 8.*a1.^2.*b1.*q2.*s1.*s6 + 8.*a2.^2.*b1.*q1.*s2.*s5 + 16.*a2.^2.*b1.*q3.*s2.*s3 - 16.*a3.^2.*b3.*q1.*s1.*s3 - 4.*a1.^2.*b1.*q2.*s4.*s5 - 4.*a2.^2.*b1.*q1.*s4.*s6 - 8.*a2.^2.*b3.*q3.*s2.*s5 - 8.*a3.^2.*b3.*q2.*s3.*s4 + 4.*a2.^2.*b3.*q3.*s4.*s6 + 4.*a3.^2.*b3.*q2.*s5.*s6 + 16.*a1.*a2.*b2.*b3.*s1.*s2 - 8.*a1.*a2.*b1.*b2.*s2.*s5 - 16.*a2.*a3.*b1.*b2.*s2.*s3 - 16.*a1.*a2.*b1.*b3.*s3.*s4 - 8.*a1.*a3.*b1.*b2.*s3.*s4 + 4.*a1.*a2.*b1.*b2.*s4.*s6 + 8.*a1.*a3.*b2.*b3.*s1.*s6 + 16.*a2.*a3.*b1.*b3.*s1.*s6 + 8.*a2.*a3.*b2.*b3.*s2.*s5 + 8.*a1.*a2.*b1.*b3.*s5.*s6 + 4.*a1.*a3.*b1.*b2.*s5.*s6 - 4.*a1.*a3.*b2.*b3.*s4.*s5 - 8.*a2.*a3.*b1.*b3.*s4.*s5 - 4.*a2.*a3.*b2.*b3.*s4.*s6 - 16.*a1.*a3.*b1.*q1.*s1.*s3 + 16.*a1.*a2.*b3.*q2.*s1.*s2 - 8.*a1.*a2.*b1.*q1.*s1.*s6 - 8.*a1.*a2.*b1.*q2.*s2.*s5 - 16.*a2.*a3.*b1.*q2.*s2.*s3 + 4.*a1.*a2.*b1.*q1.*s4.*s5 + 16.*a1.*a2.*b1.*q3.*s3.*s4 - 8.*a1.*a3.*b1.*q2.*s3.*s4 + 16.*a1.*a3.*b3.*q3.*s1.*s3 - 8.*a2.*a3.*b1.*q1.*s3.*s4 + 4.*a1.*a2.*b1.*q2.*s4.*s6 + 8.*a1.*a2.*b3.*q3.*s1.*s6 + 8.*a1.*a3.*b3.*q2.*s1.*s6 - 16.*a2.*a3.*b3.*q1.*s1.*s6 + 8.*a2.*a3.*b3.*q2.*s2.*s5 - 8.*a1.*a2.*b1.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*q3.*s4.*s5 + 4.*a1.*a3.*b1.*q2.*s5.*s6 - 4.*a1.*a3.*b3.*q2.*s4.*s5 + 4.*a2.*a3.*b1.*q1.*s5.*s6 + 8.*a2.*a3.*b3.*q1.*s4.*s5 + 8.*a2.*a3.*b3.*q3.*s3.*s4 - 4.*a2.*a3.*b3.*q2.*s4.*s6 - 4.*a2.*a3.*b3.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*q1.^2.*s7.^2 + 2.*q2.^2.*s8.^2 + 2.*q3.^2.*s9.^2 + 2.*a1.^2.*s7.^2 + 2.*a2.^2.*s8.^2 + 2.*a3.^2.*s9.^2 - 2.*b1.^2.*s7.^2 + 4.*b1.^2.*s9.^2 + 2.*b2.^2.*s8.^2 + 4.*b3.^2.*s7.^2 - 2.*b3.^2.*s9.^2 - 4.*a1.*q1.*s7.^2 - 4.*a2.*q2.*s8.^2 - 4.*a3.*q3.*s9.^2 + 4.*b2.*q2.*s8.^2 - 8.*a1.^2.*s1.*s10 - 8.*a2.^2.*s2.*s10 - 8.*a3.^2.*s3.*s10 + 8.*b1.^2.*s1.*s10 - 16.*b1.^2.*s3.*s10 - 8.*b2.^2.*s2.*s10 - 16.*b3.^2.*s1.*s10 + 8.*b3.^2.*s3.*s10 - 8.*q1.^2.*s1.*s10 - 8.*q2.^2.*s2.*s10 - 8.*q3.^2.*s3.*s10 + 4.*a1.^2.*b1.^2.*s5.^2 + 2.*a1.^2.*b2.^2.*s4.^2 - 2.*a2.^2.*b1.^2.*s4.^2 - 2.*a1.^2.*b3.^2.*s5.^2 + 4.*a2.^2.*b1.^2.*s6.^2 + 4.*a2.^2.*b3.^2.*s4.^2 - 2.*a3.^2.*b1.^2.*s5.^2 - 2.*a2.^2.*b3.^2.*s6.^2 + 2.*a3.^2.*b2.^2.*s6.^2 + 4.*a3.^2.*b3.^2.*s5.^2 + 2.*a1.^2.*q2.^2.*s4.^2 + 2.*a2.^2.*q1.^2.*s4.^2 + 2.*a1.^2.*q3.^2.*s5.^2 + 2.*a3.^2.*q1.^2.*s5.^2 + 2.*a2.^2.*q3.^2.*s6.^2 + 2.*a3.^2.*q2.^2.*s6.^2 - 4.*a2.*b2.*s8.^2 - 8.*a1.*a2.*s4.*s10 + 4.*a1.*a2.*s7.*s8 - 8.*a1.*a3.*s5.*s10 + 4.*a1.*a3.*s7.*s9 - 8.*a2.*a3.*s6.*s10 + 4.*a2.*a3.*s8.*s9 + 16.*a2.*b2.*s2.*s10 + 8.*a1.*b2.*s4.*s10 - 4.*a1.*b2.*s7.*s8 + 8.*a3.*b2.*s6.*s10 - 4.*a3.*b2.*s8.*s9 + 24.*b1.*b3.*s5.*s10 - 12.*b1.*b3.*s7.*s9 + 16.*a1.*q1.*s1.*s10 + 16.*a2.*q2.*s2.*s10 + 8.*a1.*q2.*s4.*s10 + 8.*a2.*q1.*s4.*s10 - 4.*a1.*q2.*s7.*s8 - 4.*a2.*q1.*s7.*s8 + 8.*a1.*q3.*s5.*s10 + 8.*a3.*q1.*s5.*s10 + 16.*a3.*q3.*s3.*s10 - 4.*a1.*q3.*s7.*s9 - 4.*a3.*q1.*s7.*s9 + 8.*a2.*q3.*s6.*s10 + 8.*a3.*q2.*s6.*s10 - 4.*a2.*q3.*s8.*s9 - 4.*a3.*q2.*s8.*s9 - 16.*b2.*q2.*s2.*s10 - 8.*b2.*q1.*s4.*s10 + 4.*b2.*q1.*s7.*s8 - 8.*b2.*q3.*s6.*s10 + 4.*b2.*q3.*s8.*s9 - 8.*q1.*q2.*s4.*s10 + 4.*q1.*q2.*s7.*s8 - 8.*q1.*q3.*s5.*s10 + 4.*q1.*q3.*s7.*s9 - 8.*q2.*q3.*s6.*s10 + 4.*q2.*q3.*s8.*s9 - 16.*a1.*b1.^2.*s3.*s7 - 8.*a1.*b2.^2.*s2.*s7 + 8.*a2.*b1.^2.*s1.*s8 - 8.*a1.^2.*b2.*s1.*s8 + 8.*a1.*b3.^2.*s3.*s7 - 16.*a2.*b1.^2.*s3.*s8 - 4.*a2.*b1.^2.*s4.*s7 - 16.*a2.*b3.^2.*s1.*s8 + 8.*a3.*b1.^2.*s1.*s9 + 4.*a1.^2.*b2.*s4.*s7 + 4.*a1.*b2.^2.*s4.*s8 + 8.*a1.*b1.^2.*s5.*s9 + 8.*a2.*b3.^2.*s3.*s8 + 8.*a2.*b3.^2.*s4.*s7 - 4.*a3.*b1.^2.*s5.*s7 - 8.*a3.*b2.^2.*s2.*s9 - 16.*a3.*b3.^2.*s1.*s9 - 8.*a3.^2.*b2.*s3.*s8 - 4.*a1.*b3.^2.*s5.*s9 + 8.*a2.*b1.^2.*s6.*s9 + 8.*a3.*b3.^2.*s5.*s7 + 4.*a3.*b2.^2.*s6.*s8 - 4.*a2.*b3.^2.*s6.*s9 + 4.*a3.^2.*b2.*s6.*s9 - 8.*a1.*q2.^2.*s2.*s7 - 8.*a2.*q1.^2.*s1.*s8 - 8.*a1.^2.*q2.*s1.*s8 - 8.*a2.^2.*q1.*s2.*s7 - 8.*a1.*q3.^2.*s3.*s7 + 4.*a2.*q1.^2.*s4.*s7 - 8.*a3.*q1.^2.*s1.*s9 + 4.*a1.^2.*q2.*s4.*s7 - 8.*a1.^2.*q3.*s1.*s9 - 8.*a3.^2.*q1.*s3.*s7 + 4.*a1.*q2.^2.*s4.*s8 + 4.*a2.^2.*q1.*s4.*s8 - 8.*a2.*q3.^2.*s3.*s8 + 4.*a3.*q1.^2.*s5.*s7 - 8.*a3.*q2.^2.*s2.*s9 + 4.*a1.^2.*q3.*s5.*s7 - 8.*a2.^2.*q3.*s2.*s9 - 8.*a3.^2.*q2.*s3.*s8 + 4.*a1.*q3.^2.*s5.*s9 + 4.*a3.^2.*q1.*s5.*s9 + 4.*a3.*q2.^2.*s6.*s8 + 4.*a2.^2.*q3.*s6.*s8 + 4.*a2.*q3.^2.*s6.*s9 + 4.*a3.^2.*q2.*s6.*s9 + 4.*a1.^2.*b2.*q2.*s4.^2 + 4.*a3.^2.*b2.*q2.*s6.^2 - 16.*a1.^2.*b1.^2.*s1.*s3 - 8.*a1.^2.*b2.^2.*s1.*s2 + 8.*a2.^2.*b1.^2.*s1.*s2 + 8.*a1.^2.*b3.^2.*s1.*s3 - 16.*a2.^2.*b1.^2.*s2.*s3 - 16.*a2.^2.*b3.^2.*s1.*s2 + 8.*a3.^2.*b1.^2.*s1.*s3 + 8.*a2.^2.*b3.^2.*s2.*s3 - 8.*a3.^2.*b2.^2.*s2.*s3 - 16.*a3.^2.*b3.^2.*s1.*s3 - 8.*a1.^2.*q2.^2.*s1.*s2 - 8.*a2.^2.*q1.^2.*s1.*s2 - 8.*a1.^2.*q3.^2.*s1.*s3 - 8.*a3.^2.*q1.^2.*s1.*s3 - 8.*a2.^2.*q3.^2.*s2.*s3 - 8.*a3.^2.*q2.^2.*s2.*s3 + 8.*a1.*a2.*b2.*s2.*s7 - 4.*a1.*a2.*b2.*s4.*s8 + 8.*a2.*a3.*b2.*s2.*s9 + 4.*a1.*a3.*b2.*s4.*s9 - 8.*a1.*a3.*b2.*s5.*s8 + 4.*a1.*a3.*b2.*s6.*s7 - 4.*a2.*a3.*b2.*s6.*s8 - 24.*a1.*b1.*b3.*s1.*s9 + 12.*a1.*b1.*b3.*s5.*s7 - 24.*a3.*b1.*b3.*s3.*s7 - 12.*a2.*b1.*b3.*s4.*s9 + 24.*a2.*b1.*b3.*s5.*s8 - 12.*a2.*b1.*b3.*s6.*s7 + 12.*a3.*b1.*b3.*s5.*s9 + 8.*a1.*a2.*q1.*s1.*s8 + 8.*a1.*a2.*q2.*s2.*s7 - 4.*a1.*a2.*q1.*s4.*s7 + 8.*a1.*a3.*q1.*s1.*s9 - 4.*a1.*a2.*q2.*s4.*s8 - 4.*a1.*a3.*q1.*s5.*s7 + 8.*a1.*a3.*q3.*s3.*s7 + 8.*a2.*a3.*q2.*s2.*s9 - 8.*a1.*a2.*q3.*s4.*s9 + 4.*a1.*a2.*q3.*s5.*s8 + 4.*a1.*a2.*q3.*s6.*s7 + 4.*a1.*a3.*q2.*s4.*s9 - 8.*a1.*a3.*q2.*s5.*s8 + 4.*a1.*a3.*q2.*s6.*s7 + 4.*a2.*a3.*q1.*s4.*s9 + 4.*a2.*a3.*q1.*s5.*s8 - 8.*a2.*a3.*q1.*s6.*s7 + 8.*a2.*a3.*q3.*s3.*s8 - 4.*a1.*a3.*q3.*s5.*s9 - 4.*a2.*a3.*q2.*s6.*s8 - 4.*a2.*a3.*q3.*s6.*s9 + 8.*a1.*b2.*q1.*s1.*s8 - 16.*a1.*b2.*q2.*s2.*s7 + 8.*a2.*b2.*q1.*s2.*s7 - 4.*a1.*b2.*q1.*s4.*s7 + 8.*a1.*b2.*q2.*s4.*s8 - 4.*a2.*b2.*q1.*s4.*s8 + 8.*a2.*b2.*q3.*s2.*s9 - 16.*a3.*b2.*q2.*s2.*s9 + 4.*a1.*b2.*q3.*s4.*s9 + 4.*a1.*b2.*q3.*s5.*s8 - 8.*a1.*b2.*q3.*s6.*s7 - 8.*a3.*b2.*q1.*s4.*s9 + 4.*a3.*b2.*q1.*s5.*s8 + 4.*a3.*b2.*q1.*s6.*s7 + 8.*a3.*b2.*q3.*s3.*s8 - 4.*a2.*b2.*q3.*s6.*s8 + 8.*a3.*b2.*q2.*s6.*s8 - 4.*a3.*b2.*q3.*s6.*s9 + 8.*a1.*q1.*q2.*s1.*s8 + 8.*a2.*q1.*q2.*s2.*s7 - 4.*a1.*q1.*q2.*s4.*s7 + 8.*a1.*q1.*q3.*s1.*s9 - 4.*a1.*q1.*q3.*s5.*s7 - 4.*a2.*q1.*q2.*s4.*s8 + 8.*a3.*q1.*q3.*s3.*s7 + 8.*a2.*q2.*q3.*s2.*s9 + 4.*a1.*q2.*q3.*s4.*s9 + 4.*a1.*q2.*q3.*s5.*s8 - 8.*a1.*q2.*q3.*s6.*s7 + 4.*a2.*q1.*q3.*s4.*s9 - 8.*a2.*q1.*q3.*s5.*s8 + 4.*a2.*q1.*q3.*s6.*s7 - 8.*a3.*q1.*q2.*s4.*s9 + 4.*a3.*q1.*q2.*s5.*s8 + 4.*a3.*q1.*q2.*s6.*s7 + 8.*a3.*q2.*q3.*s3.*s8 - 4.*a2.*q2.*q3.*s6.*s8 - 4.*a3.*q1.*q3.*s5.*s9 - 4.*a3.*q2.*q3.*s6.*s9 + 12.*a1.*a3.*b1.*b3.*s5.^2 - 4.*a1.*a2.*b2.*q1.*s4.^2 - 4.*a2.*a3.*b2.*q3.*s6.^2 - 16.*a1.*a2.*b1.^2.*s3.*s4 + 8.*a1.*a2.*b3.^2.*s3.*s4 - 8.*a1.*a3.*b2.^2.*s2.*s5 + 8.*a2.*a3.*b1.^2.*s1.*s6 + 8.*a1.*a2.*b1.^2.*s5.*s6 - 4.*a2.*a3.*b1.^2.*s4.*s5 - 16.*a2.*a3.*b3.^2.*s1.*s6 + 4.*a1.*a3.*b2.^2.*s4.*s6 - 4.*a1.*a2.*b3.^2.*s5.*s6 + 8.*a2.*a3.*b3.^2.*s4.*s5 + 24.*a2.^2.*b1.*b3.*s2.*s5 - 12.*a2.^2.*b1.*b3.*s4.*s6 - 4.*a1.*a2.*q1.*q2.*s4.^2 - 4.*a1.*a3.*q1.*q3.*s5.^2 - 4.*a2.*a3.*q2.*q3.*s6.^2 - 8.*a1.*a2.*q3.^2.*s3.*s4 - 8.*a1.*a3.*q2.^2.*s2.*s5 - 8.*a2.*a3.*q1.^2.*s1.*s6 + 4.*a2.*a3.*q1.^2.*s4.*s5 + 4.*a1.*a3.*q2.^2.*s4.*s6 + 4.*a1.*a2.*q3.^2.*s5.*s6 - 16.*a1.^2.*b2.*q2.*s1.*s2 - 16.*a3.^2.*b2.*q2.*s2.*s3 - 8.*a1.^2.*b2.*q3.*s1.*s6 - 8.*a3.^2.*b2.*q1.*s3.*s4 + 4.*a1.^2.*b2.*q3.*s4.*s5 + 4.*a3.^2.*b2.*q1.*s5.*s6 - 8.*a1.^2.*q2.*q3.*s1.*s6 - 8.*a2.^2.*q1.*q3.*s2.*s5 - 8.*a3.^2.*q1.*q2.*s3.*s4 + 4.*a1.^2.*q2.*q3.*s4.*s5 + 4.*a2.^2.*q1.*q3.*s4.*s6 + 4.*a3.^2.*q1.*q2.*s5.*s6 - 48.*a1.*a3.*b1.*b3.*s1.*s3 - 24.*a1.*a2.*b1.*b3.*s1.*s6 + 12.*a1.*a2.*b1.*b3.*s4.*s5 - 24.*a2.*a3.*b1.*b3.*s3.*s4 + 12.*a2.*a3.*b1.*b3.*s5.*s6 + 16.*a1.*a2.*b2.*q1.*s1.*s2 + 8.*a1.*a3.*b2.*q1.*s1.*s6 + 8.*a1.*a2.*b2.*q3.*s2.*s5 - 16.*a1.*a3.*b2.*q2.*s2.*s5 + 8.*a2.*a3.*b2.*q1.*s2.*s5 + 16.*a2.*a3.*b2.*q3.*s2.*s3 - 4.*a1.*a3.*b2.*q1.*s4.*s5 + 8.*a1.*a3.*b2.*q3.*s3.*s4 - 4.*a1.*a2.*b2.*q3.*s4.*s6 + 8.*a1.*a3.*b2.*q2.*s4.*s6 - 4.*a2.*a3.*b2.*q1.*s4.*s6 - 4.*a1.*a3.*b2.*q3.*s5.*s6 + 16.*a1.*a2.*q1.*q2.*s1.*s2 + 16.*a1.*a3.*q1.*q3.*s1.*s3 + 8.*a1.*a2.*q1.*q3.*s1.*s6 + 8.*a1.*a3.*q1.*q2.*s1.*s6 + 8.*a1.*a2.*q2.*q3.*s2.*s5 + 8.*a2.*a3.*q1.*q2.*s2.*s5 + 16.*a2.*a3.*q2.*q3.*s2.*s3 - 4.*a1.*a2.*q1.*q3.*s4.*s5 - 4.*a1.*a3.*q1.*q2.*s4.*s5 + 8.*a1.*a3.*q2.*q3.*s3.*s4 + 8.*a2.*a3.*q1.*q3.*s3.*s4 - 4.*a1.*a2.*q2.*q3.*s4.*s6 - 4.*a2.*a3.*q1.*q2.*s4.*s6 - 4.*a1.*a3.*q2.*q3.*s5.*s6 - 4.*a2.*a3.*q1.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b3.*q1.*s7.^2 - 4.*b1.*q3.*s9.^2 + 8.*b1.^2.*s5.*s10 - 4.*b1.^2.*s7.*s9 - 8.*b3.^2.*s5.*s10 + 4.*b3.^2.*s7.*s9 - 4.*a1.*b3.*s7.^2 + 4.*a3.*b1.*s9.^2 + 4.*b1.*b3.*s7.^2 - 4.*b1.*b3.*s9.^2 + 16.*a1.*b3.*s1.*s10 - 8.*a1.*b1.*s5.*s10 - 16.*a3.*b1.*s3.*s10 + 4.*a1.*b1.*s7.*s9 - 8.*a2.*b1.*s6.*s10 + 8.*a2.*b3.*s4.*s10 + 4.*a2.*b1.*s8.*s9 - 4.*a2.*b3.*s7.*s8 + 8.*a3.*b3.*s5.*s10 - 4.*a3.*b3.*s7.*s9 - 16.*b1.*b3.*s1.*s10 + 16.*b1.*b3.*s3.*s10 + 8.*b1.*b2.*s6.*s10 - 8.*b2.*b3.*s4.*s10 - 4.*b1.*b2.*s8.*s9 + 4.*b2.*b3.*s7.*s8 - 16.*b3.*q1.*s1.*s10 + 8.*b1.*q1.*s5.*s10 + 16.*b1.*q3.*s3.*s10 - 4.*b1.*q1.*s7.*s9 + 8.*b1.*q2.*s6.*s10 - 8.*b3.*q2.*s4.*s10 - 4.*b1.*q2.*s8.*s9 + 4.*b3.*q2.*s7.*s8 - 8.*b3.*q3.*s5.*s10 + 4.*b3.*q3.*s7.*s9 - 8.*a1.*b1.^2.*s1.*s9 + 8.*a1.^2.*b1.*s1.*s9 + 4.*a1.*b1.^2.*s5.*s7 + 8.*a1.*b3.^2.*s1.*s9 - 8.*a3.*b1.^2.*s3.*s7 - 4.*a1.^2.*b1.*s5.*s7 + 8.*a2.^2.*b1.*s2.*s9 - 8.*a2.^2.*b3.*s2.*s7 - 4.*a1.*b3.^2.*s5.*s7 - 4.*a2.*b1.^2.*s4.*s9 + 8.*a2.*b1.^2.*s5.*s8 - 4.*a2.*b1.^2.*s6.*s7 + 8.*a3.*b3.^2.*s3.*s7 - 8.*a3.^2.*b3.*s3.*s7 - 4.*a2.^2.*b1.*s6.*s8 + 4.*a2.^2.*b3.*s4.*s8 + 4.*a2.*b3.^2.*s4.*s9 - 8.*a2.*b3.^2.*s5.*s8 + 4.*a2.*b3.^2.*s6.*s7 + 4.*a3.*b1.^2.*s5.*s9 - 4.*a3.*b3.^2.*s5.*s9 + 4.*a3.^2.*b3.*s5.*s9 + 4.*a1.*a3.*b1.^2.*s5.^2 - 4.*a1.*a3.*b3.^2.*s5.^2 - 4.*a1.^2.*b1.*b3.*s5.^2 + 4.*a2.^2.*b1.*b3.*s4.^2 - 4.*a2.^2.*b1.*b3.*s6.^2 + 4.*a3.^2.*b1.*b3.*s5.^2 - 4.*a1.^2.*b1.*q3.*s5.^2 + 4.*a2.^2.*b3.*q1.*s4.^2 - 4.*a2.^2.*b1.*q3.*s6.^2 + 4.*a3.^2.*b3.*q1.*s5.^2 + 8.*a2.^2.*b1.^2.*s2.*s5 - 8.*a2.^2.*b3.^2.*s2.*s5 - 4.*a2.^2.*b1.^2.*s4.*s6 + 4.*a2.^2.*b3.^2.*s4.*s6 + 8.*a1.*a2.*b3.*s1.*s8 - 8.*a1.*a3.*b1.*s3.*s7 + 8.*a1.*a2.*b1.*s4.*s9 - 4.*a1.*a2.*b1.*s5.*s8 - 4.*a1.*a2.*b1.*s6.*s7 - 4.*a1.*a2.*b3.*s4.*s7 + 8.*a1.*a3.*b3.*s1.*s9 - 8.*a2.*a3.*b1.*s3.*s8 + 4.*a1.*a3.*b1.*s5.*s9 - 4.*a1.*a3.*b3.*s5.*s7 + 4.*a2.*a3.*b1.*s6.*s9 + 4.*a2.*a3.*b3.*s4.*s9 + 4.*a2.*a3.*b3.*s5.*s8 - 8.*a2.*a3.*b3.*s6.*s7 + 16.*a1.*b1.*b3.*s3.*s7 + 8.*a1.*b2.*b3.*s1.*s8 - 16.*a2.*b1.*b3.*s1.*s8 - 8.*a2.*b1.*b2.*s2.*s9 + 8.*a2.*b2.*b3.*s2.*s7 - 4.*a1.*b1.*b2.*s4.*s9 - 4.*a1.*b1.*b2.*s5.*s8 + 8.*a1.*b1.*b2.*s6.*s7 - 4.*a1.*b2.*b3.*s4.*s7 + 16.*a2.*b1.*b3.*s3.*s8 + 8.*a2.*b1.*b3.*s4.*s7 - 8.*a3.*b1.*b2.*s3.*s8 - 16.*a3.*b1.*b3.*s1.*s9 - 8.*a1.*b1.*b3.*s5.*s9 + 4.*a2.*b1.*b2.*s6.*s8 - 4.*a2.*b2.*b3.*s4.*s8 + 8.*a3.*b1.*b3.*s5.*s7 - 8.*a2.*b1.*b3.*s6.*s9 + 4.*a3.*b1.*b2.*s6.*s9 - 8.*a3.*b2.*b3.*s4.*s9 + 4.*a3.*b2.*b3.*s5.*s8 + 4.*a3.*b2.*b3.*s6.*s7 - 8.*a1.*b1.*q1.*s1.*s9 + 4.*a1.*b1.*q1.*s5.*s7 + 16.*a1.*b1.*q3.*s3.*s7 + 8.*a1.*b3.*q2.*s1.*s8 - 16.*a2.*b3.*q1.*s1.*s8 - 8.*a3.*b1.*q1.*s3.*s7 - 8.*a2.*b1.*q2.*s2.*s9 + 8.*a2.*b3.*q2.*s2.*s7 - 4.*a1.*b1.*q2.*s4.*s9 - 4.*a1.*b1.*q2.*s5.*s8 + 8.*a1.*b1.*q2.*s6.*s7 - 4.*a1.*b3.*q2.*s4.*s7 + 8.*a1.*b3.*q3.*s1.*s9 - 4.*a2.*b1.*q1.*s4.*s9 + 8.*a2.*b1.*q1.*s5.*s8 - 4.*a2.*b1.*q1.*s6.*s7 + 16.*a2.*b1.*q3.*s3.*s8 + 8.*a2.*b3.*q1.*s4.*s7 - 8.*a3.*b1.*q2.*s3.*s8 - 16.*a3.*b3.*q1.*s1.*s9 - 8.*a1.*b1.*q3.*s5.*s9 - 4.*a1.*b3.*q3.*s5.*s7 + 4.*a2.*b1.*q2.*s6.*s8 - 4.*a2.*b3.*q2.*s4.*s8 + 4.*a3.*b1.*q1.*s5.*s9 + 8.*a3.*b3.*q1.*s5.*s7 + 8.*a3.*b3.*q3.*s3.*s7 - 8.*a2.*b1.*q3.*s6.*s9 + 4.*a2.*b3.*q3.*s4.*s9 - 8.*a2.*b3.*q3.*s5.*s8 + 4.*a2.*b3.*q3.*s6.*s7 + 4.*a3.*b1.*q2.*s6.*s9 - 8.*a3.*b3.*q2.*s4.*s9 + 4.*a3.*b3.*q2.*s5.*s8 + 4.*a3.*b3.*q2.*s6.*s7 - 4.*a3.*b3.*q3.*s5.*s9 - 4.*a1.*a2.*b2.*b3.*s4.^2 + 4.*a2.*a3.*b1.*b2.*s6.^2 + 4.*a1.*a3.*b1.*q1.*s5.^2 - 4.*a1.*a2.*b3.*q2.*s4.^2 + 4.*a2.*a3.*b1.*q2.*s6.^2 - 4.*a1.*a3.*b3.*q3.*s5.^2 - 16.*a1.*a3.*b1.^2.*s1.*s3 - 8.*a1.*a2.*b1.^2.*s1.*s6 + 16.*a1.*a3.*b3.^2.*s1.*s3 + 4.*a1.*a2.*b1.^2.*s4.*s5 + 8.*a1.*a2.*b3.^2.*s1.*s6 - 8.*a2.*a3.*b1.^2.*s3.*s4 - 4.*a1.*a2.*b3.^2.*s4.*s5 + 8.*a2.*a3.*b3.^2.*s3.*s4 + 4.*a2.*a3.*b1.^2.*s5.*s6 - 4.*a2.*a3.*b3.^2.*s5.*s6 + 16.*a1.^2.*b1.*b3.*s1.*s3 - 16.*a2.^2.*b1.*b3.*s1.*s2 + 8.*a1.^2.*b1.*b2.*s1.*s6 + 16.*a2.^2.*b1.*b3.*s2.*s3 - 16.*a3.^2.*b1.*b3.*s1.*s3 - 4.*a1.^2.*b1.*b2.*s4.*s5 - 8.*a3.^2.*b2.*b3.*s3.*s4 + 4.*a3.^2.*b2.*b3.*s5.*s6 + 16.*a1.^2.*b1.*q3.*s1.*s3 - 16.*a2.^2.*b3.*q1.*s1.*s2 + 8.*a1.^2.*b1.*q2.*s1.*s6 + 8.*a2.^2.*b1.*q1.*s2.*s5 + 16.*a2.^2.*b1.*q3.*s2.*s3 - 16.*a3.^2.*b3.*q1.*s1.*s3 - 4.*a1.^2.*b1.*q2.*s4.*s5 - 4.*a2.^2.*b1.*q1.*s4.*s6 - 8.*a2.^2.*b3.*q3.*s2.*s5 - 8.*a3.^2.*b3.*q2.*s3.*s4 + 4.*a2.^2.*b3.*q3.*s4.*s6 + 4.*a3.^2.*b3.*q2.*s5.*s6 + 16.*a1.*a2.*b2.*b3.*s1.*s2 - 8.*a1.*a2.*b1.*b2.*s2.*s5 - 16.*a2.*a3.*b1.*b2.*s2.*s3 + 16.*a1.*a2.*b1.*b3.*s3.*s4 - 8.*a1.*a3.*b1.*b2.*s3.*s4 + 4.*a1.*a2.*b1.*b2.*s4.*s6 + 8.*a1.*a3.*b2.*b3.*s1.*s6 - 16.*a2.*a3.*b1.*b3.*s1.*s6 + 8.*a2.*a3.*b2.*b3.*s2.*s5 - 8.*a1.*a2.*b1.*b3.*s5.*s6 + 4.*a1.*a3.*b1.*b2.*s5.*s6 - 4.*a1.*a3.*b2.*b3.*s4.*s5 + 8.*a2.*a3.*b1.*b3.*s4.*s5 - 4.*a2.*a3.*b2.*b3.*s4.*s6 - 16.*a1.*a3.*b1.*q1.*s1.*s3 + 16.*a1.*a2.*b3.*q2.*s1.*s2 - 8.*a1.*a2.*b1.*q1.*s1.*s6 - 8.*a1.*a2.*b1.*q2.*s2.*s5 - 16.*a2.*a3.*b1.*q2.*s2.*s3 + 4.*a1.*a2.*b1.*q1.*s4.*s5 + 16.*a1.*a2.*b1.*q3.*s3.*s4 - 8.*a1.*a3.*b1.*q2.*s3.*s4 + 16.*a1.*a3.*b3.*q3.*s1.*s3 - 8.*a2.*a3.*b1.*q1.*s3.*s4 + 4.*a1.*a2.*b1.*q2.*s4.*s6 + 8.*a1.*a2.*b3.*q3.*s1.*s6 + 8.*a1.*a3.*b3.*q2.*s1.*s6 - 16.*a2.*a3.*b3.*q1.*s1.*s6 + 8.*a2.*a3.*b3.*q2.*s2.*s5 - 8.*a1.*a2.*b1.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*q3.*s4.*s5 + 4.*a1.*a3.*b1.*q2.*s5.*s6 - 4.*a1.*a3.*b3.*q2.*s4.*s5 + 4.*a2.*a3.*b1.*q1.*s5.*s6 + 8.*a2.*a3.*b3.*q1.*s4.*s5 + 8.*a2.*a3.*b3.*q3.*s3.*s4 - 4.*a2.*a3.*b3.*q2.*s4.*s6 - 4.*a2.*a3.*b3.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 + 2.*a1.^2.*b2.*b3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*b3.*s6 + 2.*a1.^2.*b2.*q2.*s4.^2 - 8.*s1.*s2.*a1.^2.*b2.*q2 + 2.*a1.^2.*b2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*q3.*s6 + 2.*a1.^2.*b2.*s4.*s7 - 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 + 2.*a1.^2.*b3.*q2.*s4.*s5 - 4.*s1.*a1.^2.*b3.*q2.*s6 + 2.*a1.^2.*b3.*q3.*s5.^2 - 8.*s1.*s3.*a1.^2.*b3.*q3 + 2.*a1.^2.*b3.*s5.*s7 - 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*q2.*q3.*s6 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s5.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 - 2.*a1.*a2.*b1.*b2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*b2 - 2.*a1.*a2.*b1.*b3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*b3.*s6 - 2.*a1.*a2.*b1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*q2 - 2.*a1.*a2.*b1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*q3.*s6 - 2.*a1.*a2.*b1.*s4.*s7 + 4.*s1.*a1.*a2.*b1.*s8 - 2.*a1.*a2.*b2.*b3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*b3.*s5 - 2.*a1.*a2.*b2.*q1.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b2.*q1 - 2.*a1.*a2.*b2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*q3.*s5 - 2.*a1.*a2.*b2.*s4.*s8 + 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 - 2.*a1.*a2.*b3.*q1.*s4.*s5 + 4.*s1.*a1.*a2.*b3.*q1.*s6 - 2.*a1.*a2.*b3.*q2.*s4.*s6 + 4.*s2.*a1.*a2.*b3.*q2.*s5 - 8.*s3.*a1.*a2.*b3.*q3.*s4 + 4.*a1.*a2.*b3.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*s4.*s9 + 2.*a1.*a2.*b3.*s5.*s8 + 2.*a1.*a2.*b3.*s6.*s7 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*q1.*q3.*s6 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*q2.*q3.*s5 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s8 + 2.*a1.*a2.*q3.*s6.*s7 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 - 2.*a1.*a3.*b1.*b2.*s4.*s5 + 4.*s1.*a1.*a3.*b1.*b2.*s6 - 2.*a1.*a3.*b1.*b3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*b3 - 2.*a1.*a3.*b1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*b1.*q2.*s6 - 2.*a1.*a3.*b1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*q3 - 2.*a1.*a3.*b1.*s5.*s7 + 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*b2.^2.*s5 + 4.*s3.*a1.*a3.*b2.*b3.*s4 - 2.*a1.*a3.*b2.*b3.*s5.*s6 - 2.*a1.*a3.*b2.*q1.*s4.*s5 + 4.*s1.*a1.*a3.*b2.*q1.*s6 + 4.*a1.*a3.*b2.*q2.*s4.*s6 - 8.*s2.*a1.*a3.*b2.*q2.*s5 + 4.*s3.*a1.*a3.*b2.*q3.*s4 - 2.*a1.*a3.*b2.*q3.*s5.*s6 + 2.*a1.*a3.*b2.*s4.*s9 - 4.*a1.*a3.*b2.*s5.*s8 + 2.*a1.*a3.*b2.*s6.*s7 - 2.*a1.*a3.*b3.*q1.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b3.*q1 + 4.*s3.*a1.*a3.*b3.*q2.*s4 - 2.*a1.*a3.*b3.*q2.*s5.*s6 - 2.*a1.*a3.*b3.*s5.*s9 + 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*q1.*q2.*s6 - 2.*a1.*a3.*q1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s5.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*q2.^2.*s5 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 - 4.*a1.*a3.*q2.*s5.*s8 + 2.*a1.*a3.*q2.*s6.*s7 - 2.*a1.*a3.*q3.*s5.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s5 + 2.*a1.*a3.*s7.*s9 - 2.*a1.*b1.*b2.*s4.*s7 + 4.*s1.*a1.*b1.*b2.*s8 - 2.*a1.*b1.*b3.*s5.*s7 + 4.*s1.*a1.*b1.*b3.*s9 - 2.*a1.*b1.*q2.*s4.*s7 + 4.*s1.*a1.*b1.*q2.*s8 - 2.*a1.*b1.*q3.*s5.*s7 + 4.*s1.*a1.*b1.*q3.*s9 - 2.*a1.*b1.*s7.^2 + 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 + 2.*a1.*b2.*b3.*s4.*s9 + 2.*a1.*b2.*b3.*s5.*s8 - 4.*a1.*b2.*b3.*s6.*s7 - 2.*a1.*b2.*q1.*s4.*s7 + 4.*s1.*a1.*b2.*q1.*s8 + 4.*a1.*b2.*q2.*s4.*s8 - 8.*s2.*a1.*b2.*q2.*s7 + 2.*a1.*b2.*q3.*s4.*s9 + 2.*a1.*b2.*q3.*s5.*s8 - 4.*a1.*b2.*q3.*s6.*s7 + 4.*s10.*a1.*b2.*s4 - 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s5.*s9 - 4.*s3.*a1.*b3.^2.*s7 - 2.*a1.*b3.*q1.*s5.*s7 + 4.*s1.*a1.*b3.*q1.*s9 + 2.*a1.*b3.*q2.*s4.*s9 + 2.*a1.*b3.*q2.*s5.*s8 - 4.*a1.*b3.*q2.*s6.*s7 + 4.*a1.*b3.*q3.*s5.*s9 - 8.*s3.*a1.*b3.*q3.*s7 + 4.*s10.*a1.*b3.*s5 - 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s5.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 + 2.*a1.*q2.*q3.*s5.*s8 - 4.*a1.*q2.*q3.*s6.*s7 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s5.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s5 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 + 2.*a2.^2.*b1.*b3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*b3.*s5 + 2.*a2.^2.*b1.*q1.*s4.^2 - 8.*s1.*s2.*a2.^2.*b1.*q1 + 2.*a2.^2.*b1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*q3.*s5 + 2.*a2.^2.*b1.*s4.*s8 - 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 + 2.*a2.^2.*b3.*q1.*s4.*s6 - 4.*s2.*a2.^2.*b3.*q1.*s5 + 2.*a2.^2.*b3.*q3.*s6.^2 - 8.*s2.*s3.*a2.^2.*b3.*q3 + 2.*a2.^2.*b3.*s6.*s8 - 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*q1.*q3.*s5 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s6.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*b1.^2.*s6 - 2.*a2.*a3.*b1.*b2.*s4.*s6 + 4.*s2.*a2.*a3.*b1.*b2.*s5 + 4.*s3.*a2.*a3.*b1.*b3.*s4 - 2.*a2.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b1.*q1.*s4.*s5 - 8.*s1.*a2.*a3.*b1.*q1.*s6 - 2.*a2.*a3.*b1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*b1.*q2.*s5 + 4.*s3.*a2.*a3.*b1.*q3.*s4 - 2.*a2.*a3.*b1.*q3.*s5.*s6 + 2.*a2.*a3.*b1.*s4.*s9 + 2.*a2.*a3.*b1.*s5.*s8 - 4.*a2.*a3.*b1.*s6.*s7 - 2.*a2.*a3.*b2.*b3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*b3 - 2.*a2.*a3.*b2.*q1.*s4.*s6 + 4.*s2.*a2.*a3.*b2.*q1.*s5 - 2.*a2.*a3.*b2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*q3 - 2.*a2.*a3.*b2.*s6.*s8 + 4.*s2.*a2.*a3.*b2.*s9 + 4.*s3.*a2.*a3.*b3.*q1.*s4 - 2.*a2.*a3.*b3.*q1.*s5.*s6 - 2.*a2.*a3.*b3.*q2.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b3.*q2 - 2.*a2.*a3.*b3.*s6.*s9 + 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*q1.^2.*s6 - 2.*a2.*a3.*q1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*q1.*q2.*s5 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 + 2.*a2.*a3.*q1.*s5.*s8 - 4.*a2.*a3.*q1.*s6.*s7 - 2.*a2.*a3.*q2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s6.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s6.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s6 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 - 2.*a2.*b1.*b2.*s4.*s8 + 4.*s2.*a2.*b1.*b2.*s7 + 2.*a2.*b1.*b3.*s4.*s9 - 4.*a2.*b1.*b3.*s5.*s8 + 2.*a2.*b1.*b3.*s6.*s7 + 4.*a2.*b1.*q1.*s4.*s7 - 8.*s1.*a2.*b1.*q1.*s8 - 2.*a2.*b1.*q2.*s4.*s8 + 4.*s2.*a2.*b1.*q2.*s7 + 2.*a2.*b1.*q3.*s4.*s9 - 4.*a2.*b1.*q3.*s5.*s8 + 2.*a2.*b1.*q3.*s6.*s7 + 4.*s10.*a2.*b1.*s4 - 2.*a2.*b1.*s7.*s8 - 2.*a2.*b2.*b3.*s6.*s8 + 4.*s2.*a2.*b2.*b3.*s9 - 2.*a2.*b2.*q1.*s4.*s8 + 4.*s2.*a2.*b2.*q1.*s7 - 2.*a2.*b2.*q3.*s6.*s8 + 4.*s2.*a2.*b2.*q3.*s9 - 2.*a2.*b2.*s8.^2 + 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s6.*s9 - 4.*s3.*a2.*b3.^2.*s8 + 2.*a2.*b3.*q1.*s4.*s9 - 4.*a2.*b3.*q1.*s5.*s8 + 2.*a2.*b3.*q1.*s6.*s7 - 2.*a2.*b3.*q2.*s6.*s8 + 4.*s2.*a2.*b3.*q2.*s9 + 4.*a2.*b3.*q3.*s6.*s9 - 8.*s3.*a2.*b3.*q3.*s8 + 4.*s10.*a2.*b3.*s6 - 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 - 4.*a2.*q1.*q3.*s5.*s8 + 2.*a2.*q1.*q3.*s6.*s7 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s6.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s6.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s6 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 - 4.*s3.*a3.^2.*b1.*b2.*s4 + 2.*a3.^2.*b1.*b2.*s5.*s6 + 2.*a3.^2.*b1.*q1.*s5.^2 - 8.*s1.*s3.*a3.^2.*b1.*q1 - 4.*s3.*a3.^2.*b1.*q2.*s4 + 2.*a3.^2.*b1.*q2.*s5.*s6 + 2.*a3.^2.*b1.*s5.*s9 - 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 - 4.*s3.*a3.^2.*b2.*q1.*s4 + 2.*a3.^2.*b2.*q1.*s5.*s6 + 2.*a3.^2.*b2.*q2.*s6.^2 - 8.*s2.*s3.*a3.^2.*b2.*q2 + 2.*a3.^2.*b2.*s6.*s9 - 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s5.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s6.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s5.*s7 - 4.*s1.*a3.*b1.^2.*s9 - 4.*a3.*b1.*b2.*s4.*s9 + 2.*a3.*b1.*b2.*s5.*s8 + 2.*a3.*b1.*b2.*s6.*s7 - 2.*a3.*b1.*b3.*s5.*s9 + 4.*s3.*a3.*b1.*b3.*s7 + 4.*a3.*b1.*q1.*s5.*s7 - 8.*s1.*a3.*b1.*q1.*s9 - 4.*a3.*b1.*q2.*s4.*s9 + 2.*a3.*b1.*q2.*s5.*s8 + 2.*a3.*b1.*q2.*s6.*s7 - 2.*a3.*b1.*q3.*s5.*s9 + 4.*s3.*a3.*b1.*q3.*s7 + 4.*s10.*a3.*b1.*s5 - 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s6.*s8 - 4.*s2.*a3.*b2.^2.*s9 - 2.*a3.*b2.*b3.*s6.*s9 + 4.*s3.*a3.*b2.*b3.*s8 - 4.*a3.*b2.*q1.*s4.*s9 + 2.*a3.*b2.*q1.*s5.*s8 + 2.*a3.*b2.*q1.*s6.*s7 + 4.*a3.*b2.*q2.*s6.*s8 - 8.*s2.*a3.*b2.*q2.*s9 - 2.*a3.*b2.*q3.*s6.*s9 + 4.*s3.*a3.*b2.*q3.*s8 + 4.*s10.*a3.*b2.*s6 - 2.*a3.*b2.*s8.*s9 - 2.*a3.*b3.*q1.*s5.*s9 + 4.*s3.*a3.*b3.*q1.*s7 - 2.*a3.*b3.*q2.*s6.*s9 + 4.*s3.*a3.*b3.*q2.*s8 - 2.*a3.*b3.*s9.^2 + 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s5.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s8 + 2.*a3.*q1.*q2.*s6.*s7 - 2.*a3.*q1.*q3.*s5.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s5 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s6.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s6.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s6 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 - 4.*s10.*b1.*b2.*s4 + 2.*b1.*b2.*s7.*s8 - 4.*s10.*b1.*b3.*s5 + 2.*b1.*b3.*s7.*s9 + 2.*b1.*q1.*s7.^2 - 8.*s1.*s10.*b1.*q1 - 4.*s10.*b1.*q2.*s4 + 2.*b1.*q2.*s7.*s8 - 4.*s10.*b1.*q3.*s5 + 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 - 4.*s10.*b2.*b3.*s6 + 2.*b2.*b3.*s8.*s9 - 4.*s10.*b2.*q1.*s4 + 2.*b2.*q1.*s7.*s8 + 2.*b2.*q2.*s8.^2 - 8.*s2.*s10.*b2.*q2 - 4.*s10.*b2.*q3.*s6 + 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 - 4.*s10.*b3.*q1.*s5 + 2.*b3.*q1.*s7.*s9 - 4.*s10.*b3.*q2.*s6 + 2.*b3.*q2.*s8.*s9 + 2.*b3.*q3.*s9.^2 - 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s5 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s6 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1])];
                
            elseif rot_axis == 4 %x-axis
                v_coeff_u =@(u,a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3)...
                    [reshape(s2.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)).^2 + s3.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)).^2 + s1.*(b1 - a1 + q1).^2 + s6.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)).*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)) - s4.*(b1 - a1 + q1).*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)) - s5.*(b1 - a1 + q1).*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)),[size(a1,2)*size(s1,1),1]),...
                    reshape(s7.*(b1 - a1 + q1) - s9.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)) - s8.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)) - 2.*a2.*s2.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)) - a1.*s4.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)) - a1.*s5.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)) - 2.*a3.*s3.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)) - a3.*s6.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) + (2.*b3.*u)./(u.^2 + 1)) - a2.*s6.*(a3 - q3 + (b3.*(u.^2 - 1))./(u.^2 + 1) - (2.*b2.*u)./(u.^2 + 1)) + 2.*a1.*s1.*(b1 - a1 + q1) + a2.*s4.*(b1 - a1 + q1) + a3.*s5.*(b1 - a1 + q1),[size(a1,2)*size(s1,1),1]),...
                    reshape(s1.*a1.^2 + s4.*a1.*a2 + s5.*a1.*a3 + s7.*a1 + s2.*a2.^2 + s6.*a2.*a3 + s8.*a2 + s3.*a3.^2 + s9.*a3 + s10,[size(a1,2)*size(s1,1),1])];
                
                u_coeff = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 + 2.*a1.^2.*b2.*b3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*b3.*s6 - 2.*a1.^2.*b2.*q2.*s4.^2 + 8.*s1.*s2.*a1.^2.*b2.*q2 - 2.*a1.^2.*b2.*q3.*s4.*s5 + 4.*s1.*a1.^2.*b2.*q3.*s6 - 2.*a1.^2.*b2.*s4.*s7 + 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 - 2.*a1.^2.*b3.*q2.*s4.*s5 + 4.*s1.*a1.^2.*b3.*q2.*s6 - 2.*a1.^2.*b3.*q3.*s5.^2 + 8.*s1.*s3.*a1.^2.*b3.*q3 - 2.*a1.^2.*b3.*s5.*s7 + 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*q2.*q3.*s6 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s5.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 + 2.*a1.*a2.*b1.*b2.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b1.*b2 + 2.*a1.*a2.*b1.*b3.*s4.*s5 - 4.*s1.*a1.*a2.*b1.*b3.*s6 - 2.*a1.*a2.*b1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*q2 - 2.*a1.*a2.*b1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*q3.*s6 - 2.*a1.*a2.*b1.*s4.*s7 + 4.*s1.*a1.*a2.*b1.*s8 - 2.*a1.*a2.*b2.*b3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*b3.*s5 + 2.*a1.*a2.*b2.*q1.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b2.*q1 + 2.*a1.*a2.*b2.*q3.*s4.*s6 - 4.*s2.*a1.*a2.*b2.*q3.*s5 + 2.*a1.*a2.*b2.*s4.*s8 - 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 + 2.*a1.*a2.*b3.*q1.*s4.*s5 - 4.*s1.*a1.*a2.*b3.*q1.*s6 + 2.*a1.*a2.*b3.*q2.*s4.*s6 - 4.*s2.*a1.*a2.*b3.*q2.*s5 + 8.*s3.*a1.*a2.*b3.*q3.*s4 - 4.*a1.*a2.*b3.*q3.*s5.*s6 + 4.*a1.*a2.*b3.*s4.*s9 - 2.*a1.*a2.*b3.*s5.*s8 - 2.*a1.*a2.*b3.*s6.*s7 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*q1.*q3.*s6 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*q2.*q3.*s5 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s8 + 2.*a1.*a2.*q3.*s6.*s7 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 + 2.*a1.*a3.*b1.*b2.*s4.*s5 - 4.*s1.*a1.*a3.*b1.*b2.*s6 + 2.*a1.*a3.*b1.*b3.*s5.^2 - 8.*s1.*s3.*a1.*a3.*b1.*b3 - 2.*a1.*a3.*b1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*b1.*q2.*s6 - 2.*a1.*a3.*b1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*q3 - 2.*a1.*a3.*b1.*s5.*s7 + 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*b2.^2.*s5 + 4.*s3.*a1.*a3.*b2.*b3.*s4 - 2.*a1.*a3.*b2.*b3.*s5.*s6 + 2.*a1.*a3.*b2.*q1.*s4.*s5 - 4.*s1.*a1.*a3.*b2.*q1.*s6 - 4.*a1.*a3.*b2.*q2.*s4.*s6 + 8.*s2.*a1.*a3.*b2.*q2.*s5 - 4.*s3.*a1.*a3.*b2.*q3.*s4 + 2.*a1.*a3.*b2.*q3.*s5.*s6 - 2.*a1.*a3.*b2.*s4.*s9 + 4.*a1.*a3.*b2.*s5.*s8 - 2.*a1.*a3.*b2.*s6.*s7 + 2.*a1.*a3.*b3.*q1.*s5.^2 - 8.*s1.*s3.*a1.*a3.*b3.*q1 - 4.*s3.*a1.*a3.*b3.*q2.*s4 + 2.*a1.*a3.*b3.*q2.*s5.*s6 + 2.*a1.*a3.*b3.*s5.*s9 - 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*q1.*q2.*s6 - 2.*a1.*a3.*q1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s5.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*q2.^2.*s5 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 - 4.*a1.*a3.*q2.*s5.*s8 + 2.*a1.*a3.*q2.*s6.*s7 - 2.*a1.*a3.*q3.*s5.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s5 + 2.*a1.*a3.*s7.*s9 + 2.*a1.*b1.*b2.*s4.*s7 - 4.*s1.*a1.*b1.*b2.*s8 + 2.*a1.*b1.*b3.*s5.*s7 - 4.*s1.*a1.*b1.*b3.*s9 - 2.*a1.*b1.*q2.*s4.*s7 + 4.*s1.*a1.*b1.*q2.*s8 - 2.*a1.*b1.*q3.*s5.*s7 + 4.*s1.*a1.*b1.*q3.*s9 - 2.*a1.*b1.*s7.^2 + 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 + 2.*a1.*b2.*b3.*s4.*s9 + 2.*a1.*b2.*b3.*s5.*s8 - 4.*a1.*b2.*b3.*s6.*s7 + 2.*a1.*b2.*q1.*s4.*s7 - 4.*s1.*a1.*b2.*q1.*s8 - 4.*a1.*b2.*q2.*s4.*s8 + 8.*s2.*a1.*b2.*q2.*s7 - 2.*a1.*b2.*q3.*s4.*s9 - 2.*a1.*b2.*q3.*s5.*s8 + 4.*a1.*b2.*q3.*s6.*s7 - 4.*s10.*a1.*b2.*s4 + 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s5.*s9 - 4.*s3.*a1.*b3.^2.*s7 + 2.*a1.*b3.*q1.*s5.*s7 - 4.*s1.*a1.*b3.*q1.*s9 - 2.*a1.*b3.*q2.*s4.*s9 - 2.*a1.*b3.*q2.*s5.*s8 + 4.*a1.*b3.*q2.*s6.*s7 - 4.*a1.*b3.*q3.*s5.*s9 + 8.*s3.*a1.*b3.*q3.*s7 - 4.*s10.*a1.*b3.*s5 + 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s5.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 + 2.*a1.*q2.*q3.*s5.*s8 - 4.*a1.*q2.*q3.*s6.*s7 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s5.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s5 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 - 2.*a2.^2.*b1.*b3.*s4.*s6 + 4.*s2.*a2.^2.*b1.*b3.*s5 + 2.*a2.^2.*b1.*q1.*s4.^2 - 8.*s1.*s2.*a2.^2.*b1.*q1 + 2.*a2.^2.*b1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*q3.*s5 + 2.*a2.^2.*b1.*s4.*s8 - 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 - 2.*a2.^2.*b3.*q1.*s4.*s6 + 4.*s2.*a2.^2.*b3.*q1.*s5 - 2.*a2.^2.*b3.*q3.*s6.^2 + 8.*s2.*s3.*a2.^2.*b3.*q3 - 2.*a2.^2.*b3.*s6.*s8 + 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*q1.*q3.*s5 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s6.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*b1.^2.*s6 + 2.*a2.*a3.*b1.*b2.*s4.*s6 - 4.*s2.*a2.*a3.*b1.*b2.*s5 - 4.*s3.*a2.*a3.*b1.*b3.*s4 + 2.*a2.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b1.*q1.*s4.*s5 - 8.*s1.*a2.*a3.*b1.*q1.*s6 - 2.*a2.*a3.*b1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*b1.*q2.*s5 + 4.*s3.*a2.*a3.*b1.*q3.*s4 - 2.*a2.*a3.*b1.*q3.*s5.*s6 + 2.*a2.*a3.*b1.*s4.*s9 + 2.*a2.*a3.*b1.*s5.*s8 - 4.*a2.*a3.*b1.*s6.*s7 - 2.*a2.*a3.*b2.*b3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*b3 + 2.*a2.*a3.*b2.*q1.*s4.*s6 - 4.*s2.*a2.*a3.*b2.*q1.*s5 + 2.*a2.*a3.*b2.*q3.*s6.^2 - 8.*s2.*s3.*a2.*a3.*b2.*q3 + 2.*a2.*a3.*b2.*s6.*s8 - 4.*s2.*a2.*a3.*b2.*s9 - 4.*s3.*a2.*a3.*b3.*q1.*s4 + 2.*a2.*a3.*b3.*q1.*s5.*s6 + 2.*a2.*a3.*b3.*q2.*s6.^2 - 8.*s2.*s3.*a2.*a3.*b3.*q2 + 2.*a2.*a3.*b3.*s6.*s9 - 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*q1.^2.*s6 - 2.*a2.*a3.*q1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*q1.*q2.*s5 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 + 2.*a2.*a3.*q1.*s5.*s8 - 4.*a2.*a3.*q1.*s6.*s7 - 2.*a2.*a3.*q2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s6.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s6.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s6 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 + 2.*a2.*b1.*b2.*s4.*s8 - 4.*s2.*a2.*b1.*b2.*s7 - 2.*a2.*b1.*b3.*s4.*s9 + 4.*a2.*b1.*b3.*s5.*s8 - 2.*a2.*b1.*b3.*s6.*s7 + 4.*a2.*b1.*q1.*s4.*s7 - 8.*s1.*a2.*b1.*q1.*s8 - 2.*a2.*b1.*q2.*s4.*s8 + 4.*s2.*a2.*b1.*q2.*s7 + 2.*a2.*b1.*q3.*s4.*s9 - 4.*a2.*b1.*q3.*s5.*s8 + 2.*a2.*b1.*q3.*s6.*s7 + 4.*s10.*a2.*b1.*s4 - 2.*a2.*b1.*s7.*s8 - 2.*a2.*b2.*b3.*s6.*s8 + 4.*s2.*a2.*b2.*b3.*s9 + 2.*a2.*b2.*q1.*s4.*s8 - 4.*s2.*a2.*b2.*q1.*s7 + 2.*a2.*b2.*q3.*s6.*s8 - 4.*s2.*a2.*b2.*q3.*s9 + 2.*a2.*b2.*s8.^2 - 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s6.*s9 - 4.*s3.*a2.*b3.^2.*s8 - 2.*a2.*b3.*q1.*s4.*s9 + 4.*a2.*b3.*q1.*s5.*s8 - 2.*a2.*b3.*q1.*s6.*s7 + 2.*a2.*b3.*q2.*s6.*s8 - 4.*s2.*a2.*b3.*q2.*s9 - 4.*a2.*b3.*q3.*s6.*s9 + 8.*s3.*a2.*b3.*q3.*s8 - 4.*s10.*a2.*b3.*s6 + 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 - 4.*a2.*q1.*q3.*s5.*s8 + 2.*a2.*q1.*q3.*s6.*s7 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s6.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s6.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s6 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 + 4.*s3.*a3.^2.*b1.*b2.*s4 - 2.*a3.^2.*b1.*b2.*s5.*s6 + 2.*a3.^2.*b1.*q1.*s5.^2 - 8.*s1.*s3.*a3.^2.*b1.*q1 - 4.*s3.*a3.^2.*b1.*q2.*s4 + 2.*a3.^2.*b1.*q2.*s5.*s6 + 2.*a3.^2.*b1.*s5.*s9 - 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 + 4.*s3.*a3.^2.*b2.*q1.*s4 - 2.*a3.^2.*b2.*q1.*s5.*s6 - 2.*a3.^2.*b2.*q2.*s6.^2 + 8.*s2.*s3.*a3.^2.*b2.*q2 - 2.*a3.^2.*b2.*s6.*s9 + 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s5.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s6.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s5.*s7 - 4.*s1.*a3.*b1.^2.*s9 + 4.*a3.*b1.*b2.*s4.*s9 - 2.*a3.*b1.*b2.*s5.*s8 - 2.*a3.*b1.*b2.*s6.*s7 + 2.*a3.*b1.*b3.*s5.*s9 - 4.*s3.*a3.*b1.*b3.*s7 + 4.*a3.*b1.*q1.*s5.*s7 - 8.*s1.*a3.*b1.*q1.*s9 - 4.*a3.*b1.*q2.*s4.*s9 + 2.*a3.*b1.*q2.*s5.*s8 + 2.*a3.*b1.*q2.*s6.*s7 - 2.*a3.*b1.*q3.*s5.*s9 + 4.*s3.*a3.*b1.*q3.*s7 + 4.*s10.*a3.*b1.*s5 - 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s6.*s8 - 4.*s2.*a3.*b2.^2.*s9 - 2.*a3.*b2.*b3.*s6.*s9 + 4.*s3.*a3.*b2.*b3.*s8 + 4.*a3.*b2.*q1.*s4.*s9 - 2.*a3.*b2.*q1.*s5.*s8 - 2.*a3.*b2.*q1.*s6.*s7 - 4.*a3.*b2.*q2.*s6.*s8 + 8.*s2.*a3.*b2.*q2.*s9 + 2.*a3.*b2.*q3.*s6.*s9 - 4.*s3.*a3.*b2.*q3.*s8 - 4.*s10.*a3.*b2.*s6 + 2.*a3.*b2.*s8.*s9 + 2.*a3.*b3.*q1.*s5.*s9 - 4.*s3.*a3.*b3.*q1.*s7 + 2.*a3.*b3.*q2.*s6.*s9 - 4.*s3.*a3.*b3.*q2.*s8 + 2.*a3.*b3.*s9.^2 - 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s5.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s8 + 2.*a3.*q1.*q2.*s6.*s7 - 2.*a3.*q1.*q3.*s5.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s5 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s6.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s6.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s6 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 + 4.*s10.*b1.*b2.*s4 - 2.*b1.*b2.*s7.*s8 + 4.*s10.*b1.*b3.*s5 - 2.*b1.*b3.*s7.*s9 + 2.*b1.*q1.*s7.^2 - 8.*s1.*s10.*b1.*q1 - 4.*s10.*b1.*q2.*s4 + 2.*b1.*q2.*s7.*s8 - 4.*s10.*b1.*q3.*s5 + 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 - 4.*s10.*b2.*b3.*s6 + 2.*b2.*b3.*s8.*s9 + 4.*s10.*b2.*q1.*s4 - 2.*b2.*q1.*s7.*s8 - 2.*b2.*q2.*s8.^2 + 8.*s2.*s10.*b2.*q2 + 4.*s10.*b2.*q3.*s6 - 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 + 4.*s10.*b3.*q1.*s5 - 2.*b3.*q1.*s7.*s9 + 4.*s10.*b3.*q2.*s6 - 2.*b3.*q2.*s8.*s9 - 2.*b3.*q3.*s9.^2 + 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s5 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s6 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b2.*q3.*s9.^2 - 4.*b3.*q2.*s8.^2 + 8.*b2.^2.*s6.*s10 - 4.*b2.^2.*s8.*s9 - 8.*b3.^2.*s6.*s10 + 4.*b3.^2.*s8.*s9 + 4.*a2.*b3.*s8.^2 - 4.*a3.*b2.*s9.^2 + 4.*b2.*b3.*s8.^2 - 4.*b2.*b3.*s9.^2 - 16.*a2.*b3.*s2.*s10 + 8.*a1.*b2.*s5.*s10 - 8.*a1.*b3.*s4.*s10 + 16.*a3.*b2.*s3.*s10 - 4.*a1.*b2.*s7.*s9 + 4.*a1.*b3.*s7.*s8 + 8.*a2.*b2.*s6.*s10 - 4.*a2.*b2.*s8.*s9 - 8.*a3.*b3.*s6.*s10 + 4.*a3.*b3.*s8.*s9 - 16.*b2.*b3.*s2.*s10 - 8.*b1.*b2.*s5.*s10 + 8.*b1.*b3.*s4.*s10 + 16.*b2.*b3.*s3.*s10 + 4.*b1.*b2.*s7.*s9 - 4.*b1.*b3.*s7.*s8 + 16.*b3.*q2.*s2.*s10 - 8.*b2.*q1.*s5.*s10 - 16.*b2.*q3.*s3.*s10 + 8.*b3.*q1.*s4.*s10 + 4.*b2.*q1.*s7.*s9 - 4.*b3.*q1.*s7.*s8 - 8.*b2.*q2.*s6.*s10 + 4.*b2.*q2.*s8.*s9 + 8.*b3.*q3.*s6.*s10 - 4.*b3.*q3.*s8.*s9 - 8.*a1.^2.*b2.*s1.*s9 + 8.*a1.^2.*b3.*s1.*s8 - 8.*a2.*b2.^2.*s2.*s9 + 4.*a1.^2.*b2.*s5.*s7 - 4.*a1.^2.*b3.*s4.*s7 - 8.*a2.^2.*b2.*s2.*s9 - 4.*a1.*b2.^2.*s4.*s9 - 4.*a1.*b2.^2.*s5.*s8 + 8.*a1.*b2.^2.*s6.*s7 + 8.*a2.*b3.^2.*s2.*s9 - 8.*a3.*b2.^2.*s3.*s8 + 4.*a1.*b3.^2.*s4.*s9 + 4.*a1.*b3.^2.*s5.*s8 - 8.*a1.*b3.^2.*s6.*s7 + 8.*a3.*b3.^2.*s3.*s8 + 8.*a3.^2.*b3.*s3.*s8 + 4.*a2.*b2.^2.*s6.*s8 + 4.*a2.^2.*b2.*s6.*s8 - 4.*a2.*b3.^2.*s6.*s8 + 4.*a3.*b2.^2.*s6.*s9 - 4.*a3.*b3.^2.*s6.*s9 - 4.*a3.^2.*b3.*s6.*s9 + 4.*a2.*a3.*b2.^2.*s6.^2 - 4.*a2.*a3.*b3.^2.*s6.^2 + 4.*a1.^2.*b2.*b3.*s4.^2 - 4.*a1.^2.*b2.*b3.*s5.^2 - 4.*a2.^2.*b2.*b3.*s6.^2 + 4.*a3.^2.*b2.*b3.*s6.^2 - 4.*a1.^2.*b3.*q2.*s4.^2 + 4.*a1.^2.*b2.*q3.*s5.^2 + 4.*a2.^2.*b2.*q3.*s6.^2 - 4.*a3.^2.*b3.*q2.*s6.^2 + 8.*a1.^2.*b2.^2.*s1.*s6 - 8.*a1.^2.*b3.^2.*s1.*s6 - 4.*a1.^2.*b2.^2.*s4.*s5 + 4.*a1.^2.*b3.^2.*s4.*s5 - 8.*a1.*a2.*b3.*s2.*s7 + 8.*a1.*a3.*b2.*s3.*s7 - 8.*a1.*a2.*b2.*s4.*s9 + 4.*a1.*a2.*b2.*s5.*s8 + 4.*a1.*a2.*b2.*s6.*s7 + 4.*a1.*a2.*b3.*s4.*s8 + 8.*a2.*a3.*b2.*s3.*s8 - 8.*a2.*a3.*b3.*s2.*s9 - 4.*a1.*a3.*b2.*s5.*s9 - 4.*a1.*a3.*b3.*s4.*s9 + 8.*a1.*a3.*b3.*s5.*s8 - 4.*a1.*a3.*b3.*s6.*s7 - 4.*a2.*a3.*b2.*s6.*s9 + 4.*a2.*a3.*b3.*s6.*s8 + 8.*a1.*b1.*b2.*s1.*s9 - 8.*a1.*b1.*b3.*s1.*s8 - 16.*a1.*b2.*b3.*s2.*s7 - 8.*a2.*b1.*b3.*s2.*s7 - 4.*a1.*b1.*b2.*s5.*s7 + 4.*a1.*b1.*b3.*s4.*s7 + 16.*a1.*b2.*b3.*s3.*s7 + 8.*a3.*b1.*b2.*s3.*s7 + 8.*a1.*b2.*b3.*s4.*s8 + 4.*a2.*b1.*b2.*s4.*s9 - 8.*a2.*b1.*b2.*s5.*s8 + 4.*a2.*b1.*b2.*s6.*s7 + 4.*a2.*b1.*b3.*s4.*s8 + 16.*a2.*b2.*b3.*s3.*s8 - 16.*a3.*b2.*b3.*s2.*s9 - 8.*a1.*b2.*b3.*s5.*s9 - 4.*a3.*b1.*b2.*s5.*s9 + 8.*a3.*b1.*b3.*s4.*s9 - 4.*a3.*b1.*b3.*s5.*s8 - 4.*a3.*b1.*b3.*s6.*s7 - 8.*a2.*b2.*b3.*s6.*s9 + 8.*a3.*b2.*b3.*s6.*s8 + 8.*a1.*b2.*q1.*s1.*s9 - 8.*a1.*b3.*q1.*s1.*s8 + 16.*a1.*b3.*q2.*s2.*s7 - 8.*a2.*b3.*q1.*s2.*s7 - 4.*a1.*b2.*q1.*s5.*s7 - 16.*a1.*b2.*q3.*s3.*s7 + 4.*a1.*b3.*q1.*s4.*s7 + 8.*a3.*b2.*q1.*s3.*s7 + 8.*a2.*b2.*q2.*s2.*s9 + 4.*a1.*b2.*q2.*s4.*s9 + 4.*a1.*b2.*q2.*s5.*s8 - 8.*a1.*b2.*q2.*s6.*s7 - 8.*a1.*b3.*q2.*s4.*s8 + 4.*a2.*b2.*q1.*s4.*s9 - 8.*a2.*b2.*q1.*s5.*s8 + 4.*a2.*b2.*q1.*s6.*s7 - 16.*a2.*b2.*q3.*s3.*s8 + 4.*a2.*b3.*q1.*s4.*s8 + 8.*a3.*b2.*q2.*s3.*s8 - 8.*a2.*b3.*q3.*s2.*s9 + 16.*a3.*b3.*q2.*s2.*s9 + 8.*a1.*b2.*q3.*s5.*s9 - 4.*a1.*b3.*q3.*s4.*s9 - 4.*a1.*b3.*q3.*s5.*s8 + 8.*a1.*b3.*q3.*s6.*s7 - 4.*a2.*b2.*q2.*s6.*s8 - 4.*a3.*b2.*q1.*s5.*s9 + 8.*a3.*b3.*q1.*s4.*s9 - 4.*a3.*b3.*q1.*s5.*s8 - 4.*a3.*b3.*q1.*s6.*s7 - 8.*a3.*b3.*q3.*s3.*s8 + 8.*a2.*b2.*q3.*s6.*s9 + 4.*a2.*b3.*q3.*s6.*s8 - 4.*a3.*b2.*q2.*s6.*s9 - 8.*a3.*b3.*q2.*s6.*s8 + 4.*a3.*b3.*q3.*s6.*s9 + 4.*a1.*a2.*b1.*b3.*s4.^2 - 4.*a1.*a3.*b1.*b2.*s5.^2 + 4.*a1.*a2.*b3.*q1.*s4.^2 - 4.*a1.*a3.*b2.*q1.*s5.^2 - 4.*a2.*a3.*b2.*q2.*s6.^2 + 4.*a2.*a3.*b3.*q3.*s6.^2 - 8.*a1.*a2.*b2.^2.*s2.*s5 - 16.*a2.*a3.*b2.^2.*s2.*s3 + 8.*a1.*a2.*b3.^2.*s2.*s5 - 8.*a1.*a3.*b2.^2.*s3.*s4 + 16.*a2.*a3.*b3.^2.*s2.*s3 + 8.*a1.*a3.*b3.^2.*s3.*s4 + 4.*a1.*a2.*b2.^2.*s4.*s6 - 4.*a1.*a2.*b3.^2.*s4.*s6 + 4.*a1.*a3.*b2.^2.*s5.*s6 - 4.*a1.*a3.*b3.^2.*s5.*s6 - 16.*a1.^2.*b2.*b3.*s1.*s2 + 16.*a1.^2.*b2.*b3.*s1.*s3 - 8.*a2.^2.*b1.*b2.*s2.*s5 + 16.*a2.^2.*b2.*b3.*s2.*s3 - 16.*a3.^2.*b2.*b3.*s2.*s3 + 8.*a3.^2.*b1.*b3.*s3.*s4 + 4.*a2.^2.*b1.*b2.*s4.*s6 - 4.*a3.^2.*b1.*b3.*s5.*s6 + 16.*a1.^2.*b3.*q2.*s1.*s2 - 16.*a1.^2.*b2.*q3.*s1.*s3 - 8.*a1.^2.*b2.*q2.*s1.*s6 - 8.*a2.^2.*b2.*q1.*s2.*s5 - 16.*a2.^2.*b2.*q3.*s2.*s3 + 16.*a3.^2.*b3.*q2.*s2.*s3 + 4.*a1.^2.*b2.*q2.*s4.*s5 + 8.*a1.^2.*b3.*q3.*s1.*s6 + 8.*a3.^2.*b3.*q1.*s3.*s4 + 4.*a2.^2.*b2.*q1.*s4.*s6 - 4.*a1.^2.*b3.*q3.*s4.*s5 - 4.*a3.^2.*b3.*q1.*s5.*s6 - 16.*a1.*a2.*b1.*b3.*s1.*s2 + 16.*a1.*a3.*b1.*b2.*s1.*s3 + 8.*a1.*a2.*b1.*b2.*s1.*s6 - 4.*a1.*a2.*b1.*b2.*s4.*s5 + 16.*a1.*a2.*b2.*b3.*s3.*s4 - 8.*a1.*a3.*b1.*b3.*s1.*s6 + 8.*a2.*a3.*b1.*b2.*s3.*s4 - 16.*a1.*a3.*b2.*b3.*s2.*s5 - 8.*a2.*a3.*b1.*b3.*s2.*s5 + 4.*a1.*a3.*b1.*b3.*s4.*s5 - 8.*a1.*a2.*b2.*b3.*s5.*s6 + 8.*a1.*a3.*b2.*b3.*s4.*s6 - 4.*a2.*a3.*b1.*b2.*s5.*s6 + 4.*a2.*a3.*b1.*b3.*s4.*s6 - 16.*a1.*a2.*b3.*q1.*s1.*s2 + 16.*a1.*a3.*b2.*q1.*s1.*s3 + 8.*a1.*a2.*b2.*q1.*s1.*s6 + 8.*a1.*a2.*b2.*q2.*s2.*s5 + 16.*a2.*a3.*b2.*q2.*s2.*s3 - 4.*a1.*a2.*b2.*q1.*s4.*s5 - 16.*a1.*a2.*b2.*q3.*s3.*s4 + 8.*a1.*a3.*b2.*q2.*s3.*s4 - 8.*a1.*a3.*b3.*q1.*s1.*s6 + 8.*a2.*a3.*b2.*q1.*s3.*s4 - 8.*a1.*a2.*b3.*q3.*s2.*s5 + 16.*a1.*a3.*b3.*q2.*s2.*s5 - 8.*a2.*a3.*b3.*q1.*s2.*s5 - 16.*a2.*a3.*b3.*q3.*s2.*s3 - 4.*a1.*a2.*b2.*q2.*s4.*s6 + 4.*a1.*a3.*b3.*q1.*s4.*s5 - 8.*a1.*a3.*b3.*q3.*s3.*s4 + 8.*a1.*a2.*b2.*q3.*s5.*s6 + 4.*a1.*a2.*b3.*q3.*s4.*s6 - 4.*a1.*a3.*b2.*q2.*s5.*s6 - 8.*a1.*a3.*b3.*q2.*s4.*s6 - 4.*a2.*a3.*b2.*q1.*s5.*s6 + 4.*a2.*a3.*b3.*q1.*s4.*s6 + 4.*a1.*a3.*b3.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*q1.^2.*s7.^2 + 2.*q2.^2.*s8.^2 + 2.*q3.^2.*s9.^2 + 2.*a1.^2.*s7.^2 + 2.*a2.^2.*s8.^2 + 2.*a3.^2.*s9.^2 + 2.*b1.^2.*s7.^2 - 2.*b2.^2.*s8.^2 + 4.*b2.^2.*s9.^2 + 4.*b3.^2.*s8.^2 - 2.*b3.^2.*s9.^2 - 4.*a1.*q1.*s7.^2 - 4.*a2.*q2.*s8.^2 - 4.*a3.*q3.*s9.^2 + 4.*b1.*q1.*s7.^2 - 8.*a1.^2.*s1.*s10 - 8.*a2.^2.*s2.*s10 - 8.*a3.^2.*s3.*s10 - 8.*b1.^2.*s1.*s10 + 8.*b2.^2.*s2.*s10 - 16.*b2.^2.*s3.*s10 - 16.*b3.^2.*s2.*s10 + 8.*b3.^2.*s3.*s10 - 8.*q1.^2.*s1.*s10 - 8.*q2.^2.*s2.*s10 - 8.*q3.^2.*s3.*s10 - 2.*a1.^2.*b2.^2.*s4.^2 + 2.*a2.^2.*b1.^2.*s4.^2 + 4.*a1.^2.*b2.^2.*s5.^2 + 4.*a1.^2.*b3.^2.*s4.^2 - 2.*a1.^2.*b3.^2.*s5.^2 + 2.*a3.^2.*b1.^2.*s5.^2 + 4.*a2.^2.*b2.^2.*s6.^2 - 2.*a2.^2.*b3.^2.*s6.^2 - 2.*a3.^2.*b2.^2.*s6.^2 + 4.*a3.^2.*b3.^2.*s6.^2 + 2.*a1.^2.*q2.^2.*s4.^2 + 2.*a2.^2.*q1.^2.*s4.^2 + 2.*a1.^2.*q3.^2.*s5.^2 + 2.*a3.^2.*q1.^2.*s5.^2 + 2.*a2.^2.*q3.^2.*s6.^2 + 2.*a3.^2.*q2.^2.*s6.^2 - 4.*a1.*b1.*s7.^2 - 8.*a1.*a2.*s4.*s10 + 4.*a1.*a2.*s7.*s8 - 8.*a1.*a3.*s5.*s10 + 4.*a1.*a3.*s7.*s9 - 8.*a2.*a3.*s6.*s10 + 4.*a2.*a3.*s8.*s9 + 16.*a1.*b1.*s1.*s10 + 8.*a2.*b1.*s4.*s10 - 4.*a2.*b1.*s7.*s8 + 8.*a3.*b1.*s5.*s10 - 4.*a3.*b1.*s7.*s9 + 24.*b2.*b3.*s6.*s10 - 12.*b2.*b3.*s8.*s9 + 16.*a1.*q1.*s1.*s10 + 16.*a2.*q2.*s2.*s10 + 8.*a1.*q2.*s4.*s10 + 8.*a2.*q1.*s4.*s10 - 4.*a1.*q2.*s7.*s8 - 4.*a2.*q1.*s7.*s8 + 8.*a1.*q3.*s5.*s10 + 8.*a3.*q1.*s5.*s10 + 16.*a3.*q3.*s3.*s10 - 4.*a1.*q3.*s7.*s9 - 4.*a3.*q1.*s7.*s9 + 8.*a2.*q3.*s6.*s10 + 8.*a3.*q2.*s6.*s10 - 4.*a2.*q3.*s8.*s9 - 4.*a3.*q2.*s8.*s9 - 16.*b1.*q1.*s1.*s10 - 8.*b1.*q2.*s4.*s10 + 4.*b1.*q2.*s7.*s8 - 8.*b1.*q3.*s5.*s10 + 4.*b1.*q3.*s7.*s9 - 8.*q1.*q2.*s4.*s10 + 4.*q1.*q2.*s7.*s8 - 8.*q1.*q3.*s5.*s10 + 4.*q1.*q3.*s7.*s9 - 8.*q2.*q3.*s6.*s10 + 4.*q2.*q3.*s8.*s9 + 8.*a1.*b2.^2.*s2.*s7 - 8.*a2.*b1.^2.*s1.*s8 - 8.*a2.^2.*b1.*s2.*s7 - 16.*a1.*b2.^2.*s3.*s7 - 16.*a1.*b3.^2.*s2.*s7 + 8.*a1.*b3.^2.*s3.*s7 + 4.*a2.*b1.^2.*s4.*s7 - 8.*a3.*b1.^2.*s1.*s9 - 8.*a3.^2.*b1.*s3.*s7 - 4.*a1.*b2.^2.*s4.*s8 - 16.*a2.*b2.^2.*s3.*s8 + 4.*a2.^2.*b1.*s4.*s8 + 8.*a1.*b3.^2.*s4.*s8 + 8.*a2.*b3.^2.*s3.*s8 + 4.*a3.*b1.^2.*s5.*s7 + 8.*a3.*b2.^2.*s2.*s9 + 8.*a1.*b2.^2.*s5.*s9 - 16.*a3.*b3.^2.*s2.*s9 - 4.*a1.*b3.^2.*s5.*s9 + 4.*a3.^2.*b1.*s5.*s9 + 8.*a2.*b2.^2.*s6.*s9 - 4.*a3.*b2.^2.*s6.*s8 - 4.*a2.*b3.^2.*s6.*s9 + 8.*a3.*b3.^2.*s6.*s8 - 8.*a1.*q2.^2.*s2.*s7 - 8.*a2.*q1.^2.*s1.*s8 - 8.*a1.^2.*q2.*s1.*s8 - 8.*a2.^2.*q1.*s2.*s7 - 8.*a1.*q3.^2.*s3.*s7 + 4.*a2.*q1.^2.*s4.*s7 - 8.*a3.*q1.^2.*s1.*s9 + 4.*a1.^2.*q2.*s4.*s7 - 8.*a1.^2.*q3.*s1.*s9 - 8.*a3.^2.*q1.*s3.*s7 + 4.*a1.*q2.^2.*s4.*s8 + 4.*a2.^2.*q1.*s4.*s8 - 8.*a2.*q3.^2.*s3.*s8 + 4.*a3.*q1.^2.*s5.*s7 - 8.*a3.*q2.^2.*s2.*s9 + 4.*a1.^2.*q3.*s5.*s7 - 8.*a2.^2.*q3.*s2.*s9 - 8.*a3.^2.*q2.*s3.*s8 + 4.*a1.*q3.^2.*s5.*s9 + 4.*a3.^2.*q1.*s5.*s9 + 4.*a3.*q2.^2.*s6.*s8 + 4.*a2.^2.*q3.*s6.*s8 + 4.*a2.*q3.^2.*s6.*s9 + 4.*a3.^2.*q2.*s6.*s9 + 4.*a2.^2.*b1.*q1.*s4.^2 + 4.*a3.^2.*b1.*q1.*s5.^2 + 8.*a1.^2.*b2.^2.*s1.*s2 - 8.*a2.^2.*b1.^2.*s1.*s2 - 16.*a1.^2.*b2.^2.*s1.*s3 - 16.*a1.^2.*b3.^2.*s1.*s2 + 8.*a1.^2.*b3.^2.*s1.*s3 - 8.*a3.^2.*b1.^2.*s1.*s3 - 16.*a2.^2.*b2.^2.*s2.*s3 + 8.*a2.^2.*b3.^2.*s2.*s3 + 8.*a3.^2.*b2.^2.*s2.*s3 - 16.*a3.^2.*b3.^2.*s2.*s3 - 8.*a1.^2.*q2.^2.*s1.*s2 - 8.*a2.^2.*q1.^2.*s1.*s2 - 8.*a1.^2.*q3.^2.*s1.*s3 - 8.*a3.^2.*q1.^2.*s1.*s3 - 8.*a2.^2.*q3.^2.*s2.*s3 - 8.*a3.^2.*q2.^2.*s2.*s3 + 8.*a1.*a2.*b1.*s1.*s8 - 4.*a1.*a2.*b1.*s4.*s7 + 8.*a1.*a3.*b1.*s1.*s9 - 4.*a1.*a3.*b1.*s5.*s7 + 4.*a2.*a3.*b1.*s4.*s9 + 4.*a2.*a3.*b1.*s5.*s8 - 8.*a2.*a3.*b1.*s6.*s7 - 24.*a2.*b2.*b3.*s2.*s9 - 12.*a1.*b2.*b3.*s4.*s9 - 12.*a1.*b2.*b3.*s5.*s8 + 24.*a1.*b2.*b3.*s6.*s7 - 24.*a3.*b2.*b3.*s3.*s8 + 12.*a2.*b2.*b3.*s6.*s8 + 12.*a3.*b2.*b3.*s6.*s9 + 8.*a1.*a2.*q1.*s1.*s8 + 8.*a1.*a2.*q2.*s2.*s7 - 4.*a1.*a2.*q1.*s4.*s7 + 8.*a1.*a3.*q1.*s1.*s9 - 4.*a1.*a2.*q2.*s4.*s8 - 4.*a1.*a3.*q1.*s5.*s7 + 8.*a1.*a3.*q3.*s3.*s7 + 8.*a2.*a3.*q2.*s2.*s9 - 8.*a1.*a2.*q3.*s4.*s9 + 4.*a1.*a2.*q3.*s5.*s8 + 4.*a1.*a2.*q3.*s6.*s7 + 4.*a1.*a3.*q2.*s4.*s9 - 8.*a1.*a3.*q2.*s5.*s8 + 4.*a1.*a3.*q2.*s6.*s7 + 4.*a2.*a3.*q1.*s4.*s9 + 4.*a2.*a3.*q1.*s5.*s8 - 8.*a2.*a3.*q1.*s6.*s7 + 8.*a2.*a3.*q3.*s3.*s8 - 4.*a1.*a3.*q3.*s5.*s9 - 4.*a2.*a3.*q2.*s6.*s8 - 4.*a2.*a3.*q3.*s6.*s9 + 8.*a1.*b1.*q2.*s1.*s8 - 16.*a2.*b1.*q1.*s1.*s8 + 8.*a2.*b1.*q2.*s2.*s7 - 4.*a1.*b1.*q2.*s4.*s7 + 8.*a1.*b1.*q3.*s1.*s9 + 8.*a2.*b1.*q1.*s4.*s7 - 16.*a3.*b1.*q1.*s1.*s9 - 4.*a1.*b1.*q3.*s5.*s7 - 4.*a2.*b1.*q2.*s4.*s8 + 8.*a3.*b1.*q1.*s5.*s7 + 8.*a3.*b1.*q3.*s3.*s7 + 4.*a2.*b1.*q3.*s4.*s9 - 8.*a2.*b1.*q3.*s5.*s8 + 4.*a2.*b1.*q3.*s6.*s7 - 8.*a3.*b1.*q2.*s4.*s9 + 4.*a3.*b1.*q2.*s5.*s8 + 4.*a3.*b1.*q2.*s6.*s7 - 4.*a3.*b1.*q3.*s5.*s9 + 8.*a1.*q1.*q2.*s1.*s8 + 8.*a2.*q1.*q2.*s2.*s7 - 4.*a1.*q1.*q2.*s4.*s7 + 8.*a1.*q1.*q3.*s1.*s9 - 4.*a1.*q1.*q3.*s5.*s7 - 4.*a2.*q1.*q2.*s4.*s8 + 8.*a3.*q1.*q3.*s3.*s7 + 8.*a2.*q2.*q3.*s2.*s9 + 4.*a1.*q2.*q3.*s4.*s9 + 4.*a1.*q2.*q3.*s5.*s8 - 8.*a1.*q2.*q3.*s6.*s7 + 4.*a2.*q1.*q3.*s4.*s9 - 8.*a2.*q1.*q3.*s5.*s8 + 4.*a2.*q1.*q3.*s6.*s7 - 8.*a3.*q1.*q2.*s4.*s9 + 4.*a3.*q1.*q2.*s5.*s8 + 4.*a3.*q1.*q2.*s6.*s7 + 8.*a3.*q2.*q3.*s3.*s8 - 4.*a2.*q2.*q3.*s6.*s8 - 4.*a3.*q1.*q3.*s5.*s9 - 4.*a3.*q2.*q3.*s6.*s9 + 12.*a2.*a3.*b2.*b3.*s6.^2 - 4.*a1.*a2.*b1.*q2.*s4.^2 - 4.*a1.*a3.*b1.*q3.*s5.^2 - 16.*a1.*a2.*b2.^2.*s3.*s4 + 8.*a1.*a2.*b3.^2.*s3.*s4 + 8.*a1.*a3.*b2.^2.*s2.*s5 - 8.*a2.*a3.*b1.^2.*s1.*s6 - 16.*a1.*a3.*b3.^2.*s2.*s5 + 4.*a2.*a3.*b1.^2.*s4.*s5 + 8.*a1.*a2.*b2.^2.*s5.*s6 - 4.*a1.*a3.*b2.^2.*s4.*s6 - 4.*a1.*a2.*b3.^2.*s5.*s6 + 8.*a1.*a3.*b3.^2.*s4.*s6 + 24.*a1.^2.*b2.*b3.*s1.*s6 - 12.*a1.^2.*b2.*b3.*s4.*s5 - 4.*a1.*a2.*q1.*q2.*s4.^2 - 4.*a1.*a3.*q1.*q3.*s5.^2 - 4.*a2.*a3.*q2.*q3.*s6.^2 - 8.*a1.*a2.*q3.^2.*s3.*s4 - 8.*a1.*a3.*q2.^2.*s2.*s5 - 8.*a2.*a3.*q1.^2.*s1.*s6 + 4.*a2.*a3.*q1.^2.*s4.*s5 + 4.*a1.*a3.*q2.^2.*s4.*s6 + 4.*a1.*a2.*q3.^2.*s5.*s6 - 16.*a2.^2.*b1.*q1.*s1.*s2 - 16.*a3.^2.*b1.*q1.*s1.*s3 - 8.*a2.^2.*b1.*q3.*s2.*s5 - 8.*a3.^2.*b1.*q2.*s3.*s4 + 4.*a2.^2.*b1.*q3.*s4.*s6 + 4.*a3.^2.*b1.*q2.*s5.*s6 - 8.*a1.^2.*q2.*q3.*s1.*s6 - 8.*a2.^2.*q1.*q3.*s2.*s5 - 8.*a3.^2.*q1.*q2.*s3.*s4 + 4.*a1.^2.*q2.*q3.*s4.*s5 + 4.*a2.^2.*q1.*q3.*s4.*s6 + 4.*a3.^2.*q1.*q2.*s5.*s6 - 24.*a1.*a2.*b2.*b3.*s2.*s5 - 48.*a2.*a3.*b2.*b3.*s2.*s3 - 24.*a1.*a3.*b2.*b3.*s3.*s4 + 12.*a1.*a2.*b2.*b3.*s4.*s6 + 12.*a1.*a3.*b2.*b3.*s5.*s6 + 16.*a1.*a2.*b1.*q2.*s1.*s2 + 16.*a1.*a3.*b1.*q3.*s1.*s3 + 8.*a1.*a2.*b1.*q3.*s1.*s6 + 8.*a1.*a3.*b1.*q2.*s1.*s6 - 16.*a2.*a3.*b1.*q1.*s1.*s6 + 8.*a2.*a3.*b1.*q2.*s2.*s5 - 4.*a1.*a2.*b1.*q3.*s4.*s5 - 4.*a1.*a3.*b1.*q2.*s4.*s5 + 8.*a2.*a3.*b1.*q1.*s4.*s5 + 8.*a2.*a3.*b1.*q3.*s3.*s4 - 4.*a2.*a3.*b1.*q2.*s4.*s6 - 4.*a2.*a3.*b1.*q3.*s5.*s6 + 16.*a1.*a2.*q1.*q2.*s1.*s2 + 16.*a1.*a3.*q1.*q3.*s1.*s3 + 8.*a1.*a2.*q1.*q3.*s1.*s6 + 8.*a1.*a3.*q1.*q2.*s1.*s6 + 8.*a1.*a2.*q2.*q3.*s2.*s5 + 8.*a2.*a3.*q1.*q2.*s2.*s5 + 16.*a2.*a3.*q2.*q3.*s2.*s3 - 4.*a1.*a2.*q1.*q3.*s4.*s5 - 4.*a1.*a3.*q1.*q2.*s4.*s5 + 8.*a1.*a3.*q2.*q3.*s3.*s4 + 8.*a2.*a3.*q1.*q3.*s3.*s4 - 4.*a1.*a2.*q2.*q3.*s4.*s6 - 4.*a2.*a3.*q1.*q2.*s4.*s6 - 4.*a1.*a3.*q2.*q3.*s5.*s6 - 4.*a2.*a3.*q1.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b2.*q3.*s9.^2 - 4.*b3.*q2.*s8.^2 - 8.*b2.^2.*s6.*s10 + 4.*b2.^2.*s8.*s9 + 8.*b3.^2.*s6.*s10 - 4.*b3.^2.*s8.*s9 + 4.*a2.*b3.*s8.^2 - 4.*a3.*b2.*s9.^2 - 4.*b2.*b3.*s8.^2 + 4.*b2.*b3.*s9.^2 - 16.*a2.*b3.*s2.*s10 + 8.*a1.*b2.*s5.*s10 - 8.*a1.*b3.*s4.*s10 + 16.*a3.*b2.*s3.*s10 - 4.*a1.*b2.*s7.*s9 + 4.*a1.*b3.*s7.*s8 + 8.*a2.*b2.*s6.*s10 - 4.*a2.*b2.*s8.*s9 - 8.*a3.*b3.*s6.*s10 + 4.*a3.*b3.*s8.*s9 + 16.*b2.*b3.*s2.*s10 - 8.*b1.*b2.*s5.*s10 + 8.*b1.*b3.*s4.*s10 - 16.*b2.*b3.*s3.*s10 + 4.*b1.*b2.*s7.*s9 - 4.*b1.*b3.*s7.*s8 + 16.*b3.*q2.*s2.*s10 - 8.*b2.*q1.*s5.*s10 - 16.*b2.*q3.*s3.*s10 + 8.*b3.*q1.*s4.*s10 + 4.*b2.*q1.*s7.*s9 - 4.*b3.*q1.*s7.*s8 - 8.*b2.*q2.*s6.*s10 + 4.*b2.*q2.*s8.*s9 + 8.*b3.*q3.*s6.*s10 - 4.*b3.*q3.*s8.*s9 - 8.*a1.^2.*b2.*s1.*s9 + 8.*a1.^2.*b3.*s1.*s8 + 8.*a2.*b2.^2.*s2.*s9 + 4.*a1.^2.*b2.*s5.*s7 - 4.*a1.^2.*b3.*s4.*s7 - 8.*a2.^2.*b2.*s2.*s9 + 4.*a1.*b2.^2.*s4.*s9 + 4.*a1.*b2.^2.*s5.*s8 - 8.*a1.*b2.^2.*s6.*s7 - 8.*a2.*b3.^2.*s2.*s9 + 8.*a3.*b2.^2.*s3.*s8 - 4.*a1.*b3.^2.*s4.*s9 - 4.*a1.*b3.^2.*s5.*s8 + 8.*a1.*b3.^2.*s6.*s7 - 8.*a3.*b3.^2.*s3.*s8 + 8.*a3.^2.*b3.*s3.*s8 - 4.*a2.*b2.^2.*s6.*s8 + 4.*a2.^2.*b2.*s6.*s8 + 4.*a2.*b3.^2.*s6.*s8 - 4.*a3.*b2.^2.*s6.*s9 + 4.*a3.*b3.^2.*s6.*s9 - 4.*a3.^2.*b3.*s6.*s9 - 4.*a2.*a3.*b2.^2.*s6.^2 + 4.*a2.*a3.*b3.^2.*s6.^2 - 4.*a1.^2.*b2.*b3.*s4.^2 + 4.*a1.^2.*b2.*b3.*s5.^2 + 4.*a2.^2.*b2.*b3.*s6.^2 - 4.*a3.^2.*b2.*b3.*s6.^2 - 4.*a1.^2.*b3.*q2.*s4.^2 + 4.*a1.^2.*b2.*q3.*s5.^2 + 4.*a2.^2.*b2.*q3.*s6.^2 - 4.*a3.^2.*b3.*q2.*s6.^2 - 8.*a1.^2.*b2.^2.*s1.*s6 + 8.*a1.^2.*b3.^2.*s1.*s6 + 4.*a1.^2.*b2.^2.*s4.*s5 - 4.*a1.^2.*b3.^2.*s4.*s5 - 8.*a1.*a2.*b3.*s2.*s7 + 8.*a1.*a3.*b2.*s3.*s7 - 8.*a1.*a2.*b2.*s4.*s9 + 4.*a1.*a2.*b2.*s5.*s8 + 4.*a1.*a2.*b2.*s6.*s7 + 4.*a1.*a2.*b3.*s4.*s8 + 8.*a2.*a3.*b2.*s3.*s8 - 8.*a2.*a3.*b3.*s2.*s9 - 4.*a1.*a3.*b2.*s5.*s9 - 4.*a1.*a3.*b3.*s4.*s9 + 8.*a1.*a3.*b3.*s5.*s8 - 4.*a1.*a3.*b3.*s6.*s7 - 4.*a2.*a3.*b2.*s6.*s9 + 4.*a2.*a3.*b3.*s6.*s8 + 8.*a1.*b1.*b2.*s1.*s9 - 8.*a1.*b1.*b3.*s1.*s8 + 16.*a1.*b2.*b3.*s2.*s7 - 8.*a2.*b1.*b3.*s2.*s7 - 4.*a1.*b1.*b2.*s5.*s7 + 4.*a1.*b1.*b3.*s4.*s7 - 16.*a1.*b2.*b3.*s3.*s7 + 8.*a3.*b1.*b2.*s3.*s7 - 8.*a1.*b2.*b3.*s4.*s8 + 4.*a2.*b1.*b2.*s4.*s9 - 8.*a2.*b1.*b2.*s5.*s8 + 4.*a2.*b1.*b2.*s6.*s7 + 4.*a2.*b1.*b3.*s4.*s8 - 16.*a2.*b2.*b3.*s3.*s8 + 16.*a3.*b2.*b3.*s2.*s9 + 8.*a1.*b2.*b3.*s5.*s9 - 4.*a3.*b1.*b2.*s5.*s9 + 8.*a3.*b1.*b3.*s4.*s9 - 4.*a3.*b1.*b3.*s5.*s8 - 4.*a3.*b1.*b3.*s6.*s7 + 8.*a2.*b2.*b3.*s6.*s9 - 8.*a3.*b2.*b3.*s6.*s8 + 8.*a1.*b2.*q1.*s1.*s9 - 8.*a1.*b3.*q1.*s1.*s8 + 16.*a1.*b3.*q2.*s2.*s7 - 8.*a2.*b3.*q1.*s2.*s7 - 4.*a1.*b2.*q1.*s5.*s7 - 16.*a1.*b2.*q3.*s3.*s7 + 4.*a1.*b3.*q1.*s4.*s7 + 8.*a3.*b2.*q1.*s3.*s7 + 8.*a2.*b2.*q2.*s2.*s9 + 4.*a1.*b2.*q2.*s4.*s9 + 4.*a1.*b2.*q2.*s5.*s8 - 8.*a1.*b2.*q2.*s6.*s7 - 8.*a1.*b3.*q2.*s4.*s8 + 4.*a2.*b2.*q1.*s4.*s9 - 8.*a2.*b2.*q1.*s5.*s8 + 4.*a2.*b2.*q1.*s6.*s7 - 16.*a2.*b2.*q3.*s3.*s8 + 4.*a2.*b3.*q1.*s4.*s8 + 8.*a3.*b2.*q2.*s3.*s8 - 8.*a2.*b3.*q3.*s2.*s9 + 16.*a3.*b3.*q2.*s2.*s9 + 8.*a1.*b2.*q3.*s5.*s9 - 4.*a1.*b3.*q3.*s4.*s9 - 4.*a1.*b3.*q3.*s5.*s8 + 8.*a1.*b3.*q3.*s6.*s7 - 4.*a2.*b2.*q2.*s6.*s8 - 4.*a3.*b2.*q1.*s5.*s9 + 8.*a3.*b3.*q1.*s4.*s9 - 4.*a3.*b3.*q1.*s5.*s8 - 4.*a3.*b3.*q1.*s6.*s7 - 8.*a3.*b3.*q3.*s3.*s8 + 8.*a2.*b2.*q3.*s6.*s9 + 4.*a2.*b3.*q3.*s6.*s8 - 4.*a3.*b2.*q2.*s6.*s9 - 8.*a3.*b3.*q2.*s6.*s8 + 4.*a3.*b3.*q3.*s6.*s9 + 4.*a1.*a2.*b1.*b3.*s4.^2 - 4.*a1.*a3.*b1.*b2.*s5.^2 + 4.*a1.*a2.*b3.*q1.*s4.^2 - 4.*a1.*a3.*b2.*q1.*s5.^2 - 4.*a2.*a3.*b2.*q2.*s6.^2 + 4.*a2.*a3.*b3.*q3.*s6.^2 + 8.*a1.*a2.*b2.^2.*s2.*s5 + 16.*a2.*a3.*b2.^2.*s2.*s3 - 8.*a1.*a2.*b3.^2.*s2.*s5 + 8.*a1.*a3.*b2.^2.*s3.*s4 - 16.*a2.*a3.*b3.^2.*s2.*s3 - 8.*a1.*a3.*b3.^2.*s3.*s4 - 4.*a1.*a2.*b2.^2.*s4.*s6 + 4.*a1.*a2.*b3.^2.*s4.*s6 - 4.*a1.*a3.*b2.^2.*s5.*s6 + 4.*a1.*a3.*b3.^2.*s5.*s6 + 16.*a1.^2.*b2.*b3.*s1.*s2 - 16.*a1.^2.*b2.*b3.*s1.*s3 - 8.*a2.^2.*b1.*b2.*s2.*s5 - 16.*a2.^2.*b2.*b3.*s2.*s3 + 16.*a3.^2.*b2.*b3.*s2.*s3 + 8.*a3.^2.*b1.*b3.*s3.*s4 + 4.*a2.^2.*b1.*b2.*s4.*s6 - 4.*a3.^2.*b1.*b3.*s5.*s6 + 16.*a1.^2.*b3.*q2.*s1.*s2 - 16.*a1.^2.*b2.*q3.*s1.*s3 - 8.*a1.^2.*b2.*q2.*s1.*s6 - 8.*a2.^2.*b2.*q1.*s2.*s5 - 16.*a2.^2.*b2.*q3.*s2.*s3 + 16.*a3.^2.*b3.*q2.*s2.*s3 + 4.*a1.^2.*b2.*q2.*s4.*s5 + 8.*a1.^2.*b3.*q3.*s1.*s6 + 8.*a3.^2.*b3.*q1.*s3.*s4 + 4.*a2.^2.*b2.*q1.*s4.*s6 - 4.*a1.^2.*b3.*q3.*s4.*s5 - 4.*a3.^2.*b3.*q1.*s5.*s6 - 16.*a1.*a2.*b1.*b3.*s1.*s2 + 16.*a1.*a3.*b1.*b2.*s1.*s3 + 8.*a1.*a2.*b1.*b2.*s1.*s6 - 4.*a1.*a2.*b1.*b2.*s4.*s5 - 16.*a1.*a2.*b2.*b3.*s3.*s4 - 8.*a1.*a3.*b1.*b3.*s1.*s6 + 8.*a2.*a3.*b1.*b2.*s3.*s4 + 16.*a1.*a3.*b2.*b3.*s2.*s5 - 8.*a2.*a3.*b1.*b3.*s2.*s5 + 4.*a1.*a3.*b1.*b3.*s4.*s5 + 8.*a1.*a2.*b2.*b3.*s5.*s6 - 8.*a1.*a3.*b2.*b3.*s4.*s6 - 4.*a2.*a3.*b1.*b2.*s5.*s6 + 4.*a2.*a3.*b1.*b3.*s4.*s6 - 16.*a1.*a2.*b3.*q1.*s1.*s2 + 16.*a1.*a3.*b2.*q1.*s1.*s3 + 8.*a1.*a2.*b2.*q1.*s1.*s6 + 8.*a1.*a2.*b2.*q2.*s2.*s5 + 16.*a2.*a3.*b2.*q2.*s2.*s3 - 4.*a1.*a2.*b2.*q1.*s4.*s5 - 16.*a1.*a2.*b2.*q3.*s3.*s4 + 8.*a1.*a3.*b2.*q2.*s3.*s4 - 8.*a1.*a3.*b3.*q1.*s1.*s6 + 8.*a2.*a3.*b2.*q1.*s3.*s4 - 8.*a1.*a2.*b3.*q3.*s2.*s5 + 16.*a1.*a3.*b3.*q2.*s2.*s5 - 8.*a2.*a3.*b3.*q1.*s2.*s5 - 16.*a2.*a3.*b3.*q3.*s2.*s3 - 4.*a1.*a2.*b2.*q2.*s4.*s6 + 4.*a1.*a3.*b3.*q1.*s4.*s5 - 8.*a1.*a3.*b3.*q3.*s3.*s4 + 8.*a1.*a2.*b2.*q3.*s5.*s6 + 4.*a1.*a2.*b3.*q3.*s4.*s6 - 4.*a1.*a3.*b2.*q2.*s5.*s6 - 8.*a1.*a3.*b3.*q2.*s4.*s6 - 4.*a2.*a3.*b2.*q1.*s5.*s6 + 4.*a2.*a3.*b3.*q1.*s4.*s6 + 4.*a1.*a3.*b3.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 + 2.*a1.^2.*b2.*b3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*b3.*s6 + 2.*a1.^2.*b2.*q2.*s4.^2 - 8.*s1.*s2.*a1.^2.*b2.*q2 + 2.*a1.^2.*b2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*b2.*q3.*s6 + 2.*a1.^2.*b2.*s4.*s7 - 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 + 2.*a1.^2.*b3.*q2.*s4.*s5 - 4.*s1.*a1.^2.*b3.*q2.*s6 + 2.*a1.^2.*b3.*q3.*s5.^2 - 8.*s1.*s3.*a1.^2.*b3.*q3 + 2.*a1.^2.*b3.*s5.*s7 - 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s5 - 4.*s1.*a1.^2.*q2.*q3.*s6 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s5.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s5.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 - 2.*a1.*a2.*b1.*b2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*b2 - 2.*a1.*a2.*b1.*b3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*b3.*s6 - 2.*a1.*a2.*b1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*q2 - 2.*a1.*a2.*b1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*b1.*q3.*s6 - 2.*a1.*a2.*b1.*s4.*s7 + 4.*s1.*a1.*a2.*b1.*s8 - 2.*a1.*a2.*b2.*b3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*b3.*s5 - 2.*a1.*a2.*b2.*q1.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b2.*q1 - 2.*a1.*a2.*b2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*b2.*q3.*s5 - 2.*a1.*a2.*b2.*s4.*s8 + 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 - 2.*a1.*a2.*b3.*q1.*s4.*s5 + 4.*s1.*a1.*a2.*b3.*q1.*s6 - 2.*a1.*a2.*b3.*q2.*s4.*s6 + 4.*s2.*a1.*a2.*b3.*q2.*s5 - 8.*s3.*a1.*a2.*b3.*q3.*s4 + 4.*a1.*a2.*b3.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*s4.*s9 + 2.*a1.*a2.*b3.*s5.*s8 + 2.*a1.*a2.*b3.*s6.*s7 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s5 + 4.*s1.*a1.*a2.*q1.*q3.*s6 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s6 + 4.*s2.*a1.*a2.*q2.*q3.*s5 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s8 + 2.*a1.*a2.*q3.*s6.*s7 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 - 2.*a1.*a3.*b1.*b2.*s4.*s5 + 4.*s1.*a1.*a3.*b1.*b2.*s6 - 2.*a1.*a3.*b1.*b3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*b3 - 2.*a1.*a3.*b1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*b1.*q2.*s6 - 2.*a1.*a3.*b1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b1.*q3 - 2.*a1.*a3.*b1.*s5.*s7 + 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*b2.^2.*s5 + 4.*s3.*a1.*a3.*b2.*b3.*s4 - 2.*a1.*a3.*b2.*b3.*s5.*s6 - 2.*a1.*a3.*b2.*q1.*s4.*s5 + 4.*s1.*a1.*a3.*b2.*q1.*s6 + 4.*a1.*a3.*b2.*q2.*s4.*s6 - 8.*s2.*a1.*a3.*b2.*q2.*s5 + 4.*s3.*a1.*a3.*b2.*q3.*s4 - 2.*a1.*a3.*b2.*q3.*s5.*s6 + 2.*a1.*a3.*b2.*s4.*s9 - 4.*a1.*a3.*b2.*s5.*s8 + 2.*a1.*a3.*b2.*s6.*s7 - 2.*a1.*a3.*b3.*q1.*s5.^2 + 8.*s1.*s3.*a1.*a3.*b3.*q1 + 4.*s3.*a1.*a3.*b3.*q2.*s4 - 2.*a1.*a3.*b3.*q2.*s5.*s6 - 2.*a1.*a3.*b3.*s5.*s9 + 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s5 + 4.*s1.*a1.*a3.*q1.*q2.*s6 - 2.*a1.*a3.*q1.*q3.*s5.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s5.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s6 - 4.*s2.*a1.*a3.*q2.^2.*s5 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 - 4.*a1.*a3.*q2.*s5.*s8 + 2.*a1.*a3.*q2.*s6.*s7 - 2.*a1.*a3.*q3.*s5.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s5 + 2.*a1.*a3.*s7.*s9 - 2.*a1.*b1.*b2.*s4.*s7 + 4.*s1.*a1.*b1.*b2.*s8 - 2.*a1.*b1.*b3.*s5.*s7 + 4.*s1.*a1.*b1.*b3.*s9 - 2.*a1.*b1.*q2.*s4.*s7 + 4.*s1.*a1.*b1.*q2.*s8 - 2.*a1.*b1.*q3.*s5.*s7 + 4.*s1.*a1.*b1.*q3.*s9 - 2.*a1.*b1.*s7.^2 + 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 + 2.*a1.*b2.*b3.*s4.*s9 + 2.*a1.*b2.*b3.*s5.*s8 - 4.*a1.*b2.*b3.*s6.*s7 - 2.*a1.*b2.*q1.*s4.*s7 + 4.*s1.*a1.*b2.*q1.*s8 + 4.*a1.*b2.*q2.*s4.*s8 - 8.*s2.*a1.*b2.*q2.*s7 + 2.*a1.*b2.*q3.*s4.*s9 + 2.*a1.*b2.*q3.*s5.*s8 - 4.*a1.*b2.*q3.*s6.*s7 + 4.*s10.*a1.*b2.*s4 - 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s5.*s9 - 4.*s3.*a1.*b3.^2.*s7 - 2.*a1.*b3.*q1.*s5.*s7 + 4.*s1.*a1.*b3.*q1.*s9 + 2.*a1.*b3.*q2.*s4.*s9 + 2.*a1.*b3.*q2.*s5.*s8 - 4.*a1.*b3.*q2.*s6.*s7 + 4.*a1.*b3.*q3.*s5.*s9 - 8.*s3.*a1.*b3.*q3.*s7 + 4.*s10.*a1.*b3.*s5 - 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s5.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 + 2.*a1.*q2.*q3.*s5.*s8 - 4.*a1.*q2.*q3.*s6.*s7 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s5.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s5 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 + 2.*a2.^2.*b1.*b3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*b3.*s5 + 2.*a2.^2.*b1.*q1.*s4.^2 - 8.*s1.*s2.*a2.^2.*b1.*q1 + 2.*a2.^2.*b1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*b1.*q3.*s5 + 2.*a2.^2.*b1.*s4.*s8 - 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 + 2.*a2.^2.*b3.*q1.*s4.*s6 - 4.*s2.*a2.^2.*b3.*q1.*s5 + 2.*a2.^2.*b3.*q3.*s6.^2 - 8.*s2.*s3.*a2.^2.*b3.*q3 + 2.*a2.^2.*b3.*s6.*s8 - 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s6 - 4.*s2.*a2.^2.*q1.*q3.*s5 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s6.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s6.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*b1.^2.*s6 - 2.*a2.*a3.*b1.*b2.*s4.*s6 + 4.*s2.*a2.*a3.*b1.*b2.*s5 + 4.*s3.*a2.*a3.*b1.*b3.*s4 - 2.*a2.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b1.*q1.*s4.*s5 - 8.*s1.*a2.*a3.*b1.*q1.*s6 - 2.*a2.*a3.*b1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*b1.*q2.*s5 + 4.*s3.*a2.*a3.*b1.*q3.*s4 - 2.*a2.*a3.*b1.*q3.*s5.*s6 + 2.*a2.*a3.*b1.*s4.*s9 + 2.*a2.*a3.*b1.*s5.*s8 - 4.*a2.*a3.*b1.*s6.*s7 - 2.*a2.*a3.*b2.*b3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*b3 - 2.*a2.*a3.*b2.*q1.*s4.*s6 + 4.*s2.*a2.*a3.*b2.*q1.*s5 - 2.*a2.*a3.*b2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b2.*q3 - 2.*a2.*a3.*b2.*s6.*s8 + 4.*s2.*a2.*a3.*b2.*s9 + 4.*s3.*a2.*a3.*b3.*q1.*s4 - 2.*a2.*a3.*b3.*q1.*s5.*s6 - 2.*a2.*a3.*b3.*q2.*s6.^2 + 8.*s2.*s3.*a2.*a3.*b3.*q2 - 2.*a2.*a3.*b3.*s6.*s9 + 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s5 - 4.*s1.*a2.*a3.*q1.^2.*s6 - 2.*a2.*a3.*q1.*q2.*s4.*s6 + 4.*s2.*a2.*a3.*q1.*q2.*s5 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 + 2.*a2.*a3.*q1.*s5.*s8 - 4.*a2.*a3.*q1.*s6.*s7 - 2.*a2.*a3.*q2.*q3.*s6.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s6.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s6.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s6 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 - 2.*a2.*b1.*b2.*s4.*s8 + 4.*s2.*a2.*b1.*b2.*s7 + 2.*a2.*b1.*b3.*s4.*s9 - 4.*a2.*b1.*b3.*s5.*s8 + 2.*a2.*b1.*b3.*s6.*s7 + 4.*a2.*b1.*q1.*s4.*s7 - 8.*s1.*a2.*b1.*q1.*s8 - 2.*a2.*b1.*q2.*s4.*s8 + 4.*s2.*a2.*b1.*q2.*s7 + 2.*a2.*b1.*q3.*s4.*s9 - 4.*a2.*b1.*q3.*s5.*s8 + 2.*a2.*b1.*q3.*s6.*s7 + 4.*s10.*a2.*b1.*s4 - 2.*a2.*b1.*s7.*s8 - 2.*a2.*b2.*b3.*s6.*s8 + 4.*s2.*a2.*b2.*b3.*s9 - 2.*a2.*b2.*q1.*s4.*s8 + 4.*s2.*a2.*b2.*q1.*s7 - 2.*a2.*b2.*q3.*s6.*s8 + 4.*s2.*a2.*b2.*q3.*s9 - 2.*a2.*b2.*s8.^2 + 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s6.*s9 - 4.*s3.*a2.*b3.^2.*s8 + 2.*a2.*b3.*q1.*s4.*s9 - 4.*a2.*b3.*q1.*s5.*s8 + 2.*a2.*b3.*q1.*s6.*s7 - 2.*a2.*b3.*q2.*s6.*s8 + 4.*s2.*a2.*b3.*q2.*s9 + 4.*a2.*b3.*q3.*s6.*s9 - 8.*s3.*a2.*b3.*q3.*s8 + 4.*s10.*a2.*b3.*s6 - 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 - 4.*a2.*q1.*q3.*s5.*s8 + 2.*a2.*q1.*q3.*s6.*s7 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s6.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s6.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s6 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 - 4.*s3.*a3.^2.*b1.*b2.*s4 + 2.*a3.^2.*b1.*b2.*s5.*s6 + 2.*a3.^2.*b1.*q1.*s5.^2 - 8.*s1.*s3.*a3.^2.*b1.*q1 - 4.*s3.*a3.^2.*b1.*q2.*s4 + 2.*a3.^2.*b1.*q2.*s5.*s6 + 2.*a3.^2.*b1.*s5.*s9 - 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 - 4.*s3.*a3.^2.*b2.*q1.*s4 + 2.*a3.^2.*b2.*q1.*s5.*s6 + 2.*a3.^2.*b2.*q2.*s6.^2 - 8.*s2.*s3.*a3.^2.*b2.*q2 + 2.*a3.^2.*b2.*s6.*s9 - 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s5.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s5.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s6.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s6.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s5.*s7 - 4.*s1.*a3.*b1.^2.*s9 - 4.*a3.*b1.*b2.*s4.*s9 + 2.*a3.*b1.*b2.*s5.*s8 + 2.*a3.*b1.*b2.*s6.*s7 - 2.*a3.*b1.*b3.*s5.*s9 + 4.*s3.*a3.*b1.*b3.*s7 + 4.*a3.*b1.*q1.*s5.*s7 - 8.*s1.*a3.*b1.*q1.*s9 - 4.*a3.*b1.*q2.*s4.*s9 + 2.*a3.*b1.*q2.*s5.*s8 + 2.*a3.*b1.*q2.*s6.*s7 - 2.*a3.*b1.*q3.*s5.*s9 + 4.*s3.*a3.*b1.*q3.*s7 + 4.*s10.*a3.*b1.*s5 - 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s6.*s8 - 4.*s2.*a3.*b2.^2.*s9 - 2.*a3.*b2.*b3.*s6.*s9 + 4.*s3.*a3.*b2.*b3.*s8 - 4.*a3.*b2.*q1.*s4.*s9 + 2.*a3.*b2.*q1.*s5.*s8 + 2.*a3.*b2.*q1.*s6.*s7 + 4.*a3.*b2.*q2.*s6.*s8 - 8.*s2.*a3.*b2.*q2.*s9 - 2.*a3.*b2.*q3.*s6.*s9 + 4.*s3.*a3.*b2.*q3.*s8 + 4.*s10.*a3.*b2.*s6 - 2.*a3.*b2.*s8.*s9 - 2.*a3.*b3.*q1.*s5.*s9 + 4.*s3.*a3.*b3.*q1.*s7 - 2.*a3.*b3.*q2.*s6.*s9 + 4.*s3.*a3.*b3.*q2.*s8 - 2.*a3.*b3.*s9.^2 + 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s5.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s8 + 2.*a3.*q1.*q2.*s6.*s7 - 2.*a3.*q1.*q3.*s5.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s5 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s6.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s6.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s6 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 - 4.*s10.*b1.*b2.*s4 + 2.*b1.*b2.*s7.*s8 - 4.*s10.*b1.*b3.*s5 + 2.*b1.*b3.*s7.*s9 + 2.*b1.*q1.*s7.^2 - 8.*s1.*s10.*b1.*q1 - 4.*s10.*b1.*q2.*s4 + 2.*b1.*q2.*s7.*s8 - 4.*s10.*b1.*q3.*s5 + 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 - 4.*s10.*b2.*b3.*s6 + 2.*b2.*b3.*s8.*s9 - 4.*s10.*b2.*q1.*s4 + 2.*b2.*q1.*s7.*s8 + 2.*b2.*q2.*s8.^2 - 8.*s2.*s10.*b2.*q2 - 4.*s10.*b2.*q3.*s6 + 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 - 4.*s10.*b3.*q1.*s5 + 2.*b3.*q1.*s7.*s9 - 4.*s10.*b3.*q2.*s6 + 2.*b3.*q2.*s8.*s9 + 2.*b3.*q3.*s9.^2 - 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s5 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s6 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1])];
                
            elseif rot_axis ==6
                v_coeff_u =@(u,a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3)...
                    [reshape((s1.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)) + (s4.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)))./2 - (s6.*(b3 - a3 + q3))./2).*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)) + (s2.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)) + (s4.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)))./2 - (s5.*(b3 - a3 + q3))./2).*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)) - ((s6.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)))./2 + (s5.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)))./2 - s3.*(b3 - a3 + q3)).*(b3 - a3 + q3),[size(a1,2)*size(s1,1),1]),...
                    reshape((b3 - a3 + q3).*(s9./2 + a3.*s3 + (a1.*s6)./2 + (a2.*s5)./2) - (s8./2 + a2.*s2 + (a1.*s4)./2 + (a3.*s5)./2).*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)) - (s7./2 + a1.*s1 + (a2.*s4)./2 + (a3.*s6)./2).*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)) - a1.*(s1.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)) + (s4.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)))./2 - (s6.*(b3 - a3 + q3))./2) - a2.*(s2.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)) + (s4.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)))./2 - (s5.*(b3 - a3 + q3))./2) - a3.*((s6.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)))./2 + (s5.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)))./2 - s3.*(b3 - a3 + q3)) - (s7.*(a1 - q1 + (b1.*(u.^2 - 1))./(u.^2 + 1) + (2.*b2.*u)./(u.^2 + 1)))./2 - (s8.*(a2 - q2 + (b2.*(u.^2 - 1))./(u.^2 + 1) - (2.*b1.*u)./(u.^2 + 1)))./2 + (s9.*(b3 - a3 + q3))./2,[size(a1,2)*size(s1,1),1]),...
                    reshape(s10 + (a1.*s7)./2 + (a2.*s8)./2 + (a3.*s9)./2 + a1.*(s7./2 + a1.*s1 + (a2.*s4)./2 + (a3.*s6)./2) + a2.*(s8./2 + a2.*s2 + (a1.*s4)./2 + (a3.*s5)./2) + a3.*(s9./2 + a3.*s3 + (a1.*s6)./2 + (a2.*s5)./2),[size(a1,2)*size(s1,1),1])];
                
                
                u_coeff = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 - 2.*a1.^2.*b2.*b3.*s4.*s6 + 4.*s1.*a1.^2.*b2.*b3.*s5 - 2.*a1.^2.*b2.*q2.*s4.^2 + 8.*s1.*s2.*a1.^2.*b2.*q2 - 2.*a1.^2.*b2.*q3.*s4.*s6 + 4.*s1.*a1.^2.*b2.*q3.*s5 - 2.*a1.^2.*b2.*s4.*s7 + 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s6.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 + 2.*a1.^2.*b3.*q2.*s4.*s6 - 4.*s1.*a1.^2.*b3.*q2.*s5 + 2.*a1.^2.*b3.*q3.*s6.^2 - 8.*s1.*s3.*a1.^2.*b3.*q3 + 2.*a1.^2.*b3.*s6.*s7 - 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s6 - 4.*s1.*a1.^2.*q2.*q3.*s5 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s6.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s6.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 - 2.*a1.*a2.*b1.*b2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*b2 + 2.*a1.*a2.*b1.*b3.*s4.*s6 - 4.*s1.*a1.*a2.*b1.*b3.*s5 + 2.*a1.*a2.*b1.*q2.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b1.*q2 + 2.*a1.*a2.*b1.*q3.*s4.*s6 - 4.*s1.*a1.*a2.*b1.*q3.*s5 + 2.*a1.*a2.*b1.*s4.*s7 - 4.*s1.*a1.*a2.*b1.*s8 + 2.*a1.*a2.*b2.*b3.*s4.*s5 - 4.*s2.*a1.*a2.*b2.*b3.*s6 + 2.*a1.*a2.*b2.*q1.*s4.^2 - 8.*s1.*s2.*a1.*a2.*b2.*q1 + 2.*a1.*a2.*b2.*q3.*s4.*s5 - 4.*s2.*a1.*a2.*b2.*q3.*s6 + 2.*a1.*a2.*b2.*s4.*s8 - 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 - 2.*a1.*a2.*b3.*q1.*s4.*s6 + 4.*s1.*a1.*a2.*b3.*q1.*s5 - 2.*a1.*a2.*b3.*q2.*s4.*s5 + 4.*s2.*a1.*a2.*b3.*q2.*s6 - 8.*s3.*a1.*a2.*b3.*q3.*s4 + 4.*a1.*a2.*b3.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*s4.*s9 + 2.*a1.*a2.*b3.*s5.*s7 + 2.*a1.*a2.*b3.*s6.*s8 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s6 + 4.*s1.*a1.*a2.*q1.*q3.*s5 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s5 + 4.*s2.*a1.*a2.*q2.*q3.*s6 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s7 + 2.*a1.*a2.*q3.*s6.*s8 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 - 2.*a1.*a3.*b1.*b2.*s4.*s6 + 4.*s1.*a1.*a3.*b1.*b2.*s5 + 2.*a1.*a3.*b1.*b3.*s6.^2 - 8.*s1.*s3.*a1.*a3.*b1.*b3 + 2.*a1.*a3.*b1.*q2.*s4.*s6 - 4.*s1.*a1.*a3.*b1.*q2.*s5 + 2.*a1.*a3.*b1.*q3.*s6.^2 - 8.*s1.*s3.*a1.*a3.*b1.*q3 + 2.*a1.*a3.*b1.*s6.*s7 - 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s5 - 4.*s2.*a1.*a3.*b2.^2.*s6 - 4.*s3.*a1.*a3.*b2.*b3.*s4 + 2.*a1.*a3.*b2.*b3.*s5.*s6 + 2.*a1.*a3.*b2.*q1.*s4.*s6 - 4.*s1.*a1.*a3.*b2.*q1.*s5 - 4.*a1.*a3.*b2.*q2.*s4.*s5 + 8.*s2.*a1.*a3.*b2.*q2.*s6 - 4.*s3.*a1.*a3.*b2.*q3.*s4 + 2.*a1.*a3.*b2.*q3.*s5.*s6 - 2.*a1.*a3.*b2.*s4.*s9 - 2.*a1.*a3.*b2.*s5.*s7 + 4.*a1.*a3.*b2.*s6.*s8 - 2.*a1.*a3.*b3.*q1.*s6.^2 + 8.*s1.*s3.*a1.*a3.*b3.*q1 + 4.*s3.*a1.*a3.*b3.*q2.*s4 - 2.*a1.*a3.*b3.*q2.*s5.*s6 - 2.*a1.*a3.*b3.*s6.*s9 + 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s6 + 4.*s1.*a1.*a3.*q1.*q2.*s5 - 2.*a1.*a3.*q1.*q3.*s6.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s6.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s5 - 4.*s2.*a1.*a3.*q2.^2.*s6 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 + 2.*a1.*a3.*q2.*s5.*s7 - 4.*a1.*a3.*q2.*s6.*s8 - 2.*a1.*a3.*q3.*s6.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s6 + 2.*a1.*a3.*s7.*s9 - 2.*a1.*b1.*b2.*s4.*s7 + 4.*s1.*a1.*b1.*b2.*s8 + 2.*a1.*b1.*b3.*s6.*s7 - 4.*s1.*a1.*b1.*b3.*s9 + 2.*a1.*b1.*q2.*s4.*s7 - 4.*s1.*a1.*b1.*q2.*s8 + 2.*a1.*b1.*q3.*s6.*s7 - 4.*s1.*a1.*b1.*q3.*s9 + 2.*a1.*b1.*s7.^2 - 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 - 2.*a1.*b2.*b3.*s4.*s9 + 4.*a1.*b2.*b3.*s5.*s7 - 2.*a1.*b2.*b3.*s6.*s8 + 2.*a1.*b2.*q1.*s4.*s7 - 4.*s1.*a1.*b2.*q1.*s8 - 4.*a1.*b2.*q2.*s4.*s8 + 8.*s2.*a1.*b2.*q2.*s7 - 2.*a1.*b2.*q3.*s4.*s9 + 4.*a1.*b2.*q3.*s5.*s7 - 2.*a1.*b2.*q3.*s6.*s8 - 4.*s10.*a1.*b2.*s4 + 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s6.*s9 - 4.*s3.*a1.*b3.^2.*s7 - 2.*a1.*b3.*q1.*s6.*s7 + 4.*s1.*a1.*b3.*q1.*s9 + 2.*a1.*b3.*q2.*s4.*s9 - 4.*a1.*b3.*q2.*s5.*s7 + 2.*a1.*b3.*q2.*s6.*s8 + 4.*a1.*b3.*q3.*s6.*s9 - 8.*s3.*a1.*b3.*q3.*s7 + 4.*s10.*a1.*b3.*s6 - 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s6.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 - 4.*a1.*q2.*q3.*s5.*s7 + 2.*a1.*q2.*q3.*s6.*s8 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s6.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s6 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 - 2.*a2.^2.*b1.*b3.*s4.*s5 + 4.*s2.*a2.^2.*b1.*b3.*s6 - 2.*a2.^2.*b1.*q1.*s4.^2 + 8.*s1.*s2.*a2.^2.*b1.*q1 - 2.*a2.^2.*b1.*q3.*s4.*s5 + 4.*s2.*a2.^2.*b1.*q3.*s6 - 2.*a2.^2.*b1.*s4.*s8 + 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s5.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 + 2.*a2.^2.*b3.*q1.*s4.*s5 - 4.*s2.*a2.^2.*b3.*q1.*s6 + 2.*a2.^2.*b3.*q3.*s5.^2 - 8.*s2.*s3.*a2.^2.*b3.*q3 + 2.*a2.^2.*b3.*s5.*s8 - 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s5 - 4.*s2.*a2.^2.*q1.*q3.*s6 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s5.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s5.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s6 - 4.*s1.*a2.*a3.*b1.^2.*s5 - 2.*a2.*a3.*b1.*b2.*s4.*s5 + 4.*s2.*a2.*a3.*b1.*b2.*s6 - 4.*s3.*a2.*a3.*b1.*b3.*s4 + 2.*a2.*a3.*b1.*b3.*s5.*s6 - 4.*a2.*a3.*b1.*q1.*s4.*s6 + 8.*s1.*a2.*a3.*b1.*q1.*s5 + 2.*a2.*a3.*b1.*q2.*s4.*s5 - 4.*s2.*a2.*a3.*b1.*q2.*s6 - 4.*s3.*a2.*a3.*b1.*q3.*s4 + 2.*a2.*a3.*b1.*q3.*s5.*s6 - 2.*a2.*a3.*b1.*s4.*s9 + 4.*a2.*a3.*b1.*s5.*s7 - 2.*a2.*a3.*b1.*s6.*s8 + 2.*a2.*a3.*b2.*b3.*s5.^2 - 8.*s2.*s3.*a2.*a3.*b2.*b3 + 2.*a2.*a3.*b2.*q1.*s4.*s5 - 4.*s2.*a2.*a3.*b2.*q1.*s6 + 2.*a2.*a3.*b2.*q3.*s5.^2 - 8.*s2.*s3.*a2.*a3.*b2.*q3 + 2.*a2.*a3.*b2.*s5.*s8 - 4.*s2.*a2.*a3.*b2.*s9 + 4.*s3.*a2.*a3.*b3.*q1.*s4 - 2.*a2.*a3.*b3.*q1.*s5.*s6 - 2.*a2.*a3.*b3.*q2.*s5.^2 + 8.*s2.*s3.*a2.*a3.*b3.*q2 - 2.*a2.*a3.*b3.*s5.*s9 + 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s6 - 4.*s1.*a2.*a3.*q1.^2.*s5 - 2.*a2.*a3.*q1.*q2.*s4.*s5 + 4.*s2.*a2.*a3.*q1.*q2.*s6 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 - 4.*a2.*a3.*q1.*s5.*s7 + 2.*a2.*a3.*q1.*s6.*s8 - 2.*a2.*a3.*q2.*q3.*s5.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s5.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s5.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s5 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 - 2.*a2.*b1.*b2.*s4.*s8 + 4.*s2.*a2.*b1.*b2.*s7 - 2.*a2.*b1.*b3.*s4.*s9 - 2.*a2.*b1.*b3.*s5.*s7 + 4.*a2.*b1.*b3.*s6.*s8 - 4.*a2.*b1.*q1.*s4.*s7 + 8.*s1.*a2.*b1.*q1.*s8 + 2.*a2.*b1.*q2.*s4.*s8 - 4.*s2.*a2.*b1.*q2.*s7 - 2.*a2.*b1.*q3.*s4.*s9 - 2.*a2.*b1.*q3.*s5.*s7 + 4.*a2.*b1.*q3.*s6.*s8 - 4.*s10.*a2.*b1.*s4 + 2.*a2.*b1.*s7.*s8 + 2.*a2.*b2.*b3.*s5.*s8 - 4.*s2.*a2.*b2.*b3.*s9 + 2.*a2.*b2.*q1.*s4.*s8 - 4.*s2.*a2.*b2.*q1.*s7 + 2.*a2.*b2.*q3.*s5.*s8 - 4.*s2.*a2.*b2.*q3.*s9 + 2.*a2.*b2.*s8.^2 - 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s5.*s9 - 4.*s3.*a2.*b3.^2.*s8 + 2.*a2.*b3.*q1.*s4.*s9 + 2.*a2.*b3.*q1.*s5.*s7 - 4.*a2.*b3.*q1.*s6.*s8 - 2.*a2.*b3.*q2.*s5.*s8 + 4.*s2.*a2.*b3.*q2.*s9 + 4.*a2.*b3.*q3.*s5.*s9 - 8.*s3.*a2.*b3.*q3.*s8 + 4.*s10.*a2.*b3.*s5 - 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 + 2.*a2.*q1.*q3.*s5.*s7 - 4.*a2.*q1.*q3.*s6.*s8 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s5.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s5.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s5 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s6.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 - 4.*s3.*a3.^2.*b1.*b2.*s4 + 2.*a3.^2.*b1.*b2.*s5.*s6 - 2.*a3.^2.*b1.*q1.*s6.^2 + 8.*s1.*s3.*a3.^2.*b1.*q1 + 4.*s3.*a3.^2.*b1.*q2.*s4 - 2.*a3.^2.*b1.*q2.*s5.*s6 - 2.*a3.^2.*b1.*s6.*s9 + 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s5.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 + 4.*s3.*a3.^2.*b2.*q1.*s4 - 2.*a3.^2.*b2.*q1.*s5.*s6 - 2.*a3.^2.*b2.*q2.*s5.^2 + 8.*s2.*s3.*a3.^2.*b2.*q2 - 2.*a3.^2.*b2.*s5.*s9 + 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s6.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s6.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s5.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s5.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s6.*s7 - 4.*s1.*a3.*b1.^2.*s9 - 4.*a3.*b1.*b2.*s4.*s9 + 2.*a3.*b1.*b2.*s5.*s7 + 2.*a3.*b1.*b2.*s6.*s8 + 2.*a3.*b1.*b3.*s6.*s9 - 4.*s3.*a3.*b1.*b3.*s7 - 4.*a3.*b1.*q1.*s6.*s7 + 8.*s1.*a3.*b1.*q1.*s9 + 4.*a3.*b1.*q2.*s4.*s9 - 2.*a3.*b1.*q2.*s5.*s7 - 2.*a3.*b1.*q2.*s6.*s8 + 2.*a3.*b1.*q3.*s6.*s9 - 4.*s3.*a3.*b1.*q3.*s7 - 4.*s10.*a3.*b1.*s6 + 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s5.*s8 - 4.*s2.*a3.*b2.^2.*s9 + 2.*a3.*b2.*b3.*s5.*s9 - 4.*s3.*a3.*b2.*b3.*s8 + 4.*a3.*b2.*q1.*s4.*s9 - 2.*a3.*b2.*q1.*s5.*s7 - 2.*a3.*b2.*q1.*s6.*s8 - 4.*a3.*b2.*q2.*s5.*s8 + 8.*s2.*a3.*b2.*q2.*s9 + 2.*a3.*b2.*q3.*s5.*s9 - 4.*s3.*a3.*b2.*q3.*s8 - 4.*s10.*a3.*b2.*s5 + 2.*a3.*b2.*s8.*s9 - 2.*a3.*b3.*q1.*s6.*s9 + 4.*s3.*a3.*b3.*q1.*s7 - 2.*a3.*b3.*q2.*s5.*s9 + 4.*s3.*a3.*b3.*q2.*s8 - 2.*a3.*b3.*s9.^2 + 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s6.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s7 + 2.*a3.*q1.*q2.*s6.*s8 - 2.*a3.*q1.*q3.*s6.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s6 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s5.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s5.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s5 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 - 4.*s10.*b1.*b2.*s4 + 2.*b1.*b2.*s7.*s8 + 4.*s10.*b1.*b3.*s6 - 2.*b1.*b3.*s7.*s9 - 2.*b1.*q1.*s7.^2 + 8.*s1.*s10.*b1.*q1 + 4.*s10.*b1.*q2.*s4 - 2.*b1.*q2.*s7.*s8 + 4.*s10.*b1.*q3.*s6 - 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 + 4.*s10.*b2.*b3.*s5 - 2.*b2.*b3.*s8.*s9 + 4.*s10.*b2.*q1.*s4 - 2.*b2.*q1.*s7.*s8 - 2.*b2.*q2.*s8.^2 + 8.*s2.*s10.*b2.*q2 + 4.*s10.*b2.*q3.*s5 - 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 - 4.*s10.*b3.*q1.*s6 + 2.*b3.*q1.*s7.*s9 - 4.*s10.*b3.*q2.*s5 + 2.*b3.*q2.*s8.*s9 + 2.*b3.*q3.*s9.^2 - 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s6 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s5 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b1.*q2.*s8.^2 - 4.*b2.*q1.*s7.^2 + 8.*b1.^2.*s4.*s10 - 4.*b1.^2.*s7.*s8 - 8.*b2.^2.*s4.*s10 + 4.*b2.^2.*s7.*s8 + 4.*a1.*b2.*s7.^2 - 4.*a2.*b1.*s8.^2 + 4.*b1.*b2.*s7.^2 - 4.*b1.*b2.*s8.^2 - 16.*a1.*b2.*s1.*s10 + 16.*a2.*b1.*s2.*s10 + 8.*a1.*b1.*s4.*s10 - 4.*a1.*b1.*s7.*s8 - 8.*a2.*b2.*s4.*s10 + 4.*a2.*b2.*s7.*s8 + 8.*a3.*b1.*s5.*s10 - 4.*a3.*b1.*s8.*s9 - 8.*a3.*b2.*s6.*s10 + 4.*a3.*b2.*s7.*s9 - 16.*b1.*b2.*s1.*s10 + 16.*b1.*b2.*s2.*s10 - 8.*b1.*b3.*s5.*s10 + 4.*b1.*b3.*s8.*s9 + 8.*b2.*b3.*s6.*s10 - 4.*b2.*b3.*s7.*s9 + 16.*b2.*q1.*s1.*s10 - 16.*b1.*q2.*s2.*s10 - 8.*b1.*q1.*s4.*s10 + 4.*b1.*q1.*s7.*s8 + 8.*b2.*q2.*s4.*s10 - 8.*b1.*q3.*s5.*s10 - 4.*b2.*q2.*s7.*s8 + 4.*b1.*q3.*s8.*s9 + 8.*b2.*q3.*s6.*s10 - 4.*b2.*q3.*s7.*s9 - 8.*a1.*b1.^2.*s1.*s8 - 8.*a1.^2.*b1.*s1.*s8 + 8.*a1.*b2.^2.*s1.*s8 - 8.*a2.*b1.^2.*s2.*s7 + 4.*a1.*b1.^2.*s4.*s7 + 8.*a2.*b2.^2.*s2.*s7 + 4.*a1.^2.*b1.*s4.*s7 + 8.*a2.^2.*b2.*s2.*s7 - 4.*a1.*b2.^2.*s4.*s7 + 4.*a2.*b1.^2.*s4.*s8 - 8.*a3.^2.*b1.*s3.*s8 + 8.*a3.^2.*b2.*s3.*s7 - 4.*a2.*b2.^2.*s4.*s8 - 4.*a3.*b1.^2.*s5.*s7 - 4.*a2.^2.*b2.*s4.*s8 + 8.*a3.*b1.^2.*s4.*s9 + 4.*a3.*b2.^2.*s5.*s7 - 4.*a3.*b1.^2.*s6.*s8 - 8.*a3.*b2.^2.*s4.*s9 + 4.*a3.^2.*b1.*s5.*s9 + 4.*a3.*b2.^2.*s6.*s8 - 4.*a3.^2.*b2.*s6.*s9 + 4.*a1.*a2.*b1.^2.*s4.^2 - 4.*a1.*a2.*b2.^2.*s4.^2 - 4.*a1.^2.*b1.*b2.*s4.^2 + 4.*a2.^2.*b1.*b2.*s4.^2 - 4.*a3.^2.*b1.*b2.*s5.^2 + 4.*a3.^2.*b1.*b2.*s6.^2 + 4.*a1.^2.*b1.*q2.*s4.^2 - 4.*a2.^2.*b2.*q1.*s4.^2 + 4.*a3.^2.*b1.*q2.*s5.^2 - 4.*a3.^2.*b2.*q1.*s6.^2 + 8.*a3.^2.*b1.^2.*s3.*s4 - 8.*a3.^2.*b2.^2.*s3.*s4 - 4.*a3.^2.*b1.^2.*s5.*s6 + 4.*a3.^2.*b2.^2.*s5.*s6 + 8.*a1.*a2.*b1.*s2.*s7 - 8.*a1.*a2.*b2.*s1.*s8 - 4.*a1.*a2.*b1.*s4.*s8 + 4.*a1.*a2.*b2.*s4.*s7 - 8.*a1.*a3.*b2.*s1.*s9 + 4.*a1.*a3.*b1.*s5.*s7 + 8.*a2.*a3.*b1.*s2.*s9 + 4.*a1.*a3.*b1.*s4.*s9 - 8.*a1.*a3.*b1.*s6.*s8 + 4.*a1.*a3.*b2.*s6.*s7 - 4.*a2.*a3.*b1.*s5.*s8 + 8.*a2.*a3.*b2.*s5.*s7 - 4.*a2.*a3.*b2.*s4.*s9 - 4.*a2.*a3.*b2.*s6.*s8 + 16.*a1.*b1.*b2.*s2.*s7 - 16.*a2.*b1.*b2.*s1.*s8 - 8.*a1.*b1.*b2.*s4.*s8 - 8.*a1.*b2.*b3.*s1.*s9 + 8.*a2.*b1.*b2.*s4.*s7 - 16.*a3.*b1.*b2.*s1.*s9 - 8.*a1.*b1.*b3.*s5.*s7 + 8.*a2.*b1.*b3.*s2.*s9 + 16.*a3.*b1.*b2.*s2.*s9 + 4.*a1.*b1.*b3.*s4.*s9 + 8.*a3.*b1.*b3.*s3.*s8 - 8.*a3.*b2.*b3.*s3.*s7 + 4.*a1.*b1.*b3.*s6.*s8 + 4.*a1.*b2.*b3.*s6.*s7 - 4.*a2.*b1.*b3.*s5.*s8 - 4.*a2.*b2.*b3.*s5.*s7 - 8.*a3.*b1.*b2.*s5.*s8 + 8.*a3.*b1.*b2.*s6.*s7 - 4.*a2.*b2.*b3.*s4.*s9 + 8.*a2.*b2.*b3.*s6.*s8 - 4.*a3.*b1.*b3.*s5.*s9 + 4.*a3.*b2.*b3.*s6.*s9 + 8.*a1.*b1.*q1.*s1.*s8 - 16.*a1.*b1.*q2.*s2.*s7 + 8.*a2.*b1.*q1.*s2.*s7 - 4.*a1.*b1.*q1.*s4.*s7 - 8.*a1.*b2.*q2.*s1.*s8 + 16.*a2.*b2.*q1.*s1.*s8 - 8.*a2.*b2.*q2.*s2.*s7 + 8.*a1.*b1.*q2.*s4.*s8 + 4.*a1.*b2.*q2.*s4.*s7 - 8.*a1.*b2.*q3.*s1.*s9 - 4.*a2.*b1.*q1.*s4.*s8 - 8.*a2.*b2.*q1.*s4.*s7 + 16.*a3.*b2.*q1.*s1.*s9 - 8.*a1.*b1.*q3.*s5.*s7 + 8.*a2.*b1.*q3.*s2.*s9 + 4.*a3.*b1.*q1.*s5.*s7 - 16.*a3.*b1.*q2.*s2.*s9 + 4.*a1.*b1.*q3.*s4.*s9 + 4.*a2.*b2.*q2.*s4.*s8 - 8.*a3.*b1.*q1.*s4.*s9 + 8.*a3.*b1.*q3.*s3.*s8 - 8.*a3.*b2.*q3.*s3.*s7 + 4.*a1.*b1.*q3.*s6.*s8 + 4.*a1.*b2.*q3.*s6.*s7 - 4.*a2.*b1.*q3.*s5.*s8 - 4.*a2.*b2.*q3.*s5.*s7 + 4.*a3.*b1.*q1.*s6.*s8 + 8.*a3.*b1.*q2.*s5.*s8 - 8.*a3.*b2.*q1.*s6.*s7 - 4.*a3.*b2.*q2.*s5.*s7 - 4.*a2.*b2.*q3.*s4.*s9 + 8.*a3.*b2.*q2.*s4.*s9 + 8.*a2.*b2.*q3.*s6.*s8 - 4.*a3.*b1.*q3.*s5.*s9 - 4.*a3.*b2.*q2.*s6.*s8 + 4.*a3.*b2.*q3.*s6.*s9 - 4.*a2.*a3.*b1.*b3.*s5.^2 + 4.*a1.*a3.*b2.*b3.*s6.^2 - 4.*a1.*a2.*b1.*q1.*s4.^2 + 4.*a1.*a2.*b2.*q2.*s4.^2 - 4.*a2.*a3.*b1.*q3.*s5.^2 + 4.*a1.*a3.*b2.*q3.*s6.^2 - 16.*a1.*a2.*b1.^2.*s1.*s2 + 16.*a1.*a2.*b2.^2.*s1.*s2 - 8.*a1.*a3.*b1.^2.*s1.*s5 + 8.*a1.*a3.*b2.^2.*s1.*s5 - 8.*a2.*a3.*b1.^2.*s2.*s6 + 4.*a1.*a3.*b1.^2.*s4.*s6 + 4.*a2.*a3.*b1.^2.*s4.*s5 + 8.*a2.*a3.*b2.^2.*s2.*s6 - 4.*a1.*a3.*b2.^2.*s4.*s6 - 4.*a2.*a3.*b2.^2.*s4.*s5 + 16.*a1.^2.*b1.*b2.*s1.*s2 - 16.*a2.^2.*b1.*b2.*s1.*s2 - 16.*a3.^2.*b1.*b2.*s1.*s3 - 8.*a1.^2.*b1.*b3.*s1.*s5 + 16.*a3.^2.*b1.*b2.*s2.*s3 + 4.*a1.^2.*b1.*b3.*s4.*s6 + 8.*a2.^2.*b2.*b3.*s2.*s6 - 4.*a2.^2.*b2.*b3.*s4.*s5 - 16.*a1.^2.*b1.*q2.*s1.*s2 + 16.*a2.^2.*b2.*q1.*s1.*s2 + 16.*a3.^2.*b2.*q1.*s1.*s3 - 8.*a1.^2.*b1.*q3.*s1.*s5 - 16.*a3.^2.*b1.*q2.*s2.*s3 - 8.*a3.^2.*b1.*q1.*s3.*s4 + 8.*a3.^2.*b2.*q2.*s3.*s4 + 4.*a1.^2.*b1.*q3.*s4.*s6 + 8.*a2.^2.*b2.*q3.*s2.*s6 - 4.*a2.^2.*b2.*q3.*s4.*s5 + 4.*a3.^2.*b1.*q1.*s5.*s6 - 4.*a3.^2.*b2.*q2.*s5.*s6 - 16.*a1.*a3.*b2.*b3.*s1.*s3 - 8.*a1.*a2.*b2.*b3.*s1.*s5 - 16.*a2.*a3.*b1.*b2.*s1.*s5 + 16.*a2.*a3.*b1.*b3.*s2.*s3 + 8.*a1.*a2.*b1.*b3.*s2.*s6 + 16.*a1.*a3.*b1.*b2.*s2.*s6 + 8.*a1.*a3.*b1.*b3.*s3.*s4 - 4.*a1.*a2.*b1.*b3.*s4.*s5 - 8.*a1.*a3.*b1.*b2.*s4.*s5 - 8.*a2.*a3.*b2.*b3.*s3.*s4 + 4.*a1.*a2.*b2.*b3.*s4.*s6 + 8.*a2.*a3.*b1.*b2.*s4.*s6 - 4.*a1.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b2.*b3.*s5.*s6 + 16.*a1.*a2.*b1.*q1.*s1.*s2 - 16.*a1.*a2.*b2.*q2.*s1.*s2 + 8.*a1.*a3.*b1.*q1.*s1.*s5 - 16.*a1.*a3.*b2.*q3.*s1.*s3 - 8.*a1.*a2.*b2.*q3.*s1.*s5 - 8.*a1.*a3.*b2.*q2.*s1.*s5 + 16.*a2.*a3.*b1.*q3.*s2.*s3 + 16.*a2.*a3.*b2.*q1.*s1.*s5 + 8.*a1.*a2.*b1.*q3.*s2.*s6 - 16.*a1.*a3.*b1.*q2.*s2.*s6 + 8.*a1.*a3.*b1.*q3.*s3.*s4 + 8.*a2.*a3.*b1.*q1.*s2.*s6 - 4.*a1.*a2.*b1.*q3.*s4.*s5 - 4.*a1.*a3.*b1.*q1.*s4.*s6 + 8.*a1.*a3.*b1.*q2.*s4.*s5 - 4.*a2.*a3.*b1.*q1.*s4.*s5 - 8.*a2.*a3.*b2.*q2.*s2.*s6 - 8.*a2.*a3.*b2.*q3.*s3.*s4 + 4.*a1.*a2.*b2.*q3.*s4.*s6 + 4.*a1.*a3.*b2.*q2.*s4.*s6 - 8.*a2.*a3.*b2.*q1.*s4.*s6 + 4.*a2.*a3.*b2.*q2.*s4.*s5 - 4.*a1.*a3.*b1.*q3.*s5.*s6 + 4.*a2.*a3.*b2.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*q1.^2.*s7.^2 + 2.*q2.^2.*s8.^2 + 2.*q3.^2.*s9.^2 + 2.*a1.^2.*s7.^2 + 2.*a2.^2.*s8.^2 + 2.*a3.^2.*s9.^2 - 2.*b1.^2.*s7.^2 + 4.*b1.^2.*s8.^2 + 4.*b2.^2.*s7.^2 - 2.*b2.^2.*s8.^2 + 2.*b3.^2.*s9.^2 - 4.*a1.*q1.*s7.^2 - 4.*a2.*q2.*s8.^2 - 4.*a3.*q3.*s9.^2 + 4.*b3.*q3.*s9.^2 - 8.*a1.^2.*s1.*s10 - 8.*a2.^2.*s2.*s10 - 8.*a3.^2.*s3.*s10 + 8.*b1.^2.*s1.*s10 - 16.*b1.^2.*s2.*s10 - 16.*b2.^2.*s1.*s10 + 8.*b2.^2.*s2.*s10 - 8.*b3.^2.*s3.*s10 - 8.*q1.^2.*s1.*s10 - 8.*q2.^2.*s2.*s10 - 8.*q3.^2.*s3.*s10 + 4.*a1.^2.*b1.^2.*s4.^2 - 2.*a1.^2.*b2.^2.*s4.^2 - 2.*a2.^2.*b1.^2.*s4.^2 + 4.*a2.^2.*b2.^2.*s4.^2 + 4.*a3.^2.*b1.^2.*s5.^2 + 2.*a1.^2.*b3.^2.*s6.^2 + 2.*a2.^2.*b3.^2.*s5.^2 - 2.*a3.^2.*b1.^2.*s6.^2 - 2.*a3.^2.*b2.^2.*s5.^2 + 4.*a3.^2.*b2.^2.*s6.^2 + 2.*a1.^2.*q2.^2.*s4.^2 + 2.*a2.^2.*q1.^2.*s4.^2 + 2.*a1.^2.*q3.^2.*s6.^2 + 2.*a2.^2.*q3.^2.*s5.^2 + 2.*a3.^2.*q1.^2.*s6.^2 + 2.*a3.^2.*q2.^2.*s5.^2 - 4.*a3.*b3.*s9.^2 - 8.*a1.*a2.*s4.*s10 + 4.*a1.*a2.*s7.*s8 - 8.*a1.*a3.*s6.*s10 + 4.*a1.*a3.*s7.*s9 - 8.*a2.*a3.*s5.*s10 + 4.*a2.*a3.*s8.*s9 + 16.*a3.*b3.*s3.*s10 + 8.*a1.*b3.*s6.*s10 - 4.*a1.*b3.*s7.*s9 + 8.*a2.*b3.*s5.*s10 - 4.*a2.*b3.*s8.*s9 + 24.*b1.*b2.*s4.*s10 - 12.*b1.*b2.*s7.*s8 + 16.*a1.*q1.*s1.*s10 + 16.*a2.*q2.*s2.*s10 + 8.*a1.*q2.*s4.*s10 + 8.*a2.*q1.*s4.*s10 - 4.*a1.*q2.*s7.*s8 - 4.*a2.*q1.*s7.*s8 + 16.*a3.*q3.*s3.*s10 + 8.*a1.*q3.*s6.*s10 - 4.*a1.*q3.*s7.*s9 + 8.*a2.*q3.*s5.*s10 + 8.*a3.*q1.*s6.*s10 - 4.*a3.*q1.*s7.*s9 + 8.*a3.*q2.*s5.*s10 - 4.*a2.*q3.*s8.*s9 - 4.*a3.*q2.*s8.*s9 - 16.*b3.*q3.*s3.*s10 - 8.*b3.*q1.*s6.*s10 + 4.*b3.*q1.*s7.*s9 - 8.*b3.*q2.*s5.*s10 + 4.*b3.*q2.*s8.*s9 - 8.*q1.*q2.*s4.*s10 + 4.*q1.*q2.*s7.*s8 - 8.*q1.*q3.*s6.*s10 + 4.*q1.*q3.*s7.*s9 - 8.*q2.*q3.*s5.*s10 + 4.*q2.*q3.*s8.*s9 - 16.*a1.*b1.^2.*s2.*s7 + 8.*a1.*b2.^2.*s2.*s7 + 8.*a2.*b1.^2.*s1.*s8 - 16.*a2.*b2.^2.*s1.*s8 + 8.*a1.*b1.^2.*s4.*s8 - 8.*a1.*b3.^2.*s3.*s7 - 4.*a2.*b1.^2.*s4.*s7 + 8.*a3.*b1.^2.*s1.*s9 - 8.*a1.^2.*b3.*s1.*s9 - 4.*a1.*b2.^2.*s4.*s8 + 8.*a2.*b2.^2.*s4.*s7 - 16.*a3.*b1.^2.*s2.*s9 - 16.*a3.*b2.^2.*s1.*s9 - 8.*a2.*b3.^2.*s3.*s8 + 8.*a3.*b2.^2.*s2.*s9 - 8.*a2.^2.*b3.*s2.*s9 + 8.*a3.*b1.^2.*s5.*s8 - 4.*a3.*b1.^2.*s6.*s7 + 4.*a1.^2.*b3.*s6.*s7 - 4.*a3.*b2.^2.*s5.*s8 + 8.*a3.*b2.^2.*s6.*s7 + 4.*a2.^2.*b3.*s5.*s8 + 4.*a1.*b3.^2.*s6.*s9 + 4.*a2.*b3.^2.*s5.*s9 - 8.*a1.*q2.^2.*s2.*s7 - 8.*a2.*q1.^2.*s1.*s8 - 8.*a1.^2.*q2.*s1.*s8 - 8.*a2.^2.*q1.*s2.*s7 - 8.*a1.*q3.^2.*s3.*s7 + 4.*a2.*q1.^2.*s4.*s7 - 8.*a3.*q1.^2.*s1.*s9 + 4.*a1.^2.*q2.*s4.*s7 - 8.*a1.^2.*q3.*s1.*s9 - 8.*a3.^2.*q1.*s3.*s7 + 4.*a1.*q2.^2.*s4.*s8 + 4.*a2.^2.*q1.*s4.*s8 - 8.*a2.*q3.^2.*s3.*s8 - 8.*a3.*q2.^2.*s2.*s9 - 8.*a2.^2.*q3.*s2.*s9 - 8.*a3.^2.*q2.*s3.*s8 + 4.*a3.*q1.^2.*s6.*s7 + 4.*a1.^2.*q3.*s6.*s7 + 4.*a3.*q2.^2.*s5.*s8 + 4.*a2.^2.*q3.*s5.*s8 + 4.*a1.*q3.^2.*s6.*s9 + 4.*a2.*q3.^2.*s5.*s9 + 4.*a3.^2.*q1.*s6.*s9 + 4.*a3.^2.*q2.*s5.*s9 + 4.*a1.^2.*b3.*q3.*s6.^2 + 4.*a2.^2.*b3.*q3.*s5.^2 - 16.*a1.^2.*b1.^2.*s1.*s2 + 8.*a1.^2.*b2.^2.*s1.*s2 + 8.*a2.^2.*b1.^2.*s1.*s2 - 16.*a2.^2.*b2.^2.*s1.*s2 - 8.*a1.^2.*b3.^2.*s1.*s3 + 8.*a3.^2.*b1.^2.*s1.*s3 - 16.*a3.^2.*b1.^2.*s2.*s3 - 16.*a3.^2.*b2.^2.*s1.*s3 - 8.*a2.^2.*b3.^2.*s2.*s3 + 8.*a3.^2.*b2.^2.*s2.*s3 - 8.*a1.^2.*q2.^2.*s1.*s2 - 8.*a2.^2.*q1.^2.*s1.*s2 - 8.*a1.^2.*q3.^2.*s1.*s3 - 8.*a3.^2.*q1.^2.*s1.*s3 - 8.*a2.^2.*q3.^2.*s2.*s3 - 8.*a3.^2.*q2.^2.*s2.*s3 + 8.*a1.*a3.*b3.*s3.*s7 + 4.*a1.*a2.*b3.*s5.*s7 - 8.*a1.*a2.*b3.*s4.*s9 + 8.*a2.*a3.*b3.*s3.*s8 + 4.*a1.*a2.*b3.*s6.*s8 - 4.*a1.*a3.*b3.*s6.*s9 - 4.*a2.*a3.*b3.*s5.*s9 - 24.*a1.*b1.*b2.*s1.*s8 - 24.*a2.*b1.*b2.*s2.*s7 + 12.*a1.*b1.*b2.*s4.*s7 + 12.*a2.*b1.*b2.*s4.*s8 - 12.*a3.*b1.*b2.*s5.*s7 + 24.*a3.*b1.*b2.*s4.*s9 - 12.*a3.*b1.*b2.*s6.*s8 + 8.*a1.*a2.*q1.*s1.*s8 + 8.*a1.*a2.*q2.*s2.*s7 - 4.*a1.*a2.*q1.*s4.*s7 + 8.*a1.*a3.*q1.*s1.*s9 - 4.*a1.*a2.*q2.*s4.*s8 + 8.*a1.*a3.*q3.*s3.*s7 + 4.*a1.*a2.*q3.*s5.*s7 - 4.*a1.*a3.*q1.*s6.*s7 + 4.*a1.*a3.*q2.*s5.*s7 - 8.*a2.*a3.*q1.*s5.*s7 + 8.*a2.*a3.*q2.*s2.*s9 - 8.*a1.*a2.*q3.*s4.*s9 + 4.*a1.*a3.*q2.*s4.*s9 + 4.*a2.*a3.*q1.*s4.*s9 + 8.*a2.*a3.*q3.*s3.*s8 + 4.*a1.*a2.*q3.*s6.*s8 - 8.*a1.*a3.*q2.*s6.*s8 + 4.*a2.*a3.*q1.*s6.*s8 - 4.*a2.*a3.*q2.*s5.*s8 - 4.*a1.*a3.*q3.*s6.*s9 - 4.*a2.*a3.*q3.*s5.*s9 + 8.*a1.*b3.*q1.*s1.*s9 - 16.*a1.*b3.*q3.*s3.*s7 + 8.*a3.*b3.*q1.*s3.*s7 - 4.*a1.*b3.*q1.*s6.*s7 - 8.*a1.*b3.*q2.*s5.*s7 + 4.*a2.*b3.*q1.*s5.*s7 + 8.*a2.*b3.*q2.*s2.*s9 + 4.*a1.*b3.*q2.*s4.*s9 + 4.*a2.*b3.*q1.*s4.*s9 - 16.*a2.*b3.*q3.*s3.*s8 + 8.*a3.*b3.*q2.*s3.*s8 + 4.*a1.*b3.*q2.*s6.*s8 - 8.*a2.*b3.*q1.*s6.*s8 - 4.*a2.*b3.*q2.*s5.*s8 + 8.*a1.*b3.*q3.*s6.*s9 + 8.*a2.*b3.*q3.*s5.*s9 - 4.*a3.*b3.*q1.*s6.*s9 - 4.*a3.*b3.*q2.*s5.*s9 + 8.*a1.*q1.*q2.*s1.*s8 + 8.*a2.*q1.*q2.*s2.*s7 - 4.*a1.*q1.*q2.*s4.*s7 + 8.*a1.*q1.*q3.*s1.*s9 - 4.*a2.*q1.*q2.*s4.*s8 + 8.*a3.*q1.*q3.*s3.*s7 - 4.*a1.*q1.*q3.*s6.*s7 - 8.*a1.*q2.*q3.*s5.*s7 + 4.*a2.*q1.*q3.*s5.*s7 + 8.*a2.*q2.*q3.*s2.*s9 + 4.*a3.*q1.*q2.*s5.*s7 + 4.*a1.*q2.*q3.*s4.*s9 + 4.*a2.*q1.*q3.*s4.*s9 - 8.*a3.*q1.*q2.*s4.*s9 + 8.*a3.*q2.*q3.*s3.*s8 + 4.*a1.*q2.*q3.*s6.*s8 - 8.*a2.*q1.*q3.*s6.*s8 - 4.*a2.*q2.*q3.*s5.*s8 + 4.*a3.*q1.*q2.*s6.*s8 - 4.*a3.*q1.*q3.*s6.*s9 - 4.*a3.*q2.*q3.*s5.*s9 + 12.*a1.*a2.*b1.*b2.*s4.^2 - 4.*a1.*a3.*b3.*q1.*s6.^2 - 4.*a2.*a3.*b3.*q2.*s5.^2 + 8.*a2.*a3.*b1.^2.*s1.*s5 - 8.*a1.*a2.*b3.^2.*s3.*s4 - 16.*a1.*a3.*b1.^2.*s2.*s6 - 16.*a2.*a3.*b2.^2.*s1.*s5 + 8.*a1.*a3.*b1.^2.*s4.*s5 + 8.*a1.*a3.*b2.^2.*s2.*s6 - 4.*a1.*a3.*b2.^2.*s4.*s5 - 4.*a2.*a3.*b1.^2.*s4.*s6 + 4.*a1.*a2.*b3.^2.*s5.*s6 + 8.*a2.*a3.*b2.^2.*s4.*s6 + 24.*a3.^2.*b1.*b2.*s3.*s4 - 12.*a3.^2.*b1.*b2.*s5.*s6 - 4.*a1.*a2.*q1.*q2.*s4.^2 - 4.*a1.*a3.*q1.*q3.*s6.^2 - 4.*a2.*a3.*q2.*q3.*s5.^2 - 8.*a2.*a3.*q1.^2.*s1.*s5 - 8.*a1.*a2.*q3.^2.*s3.*s4 - 8.*a1.*a3.*q2.^2.*s2.*s6 + 4.*a1.*a3.*q2.^2.*s4.*s5 + 4.*a2.*a3.*q1.^2.*s4.*s6 + 4.*a1.*a2.*q3.^2.*s5.*s6 - 16.*a1.^2.*b3.*q3.*s1.*s3 - 8.*a1.^2.*b3.*q2.*s1.*s5 - 16.*a2.^2.*b3.*q3.*s2.*s3 - 8.*a2.^2.*b3.*q1.*s2.*s6 + 4.*a2.^2.*b3.*q1.*s4.*s5 + 4.*a1.^2.*b3.*q2.*s4.*s6 - 8.*a1.^2.*q2.*q3.*s1.*s5 - 8.*a3.^2.*q1.*q2.*s3.*s4 - 8.*a2.^2.*q1.*q3.*s2.*s6 + 4.*a2.^2.*q1.*q3.*s4.*s5 + 4.*a1.^2.*q2.*q3.*s4.*s6 + 4.*a3.^2.*q1.*q2.*s5.*s6 - 48.*a1.*a2.*b1.*b2.*s1.*s2 - 24.*a1.*a3.*b1.*b2.*s1.*s5 - 24.*a2.*a3.*b1.*b2.*s2.*s6 + 12.*a1.*a3.*b1.*b2.*s4.*s6 + 12.*a2.*a3.*b1.*b2.*s4.*s5 + 16.*a1.*a3.*b3.*q1.*s1.*s3 + 8.*a1.*a2.*b3.*q1.*s1.*s5 + 16.*a2.*a3.*b3.*q2.*s2.*s3 + 8.*a1.*a2.*b3.*q2.*s2.*s6 - 16.*a1.*a2.*b3.*q3.*s3.*s4 + 8.*a1.*a3.*b3.*q2.*s3.*s4 + 8.*a2.*a3.*b3.*q1.*s3.*s4 - 4.*a1.*a2.*b3.*q1.*s4.*s6 - 4.*a1.*a2.*b3.*q2.*s4.*s5 + 8.*a1.*a2.*b3.*q3.*s5.*s6 - 4.*a1.*a3.*b3.*q2.*s5.*s6 - 4.*a2.*a3.*b3.*q1.*s5.*s6 + 16.*a1.*a2.*q1.*q2.*s1.*s2 + 16.*a1.*a3.*q1.*q3.*s1.*s3 + 8.*a1.*a2.*q1.*q3.*s1.*s5 + 8.*a1.*a3.*q1.*q2.*s1.*s5 + 16.*a2.*a3.*q2.*q3.*s2.*s3 + 8.*a1.*a2.*q2.*q3.*s2.*s6 + 8.*a1.*a3.*q2.*q3.*s3.*s4 + 8.*a2.*a3.*q1.*q2.*s2.*s6 + 8.*a2.*a3.*q1.*q3.*s3.*s4 - 4.*a1.*a2.*q1.*q3.*s4.*s6 - 4.*a1.*a2.*q2.*q3.*s4.*s5 - 4.*a1.*a3.*q1.*q2.*s4.*s6 - 4.*a2.*a3.*q1.*q2.*s4.*s5 - 4.*a1.*a3.*q2.*q3.*s5.*s6 - 4.*a2.*a3.*q1.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(4.*b1.*q2.*s8.^2 - 4.*b2.*q1.*s7.^2 - 8.*b1.^2.*s4.*s10 + 4.*b1.^2.*s7.*s8 + 8.*b2.^2.*s4.*s10 - 4.*b2.^2.*s7.*s8 + 4.*a1.*b2.*s7.^2 - 4.*a2.*b1.*s8.^2 - 4.*b1.*b2.*s7.^2 + 4.*b1.*b2.*s8.^2 - 16.*a1.*b2.*s1.*s10 + 16.*a2.*b1.*s2.*s10 + 8.*a1.*b1.*s4.*s10 - 4.*a1.*b1.*s7.*s8 - 8.*a2.*b2.*s4.*s10 + 4.*a2.*b2.*s7.*s8 + 8.*a3.*b1.*s5.*s10 - 4.*a3.*b1.*s8.*s9 - 8.*a3.*b2.*s6.*s10 + 4.*a3.*b2.*s7.*s9 + 16.*b1.*b2.*s1.*s10 - 16.*b1.*b2.*s2.*s10 - 8.*b1.*b3.*s5.*s10 + 4.*b1.*b3.*s8.*s9 + 8.*b2.*b3.*s6.*s10 - 4.*b2.*b3.*s7.*s9 + 16.*b2.*q1.*s1.*s10 - 16.*b1.*q2.*s2.*s10 - 8.*b1.*q1.*s4.*s10 + 4.*b1.*q1.*s7.*s8 + 8.*b2.*q2.*s4.*s10 - 8.*b1.*q3.*s5.*s10 - 4.*b2.*q2.*s7.*s8 + 4.*b1.*q3.*s8.*s9 + 8.*b2.*q3.*s6.*s10 - 4.*b2.*q3.*s7.*s9 + 8.*a1.*b1.^2.*s1.*s8 - 8.*a1.^2.*b1.*s1.*s8 - 8.*a1.*b2.^2.*s1.*s8 + 8.*a2.*b1.^2.*s2.*s7 - 4.*a1.*b1.^2.*s4.*s7 - 8.*a2.*b2.^2.*s2.*s7 + 4.*a1.^2.*b1.*s4.*s7 + 8.*a2.^2.*b2.*s2.*s7 + 4.*a1.*b2.^2.*s4.*s7 - 4.*a2.*b1.^2.*s4.*s8 - 8.*a3.^2.*b1.*s3.*s8 + 8.*a3.^2.*b2.*s3.*s7 + 4.*a2.*b2.^2.*s4.*s8 + 4.*a3.*b1.^2.*s5.*s7 - 4.*a2.^2.*b2.*s4.*s8 - 8.*a3.*b1.^2.*s4.*s9 - 4.*a3.*b2.^2.*s5.*s7 + 4.*a3.*b1.^2.*s6.*s8 + 8.*a3.*b2.^2.*s4.*s9 + 4.*a3.^2.*b1.*s5.*s9 - 4.*a3.*b2.^2.*s6.*s8 - 4.*a3.^2.*b2.*s6.*s9 - 4.*a1.*a2.*b1.^2.*s4.^2 + 4.*a1.*a2.*b2.^2.*s4.^2 + 4.*a1.^2.*b1.*b2.*s4.^2 - 4.*a2.^2.*b1.*b2.*s4.^2 + 4.*a3.^2.*b1.*b2.*s5.^2 - 4.*a3.^2.*b1.*b2.*s6.^2 + 4.*a1.^2.*b1.*q2.*s4.^2 - 4.*a2.^2.*b2.*q1.*s4.^2 + 4.*a3.^2.*b1.*q2.*s5.^2 - 4.*a3.^2.*b2.*q1.*s6.^2 - 8.*a3.^2.*b1.^2.*s3.*s4 + 8.*a3.^2.*b2.^2.*s3.*s4 + 4.*a3.^2.*b1.^2.*s5.*s6 - 4.*a3.^2.*b2.^2.*s5.*s6 + 8.*a1.*a2.*b1.*s2.*s7 - 8.*a1.*a2.*b2.*s1.*s8 - 4.*a1.*a2.*b1.*s4.*s8 + 4.*a1.*a2.*b2.*s4.*s7 - 8.*a1.*a3.*b2.*s1.*s9 + 4.*a1.*a3.*b1.*s5.*s7 + 8.*a2.*a3.*b1.*s2.*s9 + 4.*a1.*a3.*b1.*s4.*s9 - 8.*a1.*a3.*b1.*s6.*s8 + 4.*a1.*a3.*b2.*s6.*s7 - 4.*a2.*a3.*b1.*s5.*s8 + 8.*a2.*a3.*b2.*s5.*s7 - 4.*a2.*a3.*b2.*s4.*s9 - 4.*a2.*a3.*b2.*s6.*s8 - 16.*a1.*b1.*b2.*s2.*s7 + 16.*a2.*b1.*b2.*s1.*s8 + 8.*a1.*b1.*b2.*s4.*s8 - 8.*a1.*b2.*b3.*s1.*s9 - 8.*a2.*b1.*b2.*s4.*s7 + 16.*a3.*b1.*b2.*s1.*s9 - 8.*a1.*b1.*b3.*s5.*s7 + 8.*a2.*b1.*b3.*s2.*s9 - 16.*a3.*b1.*b2.*s2.*s9 + 4.*a1.*b1.*b3.*s4.*s9 + 8.*a3.*b1.*b3.*s3.*s8 - 8.*a3.*b2.*b3.*s3.*s7 + 4.*a1.*b1.*b3.*s6.*s8 + 4.*a1.*b2.*b3.*s6.*s7 - 4.*a2.*b1.*b3.*s5.*s8 - 4.*a2.*b2.*b3.*s5.*s7 + 8.*a3.*b1.*b2.*s5.*s8 - 8.*a3.*b1.*b2.*s6.*s7 - 4.*a2.*b2.*b3.*s4.*s9 + 8.*a2.*b2.*b3.*s6.*s8 - 4.*a3.*b1.*b3.*s5.*s9 + 4.*a3.*b2.*b3.*s6.*s9 + 8.*a1.*b1.*q1.*s1.*s8 - 16.*a1.*b1.*q2.*s2.*s7 + 8.*a2.*b1.*q1.*s2.*s7 - 4.*a1.*b1.*q1.*s4.*s7 - 8.*a1.*b2.*q2.*s1.*s8 + 16.*a2.*b2.*q1.*s1.*s8 - 8.*a2.*b2.*q2.*s2.*s7 + 8.*a1.*b1.*q2.*s4.*s8 + 4.*a1.*b2.*q2.*s4.*s7 - 8.*a1.*b2.*q3.*s1.*s9 - 4.*a2.*b1.*q1.*s4.*s8 - 8.*a2.*b2.*q1.*s4.*s7 + 16.*a3.*b2.*q1.*s1.*s9 - 8.*a1.*b1.*q3.*s5.*s7 + 8.*a2.*b1.*q3.*s2.*s9 + 4.*a3.*b1.*q1.*s5.*s7 - 16.*a3.*b1.*q2.*s2.*s9 + 4.*a1.*b1.*q3.*s4.*s9 + 4.*a2.*b2.*q2.*s4.*s8 - 8.*a3.*b1.*q1.*s4.*s9 + 8.*a3.*b1.*q3.*s3.*s8 - 8.*a3.*b2.*q3.*s3.*s7 + 4.*a1.*b1.*q3.*s6.*s8 + 4.*a1.*b2.*q3.*s6.*s7 - 4.*a2.*b1.*q3.*s5.*s8 - 4.*a2.*b2.*q3.*s5.*s7 + 4.*a3.*b1.*q1.*s6.*s8 + 8.*a3.*b1.*q2.*s5.*s8 - 8.*a3.*b2.*q1.*s6.*s7 - 4.*a3.*b2.*q2.*s5.*s7 - 4.*a2.*b2.*q3.*s4.*s9 + 8.*a3.*b2.*q2.*s4.*s9 + 8.*a2.*b2.*q3.*s6.*s8 - 4.*a3.*b1.*q3.*s5.*s9 - 4.*a3.*b2.*q2.*s6.*s8 + 4.*a3.*b2.*q3.*s6.*s9 - 4.*a2.*a3.*b1.*b3.*s5.^2 + 4.*a1.*a3.*b2.*b3.*s6.^2 - 4.*a1.*a2.*b1.*q1.*s4.^2 + 4.*a1.*a2.*b2.*q2.*s4.^2 - 4.*a2.*a3.*b1.*q3.*s5.^2 + 4.*a1.*a3.*b2.*q3.*s6.^2 + 16.*a1.*a2.*b1.^2.*s1.*s2 - 16.*a1.*a2.*b2.^2.*s1.*s2 + 8.*a1.*a3.*b1.^2.*s1.*s5 - 8.*a1.*a3.*b2.^2.*s1.*s5 + 8.*a2.*a3.*b1.^2.*s2.*s6 - 4.*a1.*a3.*b1.^2.*s4.*s6 - 4.*a2.*a3.*b1.^2.*s4.*s5 - 8.*a2.*a3.*b2.^2.*s2.*s6 + 4.*a1.*a3.*b2.^2.*s4.*s6 + 4.*a2.*a3.*b2.^2.*s4.*s5 - 16.*a1.^2.*b1.*b2.*s1.*s2 + 16.*a2.^2.*b1.*b2.*s1.*s2 + 16.*a3.^2.*b1.*b2.*s1.*s3 - 8.*a1.^2.*b1.*b3.*s1.*s5 - 16.*a3.^2.*b1.*b2.*s2.*s3 + 4.*a1.^2.*b1.*b3.*s4.*s6 + 8.*a2.^2.*b2.*b3.*s2.*s6 - 4.*a2.^2.*b2.*b3.*s4.*s5 - 16.*a1.^2.*b1.*q2.*s1.*s2 + 16.*a2.^2.*b2.*q1.*s1.*s2 + 16.*a3.^2.*b2.*q1.*s1.*s3 - 8.*a1.^2.*b1.*q3.*s1.*s5 - 16.*a3.^2.*b1.*q2.*s2.*s3 - 8.*a3.^2.*b1.*q1.*s3.*s4 + 8.*a3.^2.*b2.*q2.*s3.*s4 + 4.*a1.^2.*b1.*q3.*s4.*s6 + 8.*a2.^2.*b2.*q3.*s2.*s6 - 4.*a2.^2.*b2.*q3.*s4.*s5 + 4.*a3.^2.*b1.*q1.*s5.*s6 - 4.*a3.^2.*b2.*q2.*s5.*s6 - 16.*a1.*a3.*b2.*b3.*s1.*s3 - 8.*a1.*a2.*b2.*b3.*s1.*s5 + 16.*a2.*a3.*b1.*b2.*s1.*s5 + 16.*a2.*a3.*b1.*b3.*s2.*s3 + 8.*a1.*a2.*b1.*b3.*s2.*s6 - 16.*a1.*a3.*b1.*b2.*s2.*s6 + 8.*a1.*a3.*b1.*b3.*s3.*s4 - 4.*a1.*a2.*b1.*b3.*s4.*s5 + 8.*a1.*a3.*b1.*b2.*s4.*s5 - 8.*a2.*a3.*b2.*b3.*s3.*s4 + 4.*a1.*a2.*b2.*b3.*s4.*s6 - 8.*a2.*a3.*b1.*b2.*s4.*s6 - 4.*a1.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b2.*b3.*s5.*s6 + 16.*a1.*a2.*b1.*q1.*s1.*s2 - 16.*a1.*a2.*b2.*q2.*s1.*s2 + 8.*a1.*a3.*b1.*q1.*s1.*s5 - 16.*a1.*a3.*b2.*q3.*s1.*s3 - 8.*a1.*a2.*b2.*q3.*s1.*s5 - 8.*a1.*a3.*b2.*q2.*s1.*s5 + 16.*a2.*a3.*b1.*q3.*s2.*s3 + 16.*a2.*a3.*b2.*q1.*s1.*s5 + 8.*a1.*a2.*b1.*q3.*s2.*s6 - 16.*a1.*a3.*b1.*q2.*s2.*s6 + 8.*a1.*a3.*b1.*q3.*s3.*s4 + 8.*a2.*a3.*b1.*q1.*s2.*s6 - 4.*a1.*a2.*b1.*q3.*s4.*s5 - 4.*a1.*a3.*b1.*q1.*s4.*s6 + 8.*a1.*a3.*b1.*q2.*s4.*s5 - 4.*a2.*a3.*b1.*q1.*s4.*s5 - 8.*a2.*a3.*b2.*q2.*s2.*s6 - 8.*a2.*a3.*b2.*q3.*s3.*s4 + 4.*a1.*a2.*b2.*q3.*s4.*s6 + 4.*a1.*a3.*b2.*q2.*s4.*s6 - 8.*a2.*a3.*b2.*q1.*s4.*s6 + 4.*a2.*a3.*b2.*q2.*s4.*s5 - 4.*a1.*a3.*b1.*q3.*s5.*s6 + 4.*a2.*a3.*b2.*q3.*s5.*s6,[size(a1,2)*size(s1,1),1])...
                    reshape(a1.^2.*b2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*b2.^2 + 2.*a1.^2.*b2.*b3.*s4.*s6 - 4.*s1.*a1.^2.*b2.*b3.*s5 + 2.*a1.^2.*b2.*q2.*s4.^2 - 8.*s1.*s2.*a1.^2.*b2.*q2 + 2.*a1.^2.*b2.*q3.*s4.*s6 - 4.*s1.*a1.^2.*b2.*q3.*s5 + 2.*a1.^2.*b2.*s4.*s7 - 4.*s1.*a1.^2.*b2.*s8 + a1.^2.*b3.^2.*s6.^2 - 4.*s1.*s3.*a1.^2.*b3.^2 + 2.*a1.^2.*b3.*q2.*s4.*s6 - 4.*s1.*a1.^2.*b3.*q2.*s5 + 2.*a1.^2.*b3.*q3.*s6.^2 - 8.*s1.*s3.*a1.^2.*b3.*q3 + 2.*a1.^2.*b3.*s6.*s7 - 4.*s1.*a1.^2.*b3.*s9 + a1.^2.*q2.^2.*s4.^2 - 4.*s1.*s2.*a1.^2.*q2.^2 + 2.*a1.^2.*q2.*q3.*s4.*s6 - 4.*s1.*a1.^2.*q2.*q3.*s5 + 2.*a1.^2.*q2.*s4.*s7 - 4.*s1.*a1.^2.*q2.*s8 + a1.^2.*q3.^2.*s6.^2 - 4.*s1.*s3.*a1.^2.*q3.^2 + 2.*a1.^2.*q3.*s6.*s7 - 4.*s1.*a1.^2.*q3.*s9 + a1.^2.*s7.^2 - 4.*s1.*s10.*a1.^2 - 2.*a1.*a2.*b1.*b2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*b2 - 2.*a1.*a2.*b1.*b3.*s4.*s6 + 4.*s1.*a1.*a2.*b1.*b3.*s5 - 2.*a1.*a2.*b1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b1.*q2 - 2.*a1.*a2.*b1.*q3.*s4.*s6 + 4.*s1.*a1.*a2.*b1.*q3.*s5 - 2.*a1.*a2.*b1.*s4.*s7 + 4.*s1.*a1.*a2.*b1.*s8 - 2.*a1.*a2.*b2.*b3.*s4.*s5 + 4.*s2.*a1.*a2.*b2.*b3.*s6 - 2.*a1.*a2.*b2.*q1.*s4.^2 + 8.*s1.*s2.*a1.*a2.*b2.*q1 - 2.*a1.*a2.*b2.*q3.*s4.*s5 + 4.*s2.*a1.*a2.*b2.*q3.*s6 - 2.*a1.*a2.*b2.*s4.*s8 + 4.*s2.*a1.*a2.*b2.*s7 - 4.*s3.*a1.*a2.*b3.^2.*s4 + 2.*a1.*a2.*b3.^2.*s5.*s6 - 2.*a1.*a2.*b3.*q1.*s4.*s6 + 4.*s1.*a1.*a2.*b3.*q1.*s5 - 2.*a1.*a2.*b3.*q2.*s4.*s5 + 4.*s2.*a1.*a2.*b3.*q2.*s6 - 8.*s3.*a1.*a2.*b3.*q3.*s4 + 4.*a1.*a2.*b3.*q3.*s5.*s6 - 4.*a1.*a2.*b3.*s4.*s9 + 2.*a1.*a2.*b3.*s5.*s7 + 2.*a1.*a2.*b3.*s6.*s8 - 2.*a1.*a2.*q1.*q2.*s4.^2 + 8.*s1.*s2.*a1.*a2.*q1.*q2 - 2.*a1.*a2.*q1.*q3.*s4.*s6 + 4.*s1.*a1.*a2.*q1.*q3.*s5 - 2.*a1.*a2.*q1.*s4.*s7 + 4.*s1.*a1.*a2.*q1.*s8 - 2.*a1.*a2.*q2.*q3.*s4.*s5 + 4.*s2.*a1.*a2.*q2.*q3.*s6 - 2.*a1.*a2.*q2.*s4.*s8 + 4.*s2.*a1.*a2.*q2.*s7 - 4.*s3.*a1.*a2.*q3.^2.*s4 + 2.*a1.*a2.*q3.^2.*s5.*s6 - 4.*a1.*a2.*q3.*s4.*s9 + 2.*a1.*a2.*q3.*s5.*s7 + 2.*a1.*a2.*q3.*s6.*s8 - 4.*s10.*a1.*a2.*s4 + 2.*a1.*a2.*s7.*s8 - 2.*a1.*a3.*b1.*b2.*s4.*s6 + 4.*s1.*a1.*a3.*b1.*b2.*s5 - 2.*a1.*a3.*b1.*b3.*s6.^2 + 8.*s1.*s3.*a1.*a3.*b1.*b3 - 2.*a1.*a3.*b1.*q2.*s4.*s6 + 4.*s1.*a1.*a3.*b1.*q2.*s5 - 2.*a1.*a3.*b1.*q3.*s6.^2 + 8.*s1.*s3.*a1.*a3.*b1.*q3 - 2.*a1.*a3.*b1.*s6.*s7 + 4.*s1.*a1.*a3.*b1.*s9 + 2.*a1.*a3.*b2.^2.*s4.*s5 - 4.*s2.*a1.*a3.*b2.^2.*s6 + 4.*s3.*a1.*a3.*b2.*b3.*s4 - 2.*a1.*a3.*b2.*b3.*s5.*s6 - 2.*a1.*a3.*b2.*q1.*s4.*s6 + 4.*s1.*a1.*a3.*b2.*q1.*s5 + 4.*a1.*a3.*b2.*q2.*s4.*s5 - 8.*s2.*a1.*a3.*b2.*q2.*s6 + 4.*s3.*a1.*a3.*b2.*q3.*s4 - 2.*a1.*a3.*b2.*q3.*s5.*s6 + 2.*a1.*a3.*b2.*s4.*s9 + 2.*a1.*a3.*b2.*s5.*s7 - 4.*a1.*a3.*b2.*s6.*s8 - 2.*a1.*a3.*b3.*q1.*s6.^2 + 8.*s1.*s3.*a1.*a3.*b3.*q1 + 4.*s3.*a1.*a3.*b3.*q2.*s4 - 2.*a1.*a3.*b3.*q2.*s5.*s6 - 2.*a1.*a3.*b3.*s6.*s9 + 4.*s3.*a1.*a3.*b3.*s7 - 2.*a1.*a3.*q1.*q2.*s4.*s6 + 4.*s1.*a1.*a3.*q1.*q2.*s5 - 2.*a1.*a3.*q1.*q3.*s6.^2 + 8.*s1.*s3.*a1.*a3.*q1.*q3 - 2.*a1.*a3.*q1.*s6.*s7 + 4.*s1.*a1.*a3.*q1.*s9 + 2.*a1.*a3.*q2.^2.*s4.*s5 - 4.*s2.*a1.*a3.*q2.^2.*s6 + 4.*s3.*a1.*a3.*q2.*q3.*s4 - 2.*a1.*a3.*q2.*q3.*s5.*s6 + 2.*a1.*a3.*q2.*s4.*s9 + 2.*a1.*a3.*q2.*s5.*s7 - 4.*a1.*a3.*q2.*s6.*s8 - 2.*a1.*a3.*q3.*s6.*s9 + 4.*s3.*a1.*a3.*q3.*s7 - 4.*s10.*a1.*a3.*s6 + 2.*a1.*a3.*s7.*s9 - 2.*a1.*b1.*b2.*s4.*s7 + 4.*s1.*a1.*b1.*b2.*s8 - 2.*a1.*b1.*b3.*s6.*s7 + 4.*s1.*a1.*b1.*b3.*s9 - 2.*a1.*b1.*q2.*s4.*s7 + 4.*s1.*a1.*b1.*q2.*s8 - 2.*a1.*b1.*q3.*s6.*s7 + 4.*s1.*a1.*b1.*q3.*s9 - 2.*a1.*b1.*s7.^2 + 8.*s1.*s10.*a1.*b1 + 2.*a1.*b2.^2.*s4.*s8 - 4.*s2.*a1.*b2.^2.*s7 + 2.*a1.*b2.*b3.*s4.*s9 - 4.*a1.*b2.*b3.*s5.*s7 + 2.*a1.*b2.*b3.*s6.*s8 - 2.*a1.*b2.*q1.*s4.*s7 + 4.*s1.*a1.*b2.*q1.*s8 + 4.*a1.*b2.*q2.*s4.*s8 - 8.*s2.*a1.*b2.*q2.*s7 + 2.*a1.*b2.*q3.*s4.*s9 - 4.*a1.*b2.*q3.*s5.*s7 + 2.*a1.*b2.*q3.*s6.*s8 + 4.*s10.*a1.*b2.*s4 - 2.*a1.*b2.*s7.*s8 + 2.*a1.*b3.^2.*s6.*s9 - 4.*s3.*a1.*b3.^2.*s7 - 2.*a1.*b3.*q1.*s6.*s7 + 4.*s1.*a1.*b3.*q1.*s9 + 2.*a1.*b3.*q2.*s4.*s9 - 4.*a1.*b3.*q2.*s5.*s7 + 2.*a1.*b3.*q2.*s6.*s8 + 4.*a1.*b3.*q3.*s6.*s9 - 8.*s3.*a1.*b3.*q3.*s7 + 4.*s10.*a1.*b3.*s6 - 2.*a1.*b3.*s7.*s9 - 2.*a1.*q1.*q2.*s4.*s7 + 4.*s1.*a1.*q1.*q2.*s8 - 2.*a1.*q1.*q3.*s6.*s7 + 4.*s1.*a1.*q1.*q3.*s9 - 2.*a1.*q1.*s7.^2 + 8.*s1.*s10.*a1.*q1 + 2.*a1.*q2.^2.*s4.*s8 - 4.*s2.*a1.*q2.^2.*s7 + 2.*a1.*q2.*q3.*s4.*s9 - 4.*a1.*q2.*q3.*s5.*s7 + 2.*a1.*q2.*q3.*s6.*s8 + 4.*s10.*a1.*q2.*s4 - 2.*a1.*q2.*s7.*s8 + 2.*a1.*q3.^2.*s6.*s9 - 4.*s3.*a1.*q3.^2.*s7 + 4.*s10.*a1.*q3.*s6 - 2.*a1.*q3.*s7.*s9 + a2.^2.*b1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*b1.^2 + 2.*a2.^2.*b1.*b3.*s4.*s5 - 4.*s2.*a2.^2.*b1.*b3.*s6 + 2.*a2.^2.*b1.*q1.*s4.^2 - 8.*s1.*s2.*a2.^2.*b1.*q1 + 2.*a2.^2.*b1.*q3.*s4.*s5 - 4.*s2.*a2.^2.*b1.*q3.*s6 + 2.*a2.^2.*b1.*s4.*s8 - 4.*s2.*a2.^2.*b1.*s7 + a2.^2.*b3.^2.*s5.^2 - 4.*s2.*s3.*a2.^2.*b3.^2 + 2.*a2.^2.*b3.*q1.*s4.*s5 - 4.*s2.*a2.^2.*b3.*q1.*s6 + 2.*a2.^2.*b3.*q3.*s5.^2 - 8.*s2.*s3.*a2.^2.*b3.*q3 + 2.*a2.^2.*b3.*s5.*s8 - 4.*s2.*a2.^2.*b3.*s9 + a2.^2.*q1.^2.*s4.^2 - 4.*s1.*s2.*a2.^2.*q1.^2 + 2.*a2.^2.*q1.*q3.*s4.*s5 - 4.*s2.*a2.^2.*q1.*q3.*s6 + 2.*a2.^2.*q1.*s4.*s8 - 4.*s2.*a2.^2.*q1.*s7 + a2.^2.*q3.^2.*s5.^2 - 4.*s2.*s3.*a2.^2.*q3.^2 + 2.*a2.^2.*q3.*s5.*s8 - 4.*s2.*a2.^2.*q3.*s9 + a2.^2.*s8.^2 - 4.*s2.*s10.*a2.^2 + 2.*a2.*a3.*b1.^2.*s4.*s6 - 4.*s1.*a2.*a3.*b1.^2.*s5 - 2.*a2.*a3.*b1.*b2.*s4.*s5 + 4.*s2.*a2.*a3.*b1.*b2.*s6 + 4.*s3.*a2.*a3.*b1.*b3.*s4 - 2.*a2.*a3.*b1.*b3.*s5.*s6 + 4.*a2.*a3.*b1.*q1.*s4.*s6 - 8.*s1.*a2.*a3.*b1.*q1.*s5 - 2.*a2.*a3.*b1.*q2.*s4.*s5 + 4.*s2.*a2.*a3.*b1.*q2.*s6 + 4.*s3.*a2.*a3.*b1.*q3.*s4 - 2.*a2.*a3.*b1.*q3.*s5.*s6 + 2.*a2.*a3.*b1.*s4.*s9 - 4.*a2.*a3.*b1.*s5.*s7 + 2.*a2.*a3.*b1.*s6.*s8 - 2.*a2.*a3.*b2.*b3.*s5.^2 + 8.*s2.*s3.*a2.*a3.*b2.*b3 - 2.*a2.*a3.*b2.*q1.*s4.*s5 + 4.*s2.*a2.*a3.*b2.*q1.*s6 - 2.*a2.*a3.*b2.*q3.*s5.^2 + 8.*s2.*s3.*a2.*a3.*b2.*q3 - 2.*a2.*a3.*b2.*s5.*s8 + 4.*s2.*a2.*a3.*b2.*s9 + 4.*s3.*a2.*a3.*b3.*q1.*s4 - 2.*a2.*a3.*b3.*q1.*s5.*s6 - 2.*a2.*a3.*b3.*q2.*s5.^2 + 8.*s2.*s3.*a2.*a3.*b3.*q2 - 2.*a2.*a3.*b3.*s5.*s9 + 4.*s3.*a2.*a3.*b3.*s8 + 2.*a2.*a3.*q1.^2.*s4.*s6 - 4.*s1.*a2.*a3.*q1.^2.*s5 - 2.*a2.*a3.*q1.*q2.*s4.*s5 + 4.*s2.*a2.*a3.*q1.*q2.*s6 + 4.*s3.*a2.*a3.*q1.*q3.*s4 - 2.*a2.*a3.*q1.*q3.*s5.*s6 + 2.*a2.*a3.*q1.*s4.*s9 - 4.*a2.*a3.*q1.*s5.*s7 + 2.*a2.*a3.*q1.*s6.*s8 - 2.*a2.*a3.*q2.*q3.*s5.^2 + 8.*s2.*s3.*a2.*a3.*q2.*q3 - 2.*a2.*a3.*q2.*s5.*s8 + 4.*s2.*a2.*a3.*q2.*s9 - 2.*a2.*a3.*q3.*s5.*s9 + 4.*s3.*a2.*a3.*q3.*s8 - 4.*s10.*a2.*a3.*s5 + 2.*a2.*a3.*s8.*s9 + 2.*a2.*b1.^2.*s4.*s7 - 4.*s1.*a2.*b1.^2.*s8 - 2.*a2.*b1.*b2.*s4.*s8 + 4.*s2.*a2.*b1.*b2.*s7 + 2.*a2.*b1.*b3.*s4.*s9 + 2.*a2.*b1.*b3.*s5.*s7 - 4.*a2.*b1.*b3.*s6.*s8 + 4.*a2.*b1.*q1.*s4.*s7 - 8.*s1.*a2.*b1.*q1.*s8 - 2.*a2.*b1.*q2.*s4.*s8 + 4.*s2.*a2.*b1.*q2.*s7 + 2.*a2.*b1.*q3.*s4.*s9 + 2.*a2.*b1.*q3.*s5.*s7 - 4.*a2.*b1.*q3.*s6.*s8 + 4.*s10.*a2.*b1.*s4 - 2.*a2.*b1.*s7.*s8 - 2.*a2.*b2.*b3.*s5.*s8 + 4.*s2.*a2.*b2.*b3.*s9 - 2.*a2.*b2.*q1.*s4.*s8 + 4.*s2.*a2.*b2.*q1.*s7 - 2.*a2.*b2.*q3.*s5.*s8 + 4.*s2.*a2.*b2.*q3.*s9 - 2.*a2.*b2.*s8.^2 + 8.*s2.*s10.*a2.*b2 + 2.*a2.*b3.^2.*s5.*s9 - 4.*s3.*a2.*b3.^2.*s8 + 2.*a2.*b3.*q1.*s4.*s9 + 2.*a2.*b3.*q1.*s5.*s7 - 4.*a2.*b3.*q1.*s6.*s8 - 2.*a2.*b3.*q2.*s5.*s8 + 4.*s2.*a2.*b3.*q2.*s9 + 4.*a2.*b3.*q3.*s5.*s9 - 8.*s3.*a2.*b3.*q3.*s8 + 4.*s10.*a2.*b3.*s5 - 2.*a2.*b3.*s8.*s9 + 2.*a2.*q1.^2.*s4.*s7 - 4.*s1.*a2.*q1.^2.*s8 - 2.*a2.*q1.*q2.*s4.*s8 + 4.*s2.*a2.*q1.*q2.*s7 + 2.*a2.*q1.*q3.*s4.*s9 + 2.*a2.*q1.*q3.*s5.*s7 - 4.*a2.*q1.*q3.*s6.*s8 + 4.*s10.*a2.*q1.*s4 - 2.*a2.*q1.*s7.*s8 - 2.*a2.*q2.*q3.*s5.*s8 + 4.*s2.*a2.*q2.*q3.*s9 - 2.*a2.*q2.*s8.^2 + 8.*s2.*s10.*a2.*q2 + 2.*a2.*q3.^2.*s5.*s9 - 4.*s3.*a2.*q3.^2.*s8 + 4.*s10.*a2.*q3.*s5 - 2.*a2.*q3.*s8.*s9 + a3.^2.*b1.^2.*s6.^2 - 4.*s1.*s3.*a3.^2.*b1.^2 - 4.*s3.*a3.^2.*b1.*b2.*s4 + 2.*a3.^2.*b1.*b2.*s5.*s6 + 2.*a3.^2.*b1.*q1.*s6.^2 - 8.*s1.*s3.*a3.^2.*b1.*q1 - 4.*s3.*a3.^2.*b1.*q2.*s4 + 2.*a3.^2.*b1.*q2.*s5.*s6 + 2.*a3.^2.*b1.*s6.*s9 - 4.*s3.*a3.^2.*b1.*s7 + a3.^2.*b2.^2.*s5.^2 - 4.*s2.*s3.*a3.^2.*b2.^2 - 4.*s3.*a3.^2.*b2.*q1.*s4 + 2.*a3.^2.*b2.*q1.*s5.*s6 + 2.*a3.^2.*b2.*q2.*s5.^2 - 8.*s2.*s3.*a3.^2.*b2.*q2 + 2.*a3.^2.*b2.*s5.*s9 - 4.*s3.*a3.^2.*b2.*s8 + a3.^2.*q1.^2.*s6.^2 - 4.*s1.*s3.*a3.^2.*q1.^2 - 4.*s3.*a3.^2.*q1.*q2.*s4 + 2.*a3.^2.*q1.*q2.*s5.*s6 + 2.*a3.^2.*q1.*s6.*s9 - 4.*s3.*a3.^2.*q1.*s7 + a3.^2.*q2.^2.*s5.^2 - 4.*s2.*s3.*a3.^2.*q2.^2 + 2.*a3.^2.*q2.*s5.*s9 - 4.*s3.*a3.^2.*q2.*s8 + a3.^2.*s9.^2 - 4.*s3.*s10.*a3.^2 + 2.*a3.*b1.^2.*s6.*s7 - 4.*s1.*a3.*b1.^2.*s9 - 4.*a3.*b1.*b2.*s4.*s9 + 2.*a3.*b1.*b2.*s5.*s7 + 2.*a3.*b1.*b2.*s6.*s8 - 2.*a3.*b1.*b3.*s6.*s9 + 4.*s3.*a3.*b1.*b3.*s7 + 4.*a3.*b1.*q1.*s6.*s7 - 8.*s1.*a3.*b1.*q1.*s9 - 4.*a3.*b1.*q2.*s4.*s9 + 2.*a3.*b1.*q2.*s5.*s7 + 2.*a3.*b1.*q2.*s6.*s8 - 2.*a3.*b1.*q3.*s6.*s9 + 4.*s3.*a3.*b1.*q3.*s7 + 4.*s10.*a3.*b1.*s6 - 2.*a3.*b1.*s7.*s9 + 2.*a3.*b2.^2.*s5.*s8 - 4.*s2.*a3.*b2.^2.*s9 - 2.*a3.*b2.*b3.*s5.*s9 + 4.*s3.*a3.*b2.*b3.*s8 - 4.*a3.*b2.*q1.*s4.*s9 + 2.*a3.*b2.*q1.*s5.*s7 + 2.*a3.*b2.*q1.*s6.*s8 + 4.*a3.*b2.*q2.*s5.*s8 - 8.*s2.*a3.*b2.*q2.*s9 - 2.*a3.*b2.*q3.*s5.*s9 + 4.*s3.*a3.*b2.*q3.*s8 + 4.*s10.*a3.*b2.*s5 - 2.*a3.*b2.*s8.*s9 - 2.*a3.*b3.*q1.*s6.*s9 + 4.*s3.*a3.*b3.*q1.*s7 - 2.*a3.*b3.*q2.*s5.*s9 + 4.*s3.*a3.*b3.*q2.*s8 - 2.*a3.*b3.*s9.^2 + 8.*s3.*s10.*a3.*b3 + 2.*a3.*q1.^2.*s6.*s7 - 4.*s1.*a3.*q1.^2.*s9 - 4.*a3.*q1.*q2.*s4.*s9 + 2.*a3.*q1.*q2.*s5.*s7 + 2.*a3.*q1.*q2.*s6.*s8 - 2.*a3.*q1.*q3.*s6.*s9 + 4.*s3.*a3.*q1.*q3.*s7 + 4.*s10.*a3.*q1.*s6 - 2.*a3.*q1.*s7.*s9 + 2.*a3.*q2.^2.*s5.*s8 - 4.*s2.*a3.*q2.^2.*s9 - 2.*a3.*q2.*q3.*s5.*s9 + 4.*s3.*a3.*q2.*q3.*s8 + 4.*s10.*a3.*q2.*s5 - 2.*a3.*q2.*s8.*s9 - 2.*a3.*q3.*s9.^2 + 8.*s3.*s10.*a3.*q3 + b1.^2.*s7.^2 - 4.*s1.*s10.*b1.^2 - 4.*s10.*b1.*b2.*s4 + 2.*b1.*b2.*s7.*s8 - 4.*s10.*b1.*b3.*s6 + 2.*b1.*b3.*s7.*s9 + 2.*b1.*q1.*s7.^2 - 8.*s1.*s10.*b1.*q1 - 4.*s10.*b1.*q2.*s4 + 2.*b1.*q2.*s7.*s8 - 4.*s10.*b1.*q3.*s6 + 2.*b1.*q3.*s7.*s9 + b2.^2.*s8.^2 - 4.*s2.*s10.*b2.^2 - 4.*s10.*b2.*b3.*s5 + 2.*b2.*b3.*s8.*s9 - 4.*s10.*b2.*q1.*s4 + 2.*b2.*q1.*s7.*s8 + 2.*b2.*q2.*s8.^2 - 8.*s2.*s10.*b2.*q2 - 4.*s10.*b2.*q3.*s5 + 2.*b2.*q3.*s8.*s9 + b3.^2.*s9.^2 - 4.*s3.*s10.*b3.^2 - 4.*s10.*b3.*q1.*s6 + 2.*b3.*q1.*s7.*s9 - 4.*s10.*b3.*q2.*s5 + 2.*b3.*q2.*s8.*s9 + 2.*b3.*q3.*s9.^2 - 8.*s3.*s10.*b3.*q3 + q1.^2.*s7.^2 - 4.*s1.*s10.*q1.^2 - 4.*s10.*q1.*q2.*s4 + 2.*q1.*q2.*s7.*s8 - 4.*s10.*q1.*q3.*s6 + 2.*q1.*q3.*s7.*s9 + q2.^2.*s8.^2 - 4.*s2.*s10.*q2.^2 - 4.*s10.*q2.*q3.*s5 + 2.*q2.*q3.*s8.*s9 + q3.^2.*s9.^2 - 4.*s3.*s10.*q3.^2,[size(a1,2)*size(s1,1),1])];
            end
        end
        %% function to get the correpsonding v and u coefficient in order to speed up the calculation
        function [t_coeff_line,t_coeff_curve] = GetUVCoeff4EdgeOrient(~,rot_axis)
            if rot_axis == 4
                
                t_coeff_curve = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(s1.*b1.^2 - s4.*b1.*b2 - s5.*b1.*b3 + 2.*s1.*b1.*q1 + s4.*b1.*q2 + s5.*b1.*q3 + s7.*b1 + s2.*b2.^2 + s6.*b2.*b3 - s4.*b2.*q1 - 2.*s2.*b2.*q2 - s6.*b2.*q3 - s8.*b2 + s3.*b3.^2 - s5.*b3.*q1 - s6.*b3.*q2 - 2.*s3.*b3.*q3 - s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*b2.*s9 - 2.*b3.*s8 - 2.*b2.^2.*s6 + 2.*b3.^2.*s6 + 4.*b2.*b3.*s2 + 2.*b1.*b2.*s5 - 2.*b1.*b3.*s4 - 4.*b2.*b3.*s3 - 4.*b3.*q2.*s2 + 2.*b2.*q1.*s5 + 4.*b2.*q3.*s3 - 2.*b3.*q1.*s4 + 2.*b2.*q2.*s6 - 2.*b3.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*s10 + 2.*b1.*s7 + 2.*q1.*s7 + 2.*q2.*s8 + 2.*q3.*s9 + 2.*b1.^2.*s1 - 2.*b2.^2.*s2 + 4.*b2.^2.*s3 + 4.*b3.^2.*s2 - 2.*b3.^2.*s3 + 2.*q1.^2.*s1 + 2.*q2.^2.*s2 + 2.*q3.^2.*s3 - 6.*b2.*b3.*s6 + 4.*b1.*q1.*s1 + 2.*b1.*q2.*s4 + 2.*b1.*q3.*s5 + 2.*q1.*q2.*s4 + 2.*q1.*q3.*s5 + 2.*q2.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*b2.*s9 - 2.*b3.*s8 + 2.*b2.^2.*s6 - 2.*b3.^2.*s6 - 4.*b2.*b3.*s2 + 2.*b1.*b2.*s5 - 2.*b1.*b3.*s4 + 4.*b2.*b3.*s3 - 4.*b3.*q2.*s2 + 2.*b2.*q1.*s5 + 4.*b2.*q3.*s3 - 2.*b3.*q1.*s4 + 2.*b2.*q2.*s6 - 2.*b3.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(s1.*b1.^2 + s4.*b1.*b2 + s5.*b1.*b3 + 2.*s1.*b1.*q1 + s4.*b1.*q2 + s5.*b1.*q3 + s7.*b1 + s2.*b2.^2 + s6.*b2.*b3 + s4.*b2.*q1 + 2.*s2.*b2.*q2 + s6.*b2.*q3 + s8.*b2 + s3.*b3.^2 + s5.*b3.*q1 + s6.*b3.*q2 + 2.*s3.*b3.*q3 + s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1])];
                
                
            elseif rot_axis == 5
                t_coeff_curve = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(s1.*b1.^2 - s4.*b1.*b2 + s5.*b1.*b3 - 2.*s1.*b1.*q1 - s4.*b1.*q2 - s5.*b1.*q3 - s7.*b1 + s2.*b2.^2 - s6.*b2.*b3 + s4.*b2.*q1 + 2.*s2.*b2.*q2 + s6.*b2.*q3 + s8.*b2 + s3.*b3.^2 - s5.*b3.*q1 - s6.*b3.*q2 - 2.*s3.*b3.*q3 - s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*b3.*s7 - 2.*b1.*s9 + 2.*b1.^2.*s5 - 2.*b3.^2.*s5 - 4.*b1.*b3.*s1 + 4.*b1.*b3.*s3 - 2.*b1.*b2.*s6 + 2.*b2.*b3.*s4 + 4.*b3.*q1.*s1 - 2.*b1.*q1.*s5 - 4.*b1.*q3.*s3 - 2.*b1.*q2.*s6 + 2.*b3.*q2.*s4 + 2.*b3.*q3.*s5,[size(a1,2)*size(s1,1),1]),...
                    reshape( 2.*s10 + 2.*b2.*s8 + 2.*q1.*s7 + 2.*q2.*s8 + 2.*q3.*s9 - 2.*b1.^2.*s1 + 4.*b1.^2.*s3 + 2.*b2.^2.*s2 + 4.*b3.^2.*s1 - 2.*b3.^2.*s3 + 2.*q1.^2.*s1 + 2.*q2.^2.*s2 + 2.*q3.^2.*s3 - 6.*b1.*b3.*s5 + 4.*b2.*q2.*s2 + 2.*b2.*q1.*s4 + 2.*b2.*q3.*s6 + 2.*q1.*q2.*s4 + 2.*q1.*q3.*s5 + 2.*q2.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape( 2.*b3.*s7 - 2.*b1.*s9 - 2.*b1.^2.*s5 + 2.*b3.^2.*s5 + 4.*b1.*b3.*s1 - 4.*b1.*b3.*s3 - 2.*b1.*b2.*s6 + 2.*b2.*b3.*s4 + 4.*b3.*q1.*s1 - 2.*b1.*q1.*s5 - 4.*b1.*q3.*s3 - 2.*b1.*q2.*s6 + 2.*b3.*q2.*s4 + 2.*b3.*q3.*s5,[size(a1,2)*size(s1,1),1]),...
                    reshape( s1.*b1.^2 + s4.*b1.*b2 + s5.*b1.*b3 + 2.*s1.*b1.*q1 + s4.*b1.*q2 + s5.*b1.*q3 + s7.*b1 + s2.*b2.^2 + s6.*b2.*b3 + s4.*b2.*q1 + 2.*s2.*b2.*q2 + s6.*b2.*q3 + s8.*b2 + s3.*b3.^2 + s5.*b3.*q1 + s6.*b3.*q2 + 2.*s3.*b3.*q3 + s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1])];
                
                
                
            elseif rot_axis == 6
                t_coeff_curve = @(a1,a2,a3,b1,b2,b3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,q1,q2,q3) ...
                    [reshape(s1.*b1.^2 - s4.*b1.*b2 - s5.*b1.*b3 + 2.*s1.*b1.*q1 + s4.*b1.*q2 + s5.*b1.*q3 + s7.*b1 + s2.*b2.^2 + s6.*b2.*b3 - s4.*b2.*q1 - 2.*s2.*b2.*q2 - s6.*b2.*q3 - s8.*b2 + s3.*b3.^2 - s5.*b3.*q1 - s6.*b3.*q2 - 2.*s3.*b3.*q3 - s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*b2.*s9 - 2.*b3.*s8 - 2.*b2.^2.*s6 + 2.*b3.^2.*s6 + 4.*b2.*b3.*s2 + 2.*b1.*b2.*s5 - 2.*b1.*b3.*s4 - 4.*b2.*b3.*s3 - 4.*b3.*q2.*s2 + 2.*b2.*q1.*s5 + 4.*b2.*q3.*s3 - 2.*b3.*q1.*s4 + 2.*b2.*q2.*s6 - 2.*b3.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*s10 + 2.*b1.*s7 + 2.*q1.*s7 + 2.*q2.*s8 + 2.*q3.*s9 + 2.*b1.^2.*s1 - 2.*b2.^2.*s2 + 4.*b2.^2.*s3 + 4.*b3.^2.*s2 - 2.*b3.^2.*s3 + 2.*q1.^2.*s1 + 2.*q2.^2.*s2 + 2.*q3.^2.*s3 - 6.*b2.*b3.*s6 + 4.*b1.*q1.*s1 + 2.*b1.*q2.*s4 + 2.*b1.*q3.*s5 + 2.*q1.*q2.*s4 + 2.*q1.*q3.*s5 + 2.*q2.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(2.*b2.*s9 - 2.*b3.*s8 + 2.*b2.^2.*s6 - 2.*b3.^2.*s6 - 4.*b2.*b3.*s2 + 2.*b1.*b2.*s5 - 2.*b1.*b3.*s4 + 4.*b2.*b3.*s3 - 4.*b3.*q2.*s2 + 2.*b2.*q1.*s5 + 4.*b2.*q3.*s3 - 2.*b3.*q1.*s4 + 2.*b2.*q2.*s6 - 2.*b3.*q3.*s6,[size(a1,2)*size(s1,1),1]),...
                    reshape(s1.*b1.^2 + s4.*b1.*b2 + s5.*b1.*b3 + 2.*s1.*b1.*q1 + s4.*b1.*q2 + s5.*b1.*q3 + s7.*b1 + s2.*b2.^2 + s6.*b2.*b3 + s4.*b2.*q1 + 2.*s2.*b2.*q2 + s6.*b2.*q3 + s8.*b2 + s3.*b3.^2 + s5.*b3.*q1 + s6.*b3.*q2 + 2.*s3.*b3.*q3 + s9.*b3 + s1.*q1.^2 + s4.*q1.*q2 + s5.*q1.*q3 + s7.*q1 + s2.*q2.^2 + s6.*q2.*q3 + s8.*q2 + s3.*q3.^2 + s9.*q3 + s10,[size(a1,2)*size(s1,1),1])];
            end
            t_coeff_line = @(a1,a2,a3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10)...
                [reshape(s1.*a1.^2 + s4.*a1.*a2 + s5.*a1.*a3 - 2.*s1.*a1.*c1 - s4.*a1.*c2 - s5.*a1.*c3 + s2.*a2.^2 + s6.*a2.*a3 - s4.*a2.*c1 - 2.*s2.*a2.*c2 - s6.*a2.*c3 + s3.*a3.^2 - s5.*a3.*c1 - s6.*a3.*c2 - 2.*s3.*a3.*c3 + s1.*c1.^2 + s4.*c1.*c2 + s5.*c1.*c3 + s2.*c2.^2 + s6.*c2.*c3 + s3.*c3.^2,[size(a1,2)*size(s1,1),1]),...
                reshape(c1.*s7 - a2.*s8 - a3.*s9 - a1.*s7 + c2.*s8 + c3.*s9 - 2.*a1.^2.*s1 - 2.*a2.^2.*s2 - 2.*a3.^2.*s3 - 2.*a1.*a2.*s4 - 2.*a1.*a3.*s5 - 2.*a2.*a3.*s6 + 2.*a1.*c1.*s1 + 2.*a2.*c2.*s2 + a1.*c2.*s4 + a2.*c1.*s4 + a1.*c3.*s5 + a3.*c1.*s5 + 2.*a3.*c3.*s3 + a2.*c3.*s6 + a3.*c2.*s6,[size(a1,2)*size(s1,1),1]),...
                reshape(s1.*a1.^2 + s4.*a1.*a2 + s5.*a1.*a3 + s7.*a1 + s2.*a2.^2 + s6.*a2.*a3 + s8.*a2 + s3.*a3.^2 + s9.*a3 + s10,[size(a1,2)*size(s1,1),1])];
        end
        
        function [u_coeff,v_coeff_u] = GetUVCoeff4QuadTrans(~)
            v_coeff_u =@(u,a11,a12,a13,a21,a22,a23,a31,a32,a33,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10) ...
                [reshape(s1.*(a11 - a21 + u.*(a21 - a31)).^2 + s2.*(a12 - a22 + u.*(a22 - a32)).^2 + s3.*(a13 - a23 + u.*(a23 - a33)).^2 + s4.*(a11 - a21 + u.*(a21 - a31)).*(a12 - a22 + u.*(a22 - a32)) + s5.*(a11 - a21 + u.*(a21 - a31)).*(a13 - a23 + u.*(a23 - a33)) + s6.*(a12 - a22 + u.*(a22 - a32)).*(a13 - a23 + u.*(a23 - a33)),[size(a11,2).*size(s1,1),1]),...
                reshape(- s7.*(a11 - a21 + u.*(a21 - a31)) - s8.*(a12 - a22 + u.*(a22 - a32)) - s9.*(a13 - a23 + u.*(a23 - a33)) - 2.*a11.*s1.*(a11 - a21 + u.*(a21 - a31)) - a12.*s4.*(a11 - a21 + u.*(a21 - a31)) - 2.*a12.*s2.*(a12 - a22 + u.*(a22 - a32)) - a13.*s5.*(a11 - a21 + u.*(a21 - a31)) - a11.*s4.*(a12 - a22 + u.*(a22 - a32)) - a13.*s6.*(a12 - a22 + u.*(a22 - a32)) - a11.*s5.*(a13 - a23 + u.*(a23 - a33)) - 2.*a13.*s3.*(a13 - a23 + u.*(a23 - a33)) - a12.*s6.*(a13 - a23 + u.*(a23 - a33)),[size(a11,2).*size(s1,1),1]),...
                reshape(s1.*a11.^2 + s4.*a11.*a12 + s5.*a11.*a13 + s7.*a11 + s2.*a12.^2 + s6.*a12.*a13 + s8.*a12 + s3.*a13.^2 + s9.*a13 + s10,[size(a11,2).*size(s1,1),1])];
            u_coeff = @(a11,a12,a13,a21,a22,a23,a31,a32,a33,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10) ...
                [reshape(a11.^2.*a22.^2.*s4.^2 - 4.*s1.*s2.*a11.^2.*a22.^2 + 2.*a11.^2.*a22.*a23.*s4.*s5 - 4.*s1.*a11.^2.*a22.*a23.*s6 - 2.*a11.^2.*a22.*a32.*s4.^2 + 8.*s1.*s2.*a11.^2.*a22.*a32 - 2.*a11.^2.*a22.*a33.*s4.*s5 + 4.*s1.*a11.^2.*a22.*a33.*s6 + a11.^2.*a23.^2.*s5.^2 - 4.*s1.*s3.*a11.^2.*a23.^2 - 2.*a11.^2.*a23.*a32.*s4.*s5 + 4.*s1.*a11.^2.*a23.*a32.*s6 - 2.*a11.^2.*a23.*a33.*s5.^2 + 8.*s1.*s3.*a11.^2.*a23.*a33 + a11.^2.*a32.^2.*s4.^2 - 4.*s1.*s2.*a11.^2.*a32.^2 + 2.*a11.^2.*a32.*a33.*s4.*s5 - 4.*s1.*a11.^2.*a32.*a33.*s6 + a11.^2.*a33.^2.*s5.^2 - 4.*s1.*s3.*a11.^2.*a33.^2 - 2.*a11.*a12.*a21.*a22.*s4.^2 + 8.*s1.*s2.*a11.*a12.*a21.*a22 - 2.*a11.*a12.*a21.*a23.*s4.*s5 + 4.*s1.*a11.*a12.*a21.*a23.*s6 + 2.*a11.*a12.*a21.*a32.*s4.^2 - 8.*s1.*s2.*a11.*a12.*a21.*a32 + 2.*a11.*a12.*a21.*a33.*s4.*s5 - 4.*s1.*a11.*a12.*a21.*a33.*s6 - 2.*a11.*a12.*a22.*a23.*s4.*s6 + 4.*s2.*a11.*a12.*a22.*a23.*s5 + 2.*a11.*a12.*a22.*a31.*s4.^2 - 8.*s1.*s2.*a11.*a12.*a22.*a31 + 2.*a11.*a12.*a22.*a33.*s4.*s6 - 4.*s2.*a11.*a12.*a22.*a33.*s5 - 4.*s3.*a11.*a12.*a23.^2.*s4 + 2.*a11.*a12.*a23.^2.*s5.*s6 + 2.*a11.*a12.*a23.*a31.*s4.*s5 - 4.*s1.*a11.*a12.*a23.*a31.*s6 + 2.*a11.*a12.*a23.*a32.*s4.*s6 - 4.*s2.*a11.*a12.*a23.*a32.*s5 + 8.*s3.*a11.*a12.*a23.*a33.*s4 - 4.*a11.*a12.*a23.*a33.*s5.*s6 - 2.*a11.*a12.*a31.*a32.*s4.^2 + 8.*s1.*s2.*a11.*a12.*a31.*a32 - 2.*a11.*a12.*a31.*a33.*s4.*s5 + 4.*s1.*a11.*a12.*a31.*a33.*s6 - 2.*a11.*a12.*a32.*a33.*s4.*s6 + 4.*s2.*a11.*a12.*a32.*a33.*s5 - 4.*s3.*a11.*a12.*a33.^2.*s4 + 2.*a11.*a12.*a33.^2.*s5.*s6 - 2.*a11.*a13.*a21.*a22.*s4.*s5 + 4.*s1.*a11.*a13.*a21.*a22.*s6 - 2.*a11.*a13.*a21.*a23.*s5.^2 + 8.*s1.*s3.*a11.*a13.*a21.*a23 + 2.*a11.*a13.*a21.*a32.*s4.*s5 - 4.*s1.*a11.*a13.*a21.*a32.*s6 + 2.*a11.*a13.*a21.*a33.*s5.^2 - 8.*s1.*s3.*a11.*a13.*a21.*a33 + 2.*a11.*a13.*a22.^2.*s4.*s6 - 4.*s2.*a11.*a13.*a22.^2.*s5 + 4.*s3.*a11.*a13.*a22.*a23.*s4 - 2.*a11.*a13.*a22.*a23.*s5.*s6 + 2.*a11.*a13.*a22.*a31.*s4.*s5 - 4.*s1.*a11.*a13.*a22.*a31.*s6 - 4.*a11.*a13.*a22.*a32.*s4.*s6 + 8.*s2.*a11.*a13.*a22.*a32.*s5 - 4.*s3.*a11.*a13.*a22.*a33.*s4 + 2.*a11.*a13.*a22.*a33.*s5.*s6 + 2.*a11.*a13.*a23.*a31.*s5.^2 - 8.*s1.*s3.*a11.*a13.*a23.*a31 - 4.*s3.*a11.*a13.*a23.*a32.*s4 + 2.*a11.*a13.*a23.*a32.*s5.*s6 - 2.*a11.*a13.*a31.*a32.*s4.*s5 + 4.*s1.*a11.*a13.*a31.*a32.*s6 - 2.*a11.*a13.*a31.*a33.*s5.^2 + 8.*s1.*s3.*a11.*a13.*a31.*a33 + 2.*a11.*a13.*a32.^2.*s4.*s6 - 4.*s2.*a11.*a13.*a32.^2.*s5 + 4.*s3.*a11.*a13.*a32.*a33.*s4 - 2.*a11.*a13.*a32.*a33.*s5.*s6 - 2.*a11.*a21.*a22.*s4.*s7 + 4.*s1.*a11.*a21.*a22.*s8 - 2.*a11.*a21.*a23.*s5.*s7 + 4.*s1.*a11.*a21.*a23.*s9 + 2.*a11.*a21.*a32.*s4.*s7 - 4.*s1.*a11.*a21.*a32.*s8 + 2.*a11.*a21.*a33.*s5.*s7 - 4.*s1.*a11.*a21.*a33.*s9 + 2.*a11.*a22.^2.*s4.*s8 - 4.*s2.*a11.*a22.^2.*s7 + 2.*a11.*a22.*a23.*s4.*s9 + 2.*a11.*a22.*a23.*s5.*s8 - 4.*a11.*a22.*a23.*s6.*s7 + 2.*a11.*a22.*a31.*s4.*s7 - 4.*s1.*a11.*a22.*a31.*s8 - 4.*a11.*a22.*a32.*s4.*s8 + 8.*s2.*a11.*a22.*a32.*s7 - 2.*a11.*a22.*a33.*s4.*s9 - 2.*a11.*a22.*a33.*s5.*s8 + 4.*a11.*a22.*a33.*s6.*s7 + 2.*a11.*a23.^2.*s5.*s9 - 4.*s3.*a11.*a23.^2.*s7 + 2.*a11.*a23.*a31.*s5.*s7 - 4.*s1.*a11.*a23.*a31.*s9 - 2.*a11.*a23.*a32.*s4.*s9 - 2.*a11.*a23.*a32.*s5.*s8 + 4.*a11.*a23.*a32.*s6.*s7 - 4.*a11.*a23.*a33.*s5.*s9 + 8.*s3.*a11.*a23.*a33.*s7 - 2.*a11.*a31.*a32.*s4.*s7 + 4.*s1.*a11.*a31.*a32.*s8 - 2.*a11.*a31.*a33.*s5.*s7 + 4.*s1.*a11.*a31.*a33.*s9 + 2.*a11.*a32.^2.*s4.*s8 - 4.*s2.*a11.*a32.^2.*s7 + 2.*a11.*a32.*a33.*s4.*s9 + 2.*a11.*a32.*a33.*s5.*s8 - 4.*a11.*a32.*a33.*s6.*s7 + 2.*a11.*a33.^2.*s5.*s9 - 4.*s3.*a11.*a33.^2.*s7 + a12.^2.*a21.^2.*s4.^2 - 4.*s1.*s2.*a12.^2.*a21.^2 + 2.*a12.^2.*a21.*a23.*s4.*s6 - 4.*s2.*a12.^2.*a21.*a23.*s5 - 2.*a12.^2.*a21.*a31.*s4.^2 + 8.*s1.*s2.*a12.^2.*a21.*a31 - 2.*a12.^2.*a21.*a33.*s4.*s6 + 4.*s2.*a12.^2.*a21.*a33.*s5 + a12.^2.*a23.^2.*s6.^2 - 4.*s2.*s3.*a12.^2.*a23.^2 - 2.*a12.^2.*a23.*a31.*s4.*s6 + 4.*s2.*a12.^2.*a23.*a31.*s5 - 2.*a12.^2.*a23.*a33.*s6.^2 + 8.*s2.*s3.*a12.^2.*a23.*a33 + a12.^2.*a31.^2.*s4.^2 - 4.*s1.*s2.*a12.^2.*a31.^2 + 2.*a12.^2.*a31.*a33.*s4.*s6 - 4.*s2.*a12.^2.*a31.*a33.*s5 + a12.^2.*a33.^2.*s6.^2 - 4.*s2.*s3.*a12.^2.*a33.^2 + 2.*a12.*a13.*a21.^2.*s4.*s5 - 4.*s1.*a12.*a13.*a21.^2.*s6 - 2.*a12.*a13.*a21.*a22.*s4.*s6 + 4.*s2.*a12.*a13.*a21.*a22.*s5 + 4.*s3.*a12.*a13.*a21.*a23.*s4 - 2.*a12.*a13.*a21.*a23.*s5.*s6 - 4.*a12.*a13.*a21.*a31.*s4.*s5 + 8.*s1.*a12.*a13.*a21.*a31.*s6 + 2.*a12.*a13.*a21.*a32.*s4.*s6 - 4.*s2.*a12.*a13.*a21.*a32.*s5 - 4.*s3.*a12.*a13.*a21.*a33.*s4 + 2.*a12.*a13.*a21.*a33.*s5.*s6 - 2.*a12.*a13.*a22.*a23.*s6.^2 + 8.*s2.*s3.*a12.*a13.*a22.*a23 + 2.*a12.*a13.*a22.*a31.*s4.*s6 - 4.*s2.*a12.*a13.*a22.*a31.*s5 + 2.*a12.*a13.*a22.*a33.*s6.^2 - 8.*s2.*s3.*a12.*a13.*a22.*a33 - 4.*s3.*a12.*a13.*a23.*a31.*s4 + 2.*a12.*a13.*a23.*a31.*s5.*s6 + 2.*a12.*a13.*a23.*a32.*s6.^2 - 8.*s2.*s3.*a12.*a13.*a23.*a32 + 2.*a12.*a13.*a31.^2.*s4.*s5 - 4.*s1.*a12.*a13.*a31.^2.*s6 - 2.*a12.*a13.*a31.*a32.*s4.*s6 + 4.*s2.*a12.*a13.*a31.*a32.*s5 + 4.*s3.*a12.*a13.*a31.*a33.*s4 - 2.*a12.*a13.*a31.*a33.*s5.*s6 - 2.*a12.*a13.*a32.*a33.*s6.^2 + 8.*s2.*s3.*a12.*a13.*a32.*a33 + 2.*a12.*a21.^2.*s4.*s7 - 4.*s1.*a12.*a21.^2.*s8 - 2.*a12.*a21.*a22.*s4.*s8 + 4.*s2.*a12.*a21.*a22.*s7 + 2.*a12.*a21.*a23.*s4.*s9 - 4.*a12.*a21.*a23.*s5.*s8 + 2.*a12.*a21.*a23.*s6.*s7 - 4.*a12.*a21.*a31.*s4.*s7 + 8.*s1.*a12.*a21.*a31.*s8 + 2.*a12.*a21.*a32.*s4.*s8 - 4.*s2.*a12.*a21.*a32.*s7 - 2.*a12.*a21.*a33.*s4.*s9 + 4.*a12.*a21.*a33.*s5.*s8 - 2.*a12.*a21.*a33.*s6.*s7 - 2.*a12.*a22.*a23.*s6.*s8 + 4.*s2.*a12.*a22.*a23.*s9 + 2.*a12.*a22.*a31.*s4.*s8 - 4.*s2.*a12.*a22.*a31.*s7 + 2.*a12.*a22.*a33.*s6.*s8 - 4.*s2.*a12.*a22.*a33.*s9 + 2.*a12.*a23.^2.*s6.*s9 - 4.*s3.*a12.*a23.^2.*s8 - 2.*a12.*a23.*a31.*s4.*s9 + 4.*a12.*a23.*a31.*s5.*s8 - 2.*a12.*a23.*a31.*s6.*s7 + 2.*a12.*a23.*a32.*s6.*s8 - 4.*s2.*a12.*a23.*a32.*s9 - 4.*a12.*a23.*a33.*s6.*s9 + 8.*s3.*a12.*a23.*a33.*s8 + 2.*a12.*a31.^2.*s4.*s7 - 4.*s1.*a12.*a31.^2.*s8 - 2.*a12.*a31.*a32.*s4.*s8 + 4.*s2.*a12.*a31.*a32.*s7 + 2.*a12.*a31.*a33.*s4.*s9 - 4.*a12.*a31.*a33.*s5.*s8 + 2.*a12.*a31.*a33.*s6.*s7 - 2.*a12.*a32.*a33.*s6.*s8 + 4.*s2.*a12.*a32.*a33.*s9 + 2.*a12.*a33.^2.*s6.*s9 - 4.*s3.*a12.*a33.^2.*s8 + a13.^2.*a21.^2.*s5.^2 - 4.*s1.*s3.*a13.^2.*a21.^2 - 4.*s3.*a13.^2.*a21.*a22.*s4 + 2.*a13.^2.*a21.*a22.*s5.*s6 - 2.*a13.^2.*a21.*a31.*s5.^2 + 8.*s1.*s3.*a13.^2.*a21.*a31 + 4.*s3.*a13.^2.*a21.*a32.*s4 - 2.*a13.^2.*a21.*a32.*s5.*s6 + a13.^2.*a22.^2.*s6.^2 - 4.*s2.*s3.*a13.^2.*a22.^2 + 4.*s3.*a13.^2.*a22.*a31.*s4 - 2.*a13.^2.*a22.*a31.*s5.*s6 - 2.*a13.^2.*a22.*a32.*s6.^2 + 8.*s2.*s3.*a13.^2.*a22.*a32 + a13.^2.*a31.^2.*s5.^2 - 4.*s1.*s3.*a13.^2.*a31.^2 - 4.*s3.*a13.^2.*a31.*a32.*s4 + 2.*a13.^2.*a31.*a32.*s5.*s6 + a13.^2.*a32.^2.*s6.^2 - 4.*s2.*s3.*a13.^2.*a32.^2 + 2.*a13.*a21.^2.*s5.*s7 - 4.*s1.*a13.*a21.^2.*s9 - 4.*a13.*a21.*a22.*s4.*s9 + 2.*a13.*a21.*a22.*s5.*s8 + 2.*a13.*a21.*a22.*s6.*s7 - 2.*a13.*a21.*a23.*s5.*s9 + 4.*s3.*a13.*a21.*a23.*s7 - 4.*a13.*a21.*a31.*s5.*s7 + 8.*s1.*a13.*a21.*a31.*s9 + 4.*a13.*a21.*a32.*s4.*s9 - 2.*a13.*a21.*a32.*s5.*s8 - 2.*a13.*a21.*a32.*s6.*s7 + 2.*a13.*a21.*a33.*s5.*s9 - 4.*s3.*a13.*a21.*a33.*s7 + 2.*a13.*a22.^2.*s6.*s8 - 4.*s2.*a13.*a22.^2.*s9 - 2.*a13.*a22.*a23.*s6.*s9 + 4.*s3.*a13.*a22.*a23.*s8 + 4.*a13.*a22.*a31.*s4.*s9 - 2.*a13.*a22.*a31.*s5.*s8 - 2.*a13.*a22.*a31.*s6.*s7 - 4.*a13.*a22.*a32.*s6.*s8 + 8.*s2.*a13.*a22.*a32.*s9 + 2.*a13.*a22.*a33.*s6.*s9 - 4.*s3.*a13.*a22.*a33.*s8 + 2.*a13.*a23.*a31.*s5.*s9 - 4.*s3.*a13.*a23.*a31.*s7 + 2.*a13.*a23.*a32.*s6.*s9 - 4.*s3.*a13.*a23.*a32.*s8 + 2.*a13.*a31.^2.*s5.*s7 - 4.*s1.*a13.*a31.^2.*s9 - 4.*a13.*a31.*a32.*s4.*s9 + 2.*a13.*a31.*a32.*s5.*s8 + 2.*a13.*a31.*a32.*s6.*s7 - 2.*a13.*a31.*a33.*s5.*s9 + 4.*s3.*a13.*a31.*a33.*s7 + 2.*a13.*a32.^2.*s6.*s8 - 4.*s2.*a13.*a32.^2.*s9 - 2.*a13.*a32.*a33.*s6.*s9 + 4.*s3.*a13.*a32.*a33.*s8 + a21.^2.*s7.^2 - 4.*s1.*s10.*a21.^2 - 4.*s10.*a21.*a22.*s4 + 2.*a21.*a22.*s7.*s8 - 4.*s10.*a21.*a23.*s5 + 2.*a21.*a23.*s7.*s9 - 2.*a21.*a31.*s7.^2 + 8.*s1.*s10.*a21.*a31 + 4.*s10.*a21.*a32.*s4 - 2.*a21.*a32.*s7.*s8 + 4.*s10.*a21.*a33.*s5 - 2.*a21.*a33.*s7.*s9 + a22.^2.*s8.^2 - 4.*s2.*s10.*a22.^2 - 4.*s10.*a22.*a23.*s6 + 2.*a22.*a23.*s8.*s9 + 4.*s10.*a22.*a31.*s4 - 2.*a22.*a31.*s7.*s8 - 2.*a22.*a32.*s8.^2 + 8.*s2.*s10.*a22.*a32 + 4.*s10.*a22.*a33.*s6 - 2.*a22.*a33.*s8.*s9 + a23.^2.*s9.^2 - 4.*s3.*s10.*a23.^2 + 4.*s10.*a23.*a31.*s5 - 2.*a23.*a31.*s7.*s9 + 4.*s10.*a23.*a32.*s6 - 2.*a23.*a32.*s8.*s9 - 2.*a23.*a33.*s9.^2 + 8.*s3.*s10.*a23.*a33 + a31.^2.*s7.^2 - 4.*s1.*s10.*a31.^2 - 4.*s10.*a31.*a32.*s4 + 2.*a31.*a32.*s7.*s8 - 4.*s10.*a31.*a33.*s5 + 2.*a31.*a33.*s7.*s9 + a32.^2.*s8.^2 - 4.*s2.*s10.*a32.^2 - 4.*s10.*a32.*a33.*s6 + 2.*a32.*a33.*s8.*s9 + a33.^2.*s9.^2 - 4.*s3.*s10.*a33.^2,[size(a11,2).*size(s1,1),1]),...
                reshape(- 2.*a11.^2.*a22.^2.*s4.^2 + 8.*s1.*s2.*a11.^2.*a22.^2 - 4.*a11.^2.*a22.*a23.*s4.*s5 + 8.*s1.*a11.^2.*a22.*a23.*s6 + 2.*a32.*a11.^2.*a22.*s4.^2 + 2.*a33.*a11.^2.*a22.*s4.*s5 - 2.*a11.^2.*a22.*s4.*s7 - 4.*a33.*s1.*a11.^2.*a22.*s6 + 4.*s1.*a11.^2.*a22.*s8 - 8.*a32.*s1.*s2.*a11.^2.*a22 - 2.*a11.^2.*a23.^2.*s5.^2 + 8.*s1.*s3.*a11.^2.*a23.^2 + 2.*a32.*a11.^2.*a23.*s4.*s5 + 2.*a33.*a11.^2.*a23.*s5.^2 - 2.*a11.^2.*a23.*s5.*s7 - 4.*a32.*s1.*a11.^2.*a23.*s6 + 4.*s1.*a11.^2.*a23.*s9 - 8.*a33.*s1.*s3.*a11.^2.*a23 + 2.*a32.*a11.^2.*s4.*s7 + 2.*a33.*a11.^2.*s5.*s7 - 4.*a32.*s1.*a11.^2.*s8 - 4.*a33.*s1.*a11.^2.*s9 + 4.*a11.*a12.*a21.*a22.*s4.^2 - 16.*s1.*s2.*a11.*a12.*a21.*a22 + 4.*a11.*a12.*a21.*a23.*s4.*s5 - 8.*s1.*a11.*a12.*a21.*a23.*s6 - 2.*a32.*a11.*a12.*a21.*s4.^2 - 2.*a33.*a11.*a12.*a21.*s4.*s5 + 2.*a11.*a12.*a21.*s4.*s7 + 4.*a33.*s1.*a11.*a12.*a21.*s6 - 4.*s1.*a11.*a12.*a21.*s8 + 8.*a32.*s1.*s2.*a11.*a12.*a21 + 4.*a11.*a12.*a22.*a23.*s4.*s6 - 8.*s2.*a11.*a12.*a22.*a23.*s5 - 2.*a31.*a11.*a12.*a22.*s4.^2 - 2.*a33.*a11.*a12.*a22.*s4.*s6 + 2.*a11.*a12.*a22.*s4.*s8 + 4.*a33.*s2.*a11.*a12.*a22.*s5 - 4.*s2.*a11.*a12.*a22.*s7 + 8.*a31.*s1.*s2.*a11.*a12.*a22 + 8.*s3.*a11.*a12.*a23.^2.*s4 - 4.*a11.*a12.*a23.^2.*s5.*s6 - 2.*a31.*a11.*a12.*a23.*s4.*s5 - 2.*a32.*a11.*a12.*a23.*s4.*s6 + 4.*a11.*a12.*a23.*s4.*s9 - 8.*a33.*s3.*a11.*a12.*a23.*s4 + 4.*a33.*a11.*a12.*a23.*s5.*s6 - 2.*a11.*a12.*a23.*s5.*s8 + 4.*a32.*s2.*a11.*a12.*a23.*s5 - 2.*a11.*a12.*a23.*s6.*s7 + 4.*a31.*s1.*a11.*a12.*a23.*s6 - 2.*a31.*a11.*a12.*s4.*s7 - 2.*a32.*a11.*a12.*s4.*s8 - 4.*a33.*a11.*a12.*s4.*s9 + 2.*a33.*a11.*a12.*s5.*s8 + 2.*a33.*a11.*a12.*s6.*s7 + 4.*a32.*s2.*a11.*a12.*s7 + 4.*a31.*s1.*a11.*a12.*s8 + 4.*a11.*a13.*a21.*a22.*s4.*s5 - 8.*s1.*a11.*a13.*a21.*a22.*s6 + 4.*a11.*a13.*a21.*a23.*s5.^2 - 16.*s1.*s3.*a11.*a13.*a21.*a23 - 2.*a32.*a11.*a13.*a21.*s4.*s5 - 2.*a33.*a11.*a13.*a21.*s5.^2 + 2.*a11.*a13.*a21.*s5.*s7 + 4.*a32.*s1.*a11.*a13.*a21.*s6 - 4.*s1.*a11.*a13.*a21.*s9 + 8.*a33.*s1.*s3.*a11.*a13.*a21 - 4.*a11.*a13.*a22.^2.*s4.*s6 + 8.*s2.*a11.*a13.*a22.^2.*s5 - 8.*s3.*a11.*a13.*a22.*a23.*s4 + 4.*a11.*a13.*a22.*a23.*s5.*s6 - 2.*a31.*a11.*a13.*a22.*s4.*s5 + 4.*a32.*a11.*a13.*a22.*s4.*s6 - 2.*a11.*a13.*a22.*s4.*s9 + 4.*a33.*s3.*a11.*a13.*a22.*s4 - 2.*a33.*a11.*a13.*a22.*s5.*s6 + 4.*a11.*a13.*a22.*s5.*s8 - 8.*a32.*s2.*a11.*a13.*a22.*s5 - 2.*a11.*a13.*a22.*s6.*s7 + 4.*a31.*s1.*a11.*a13.*a22.*s6 + 4.*a32.*s3.*a11.*a13.*a23.*s4 - 2.*a31.*a11.*a13.*a23.*s5.^2 - 2.*a32.*a11.*a13.*a23.*s5.*s6 + 2.*a11.*a13.*a23.*s5.*s9 - 4.*s3.*a11.*a13.*a23.*s7 + 8.*a31.*s1.*s3.*a11.*a13.*a23 + 2.*a32.*a11.*a13.*s4.*s9 - 2.*a31.*a11.*a13.*s5.*s7 - 4.*a32.*a11.*a13.*s5.*s8 - 2.*a33.*a11.*a13.*s5.*s9 + 2.*a32.*a11.*a13.*s6.*s7 + 4.*a33.*s3.*a11.*a13.*s7 + 4.*a31.*s1.*a11.*a13.*s9 + 4.*a11.*a21.*a22.*s4.*s7 - 8.*s1.*a11.*a21.*a22.*s8 + 4.*a11.*a21.*a23.*s5.*s7 - 8.*s1.*a11.*a21.*a23.*s9 - 2.*a32.*a11.*a21.*s4.*s7 - 2.*a33.*a11.*a21.*s5.*s7 + 2.*a11.*a21.*s7.^2 + 4.*a32.*s1.*a11.*a21.*s8 + 4.*a33.*s1.*a11.*a21.*s9 - 8.*s1.*s10.*a11.*a21 - 4.*a11.*a22.^2.*s4.*s8 + 8.*s2.*a11.*a22.^2.*s7 - 4.*a11.*a22.*a23.*s4.*s9 - 4.*a11.*a22.*a23.*s5.*s8 + 8.*a11.*a22.*a23.*s6.*s7 - 2.*a31.*a11.*a22.*s4.*s7 + 4.*a32.*a11.*a22.*s4.*s8 + 2.*a33.*a11.*a22.*s4.*s9 - 4.*s10.*a11.*a22.*s4 + 2.*a33.*a11.*a22.*s5.*s8 - 4.*a33.*a11.*a22.*s6.*s7 + 2.*a11.*a22.*s7.*s8 - 8.*a32.*s2.*a11.*a22.*s7 + 4.*a31.*s1.*a11.*a22.*s8 - 4.*a11.*a23.^2.*s5.*s9 + 8.*s3.*a11.*a23.^2.*s7 + 2.*a32.*a11.*a23.*s4.*s9 - 2.*a31.*a11.*a23.*s5.*s7 + 2.*a32.*a11.*a23.*s5.*s8 + 4.*a33.*a11.*a23.*s5.*s9 - 4.*s10.*a11.*a23.*s5 - 4.*a32.*a11.*a23.*s6.*s7 + 2.*a11.*a23.*s7.*s9 - 8.*a33.*s3.*a11.*a23.*s7 + 4.*a31.*s1.*a11.*a23.*s9 + 4.*a32.*s10.*a11.*s4 + 4.*a33.*s10.*a11.*s5 - 2.*a31.*a11.*s7.^2 - 2.*a32.*a11.*s7.*s8 - 2.*a33.*a11.*s7.*s9 + 8.*a31.*s1.*s10.*a11 - 2.*a12.^2.*a21.^2.*s4.^2 + 8.*s1.*s2.*a12.^2.*a21.^2 - 4.*a12.^2.*a21.*a23.*s4.*s6 + 8.*s2.*a12.^2.*a21.*a23.*s5 + 2.*a31.*a12.^2.*a21.*s4.^2 + 2.*a33.*a12.^2.*a21.*s4.*s6 - 2.*a12.^2.*a21.*s4.*s8 - 4.*a33.*s2.*a12.^2.*a21.*s5 + 4.*s2.*a12.^2.*a21.*s7 - 8.*a31.*s1.*s2.*a12.^2.*a21 - 2.*a12.^2.*a23.^2.*s6.^2 + 8.*s2.*s3.*a12.^2.*a23.^2 + 2.*a31.*a12.^2.*a23.*s4.*s6 - 4.*a31.*s2.*a12.^2.*a23.*s5 + 2.*a33.*a12.^2.*a23.*s6.^2 - 2.*a12.^2.*a23.*s6.*s8 + 4.*s2.*a12.^2.*a23.*s9 - 8.*a33.*s2.*s3.*a12.^2.*a23 + 2.*a31.*a12.^2.*s4.*s8 + 2.*a33.*a12.^2.*s6.*s8 - 4.*a31.*s2.*a12.^2.*s7 - 4.*a33.*s2.*a12.^2.*s9 - 4.*a12.*a13.*a21.^2.*s4.*s5 + 8.*s1.*a12.*a13.*a21.^2.*s6 + 4.*a12.*a13.*a21.*a22.*s4.*s6 - 8.*s2.*a12.*a13.*a21.*a22.*s5 - 8.*s3.*a12.*a13.*a21.*a23.*s4 + 4.*a12.*a13.*a21.*a23.*s5.*s6 + 4.*a31.*a12.*a13.*a21.*s4.*s5 - 2.*a32.*a12.*a13.*a21.*s4.*s6 - 2.*a12.*a13.*a21.*s4.*s9 + 4.*a33.*s3.*a12.*a13.*a21.*s4 - 2.*a33.*a12.*a13.*a21.*s5.*s6 - 2.*a12.*a13.*a21.*s5.*s8 + 4.*a32.*s2.*a12.*a13.*a21.*s5 + 4.*a12.*a13.*a21.*s6.*s7 - 8.*a31.*s1.*a12.*a13.*a21.*s6 + 4.*a12.*a13.*a22.*a23.*s6.^2 - 16.*s2.*s3.*a12.*a13.*a22.*a23 - 2.*a31.*a12.*a13.*a22.*s4.*s6 + 4.*a31.*s2.*a12.*a13.*a22.*s5 - 2.*a33.*a12.*a13.*a22.*s6.^2 + 2.*a12.*a13.*a22.*s6.*s8 - 4.*s2.*a12.*a13.*a22.*s9 + 8.*a33.*s2.*s3.*a12.*a13.*a22 + 4.*a31.*s3.*a12.*a13.*a23.*s4 - 2.*a31.*a12.*a13.*a23.*s5.*s6 - 2.*a32.*a12.*a13.*a23.*s6.^2 + 2.*a12.*a13.*a23.*s6.*s9 - 4.*s3.*a12.*a13.*a23.*s8 + 8.*a32.*s2.*s3.*a12.*a13.*a23 + 2.*a31.*a12.*a13.*s4.*s9 + 2.*a31.*a12.*a13.*s5.*s8 - 4.*a31.*a12.*a13.*s6.*s7 - 2.*a32.*a12.*a13.*s6.*s8 - 2.*a33.*a12.*a13.*s6.*s9 + 4.*a33.*s3.*a12.*a13.*s8 + 4.*a32.*s2.*a12.*a13.*s9 - 4.*a12.*a21.^2.*s4.*s7 + 8.*s1.*a12.*a21.^2.*s8 + 4.*a12.*a21.*a22.*s4.*s8 - 8.*s2.*a12.*a21.*a22.*s7 - 4.*a12.*a21.*a23.*s4.*s9 + 8.*a12.*a21.*a23.*s5.*s8 - 4.*a12.*a21.*a23.*s6.*s7 + 4.*a31.*a12.*a21.*s4.*s7 - 2.*a32.*a12.*a21.*s4.*s8 + 2.*a33.*a12.*a21.*s4.*s9 - 4.*s10.*a12.*a21.*s4 - 4.*a33.*a12.*a21.*s5.*s8 + 2.*a33.*a12.*a21.*s6.*s7 + 2.*a12.*a21.*s7.*s8 + 4.*a32.*s2.*a12.*a21.*s7 - 8.*a31.*s1.*a12.*a21.*s8 + 4.*a12.*a22.*a23.*s6.*s8 - 8.*s2.*a12.*a22.*a23.*s9 - 2.*a31.*a12.*a22.*s4.*s8 - 2.*a33.*a12.*a22.*s6.*s8 + 4.*a31.*s2.*a12.*a22.*s7 + 2.*a12.*a22.*s8.^2 + 4.*a33.*s2.*a12.*a22.*s9 - 8.*s2.*s10.*a12.*a22 - 4.*a12.*a23.^2.*s6.*s9 + 8.*s3.*a12.*a23.^2.*s8 + 2.*a31.*a12.*a23.*s4.*s9 - 4.*a31.*a12.*a23.*s5.*s8 + 2.*a31.*a12.*a23.*s6.*s7 - 2.*a32.*a12.*a23.*s6.*s8 + 4.*a33.*a12.*a23.*s6.*s9 - 4.*s10.*a12.*a23.*s6 + 2.*a12.*a23.*s8.*s9 - 8.*a33.*s3.*a12.*a23.*s8 + 4.*a32.*s2.*a12.*a23.*s9 + 4.*a31.*s10.*a12.*s4 + 4.*a33.*s10.*a12.*s6 - 2.*a31.*a12.*s7.*s8 - 2.*a32.*a12.*s8.^2 - 2.*a33.*a12.*s8.*s9 + 8.*a32.*s2.*s10.*a12 - 2.*a13.^2.*a21.^2.*s5.^2 + 8.*s1.*s3.*a13.^2.*a21.^2 + 8.*s3.*a13.^2.*a21.*a22.*s4 - 4.*a13.^2.*a21.*a22.*s5.*s6 - 4.*a32.*s3.*a13.^2.*a21.*s4 + 2.*a31.*a13.^2.*a21.*s5.^2 + 2.*a32.*a13.^2.*a21.*s5.*s6 - 2.*a13.^2.*a21.*s5.*s9 + 4.*s3.*a13.^2.*a21.*s7 - 8.*a31.*s1.*s3.*a13.^2.*a21 - 2.*a13.^2.*a22.^2.*s6.^2 + 8.*s2.*s3.*a13.^2.*a22.^2 - 4.*a31.*s3.*a13.^2.*a22.*s4 + 2.*a31.*a13.^2.*a22.*s5.*s6 + 2.*a32.*a13.^2.*a22.*s6.^2 - 2.*a13.^2.*a22.*s6.*s9 + 4.*s3.*a13.^2.*a22.*s8 - 8.*a32.*s2.*s3.*a13.^2.*a22 + 2.*a31.*a13.^2.*s5.*s9 + 2.*a32.*a13.^2.*s6.*s9 - 4.*a31.*s3.*a13.^2.*s7 - 4.*a32.*s3.*a13.^2.*s8 - 4.*a13.*a21.^2.*s5.*s7 + 8.*s1.*a13.*a21.^2.*s9 + 8.*a13.*a21.*a22.*s4.*s9 - 4.*a13.*a21.*a22.*s5.*s8 - 4.*a13.*a21.*a22.*s6.*s7 + 4.*a13.*a21.*a23.*s5.*s9 - 8.*s3.*a13.*a21.*a23.*s7 - 4.*a32.*a13.*a21.*s4.*s9 + 4.*a31.*a13.*a21.*s5.*s7 + 2.*a32.*a13.*a21.*s5.*s8 - 2.*a33.*a13.*a21.*s5.*s9 - 4.*s10.*a13.*a21.*s5 + 2.*a32.*a13.*a21.*s6.*s7 + 2.*a13.*a21.*s7.*s9 + 4.*a33.*s3.*a13.*a21.*s7 - 8.*a31.*s1.*a13.*a21.*s9 - 4.*a13.*a22.^2.*s6.*s8 + 8.*s2.*a13.*a22.^2.*s9 + 4.*a13.*a22.*a23.*s6.*s9 - 8.*s3.*a13.*a22.*a23.*s8 - 4.*a31.*a13.*a22.*s4.*s9 + 2.*a31.*a13.*a22.*s5.*s8 + 2.*a31.*a13.*a22.*s6.*s7 + 4.*a32.*a13.*a22.*s6.*s8 - 2.*a33.*a13.*a22.*s6.*s9 - 4.*s10.*a13.*a22.*s6 + 2.*a13.*a22.*s8.*s9 + 4.*a33.*s3.*a13.*a22.*s8 - 8.*a32.*s2.*a13.*a22.*s9 - 2.*a31.*a13.*a23.*s5.*s9 - 2.*a32.*a13.*a23.*s6.*s9 + 4.*a31.*s3.*a13.*a23.*s7 + 4.*a32.*s3.*a13.*a23.*s8 + 2.*a13.*a23.*s9.^2 - 8.*s3.*s10.*a13.*a23 + 4.*a31.*s10.*a13.*s5 + 4.*a32.*s10.*a13.*s6 - 2.*a31.*a13.*s7.*s9 - 2.*a32.*a13.*s8.*s9 - 2.*a33.*a13.*s9.^2 + 8.*a33.*s3.*s10.*a13 - 2.*a21.^2.*s7.^2 + 8.*s1.*s10.*a21.^2 + 8.*s10.*a21.*a22.*s4 - 4.*a21.*a22.*s7.*s8 + 8.*s10.*a21.*a23.*s5 - 4.*a21.*a23.*s7.*s9 - 4.*a32.*s10.*a21.*s4 - 4.*a33.*s10.*a21.*s5 + 2.*a31.*a21.*s7.^2 + 2.*a32.*a21.*s7.*s8 + 2.*a33.*a21.*s7.*s9 - 8.*a31.*s1.*s10.*a21 - 2.*a22.^2.*s8.^2 + 8.*s2.*s10.*a22.^2 + 8.*s10.*a22.*a23.*s6 - 4.*a22.*a23.*s8.*s9 - 4.*a31.*s10.*a22.*s4 - 4.*a33.*s10.*a22.*s6 + 2.*a31.*a22.*s7.*s8 + 2.*a32.*a22.*s8.^2 + 2.*a33.*a22.*s8.*s9 - 8.*a32.*s2.*s10.*a22 - 2.*a23.^2.*s9.^2 + 8.*s3.*s10.*a23.^2 - 4.*a31.*s10.*a23.*s5 - 4.*a32.*s10.*a23.*s6 + 2.*a31.*a23.*s7.*s9 + 2.*a32.*a23.*s8.*s9 + 2.*a33.*a23.*s9.^2 - 8.*a33.*s3.*s10.*a23,[size(a11,2).*size(s1,1),1]),...
                reshape( a11.^2.*a22.^2.*s4.^2 - 4.*s1.*s2.*a11.^2.*a22.^2 + 2.*a11.^2.*a22.*a23.*s4.*s5 - 4.*s1.*a11.^2.*a22.*a23.*s6 + 2.*a11.^2.*a22.*s4.*s7 - 4.*s1.*a11.^2.*a22.*s8 + a11.^2.*a23.^2.*s5.^2 - 4.*s1.*s3.*a11.^2.*a23.^2 + 2.*a11.^2.*a23.*s5.*s7 - 4.*s1.*a11.^2.*a23.*s9 + a11.^2.*s7.^2 - 4.*s1.*s10.*a11.^2 - 2.*a11.*a12.*a21.*a22.*s4.^2 + 8.*s1.*s2.*a11.*a12.*a21.*a22 - 2.*a11.*a12.*a21.*a23.*s4.*s5 + 4.*s1.*a11.*a12.*a21.*a23.*s6 - 2.*a11.*a12.*a21.*s4.*s7 + 4.*s1.*a11.*a12.*a21.*s8 - 2.*a11.*a12.*a22.*a23.*s4.*s6 + 4.*s2.*a11.*a12.*a22.*a23.*s5 - 2.*a11.*a12.*a22.*s4.*s8 + 4.*s2.*a11.*a12.*a22.*s7 - 4.*s3.*a11.*a12.*a23.^2.*s4 + 2.*a11.*a12.*a23.^2.*s5.*s6 - 4.*a11.*a12.*a23.*s4.*s9 + 2.*a11.*a12.*a23.*s5.*s8 + 2.*a11.*a12.*a23.*s6.*s7 - 4.*s10.*a11.*a12.*s4 + 2.*a11.*a12.*s7.*s8 - 2.*a11.*a13.*a21.*a22.*s4.*s5 + 4.*s1.*a11.*a13.*a21.*a22.*s6 - 2.*a11.*a13.*a21.*a23.*s5.^2 + 8.*s1.*s3.*a11.*a13.*a21.*a23 - 2.*a11.*a13.*a21.*s5.*s7 + 4.*s1.*a11.*a13.*a21.*s9 + 2.*a11.*a13.*a22.^2.*s4.*s6 - 4.*s2.*a11.*a13.*a22.^2.*s5 + 4.*s3.*a11.*a13.*a22.*a23.*s4 - 2.*a11.*a13.*a22.*a23.*s5.*s6 + 2.*a11.*a13.*a22.*s4.*s9 - 4.*a11.*a13.*a22.*s5.*s8 + 2.*a11.*a13.*a22.*s6.*s7 - 2.*a11.*a13.*a23.*s5.*s9 + 4.*s3.*a11.*a13.*a23.*s7 - 4.*s10.*a11.*a13.*s5 + 2.*a11.*a13.*s7.*s9 - 2.*a11.*a21.*a22.*s4.*s7 + 4.*s1.*a11.*a21.*a22.*s8 - 2.*a11.*a21.*a23.*s5.*s7 + 4.*s1.*a11.*a21.*a23.*s9 - 2.*a11.*a21.*s7.^2 + 8.*s1.*s10.*a11.*a21 + 2.*a11.*a22.^2.*s4.*s8 - 4.*s2.*a11.*a22.^2.*s7 + 2.*a11.*a22.*a23.*s4.*s9 + 2.*a11.*a22.*a23.*s5.*s8 - 4.*a11.*a22.*a23.*s6.*s7 + 4.*s10.*a11.*a22.*s4 - 2.*a11.*a22.*s7.*s8 + 2.*a11.*a23.^2.*s5.*s9 - 4.*s3.*a11.*a23.^2.*s7 + 4.*s10.*a11.*a23.*s5 - 2.*a11.*a23.*s7.*s9 + a12.^2.*a21.^2.*s4.^2 - 4.*s1.*s2.*a12.^2.*a21.^2 + 2.*a12.^2.*a21.*a23.*s4.*s6 - 4.*s2.*a12.^2.*a21.*a23.*s5 + 2.*a12.^2.*a21.*s4.*s8 - 4.*s2.*a12.^2.*a21.*s7 + a12.^2.*a23.^2.*s6.^2 - 4.*s2.*s3.*a12.^2.*a23.^2 + 2.*a12.^2.*a23.*s6.*s8 - 4.*s2.*a12.^2.*a23.*s9 + a12.^2.*s8.^2 - 4.*s2.*s10.*a12.^2 + 2.*a12.*a13.*a21.^2.*s4.*s5 - 4.*s1.*a12.*a13.*a21.^2.*s6 - 2.*a12.*a13.*a21.*a22.*s4.*s6 + 4.*s2.*a12.*a13.*a21.*a22.*s5 + 4.*s3.*a12.*a13.*a21.*a23.*s4 - 2.*a12.*a13.*a21.*a23.*s5.*s6 + 2.*a12.*a13.*a21.*s4.*s9 + 2.*a12.*a13.*a21.*s5.*s8 - 4.*a12.*a13.*a21.*s6.*s7 - 2.*a12.*a13.*a22.*a23.*s6.^2 + 8.*s2.*s3.*a12.*a13.*a22.*a23 - 2.*a12.*a13.*a22.*s6.*s8 + 4.*s2.*a12.*a13.*a22.*s9 - 2.*a12.*a13.*a23.*s6.*s9 + 4.*s3.*a12.*a13.*a23.*s8 - 4.*s10.*a12.*a13.*s6 + 2.*a12.*a13.*s8.*s9 + 2.*a12.*a21.^2.*s4.*s7 - 4.*s1.*a12.*a21.^2.*s8 - 2.*a12.*a21.*a22.*s4.*s8 + 4.*s2.*a12.*a21.*a22.*s7 + 2.*a12.*a21.*a23.*s4.*s9 - 4.*a12.*a21.*a23.*s5.*s8 + 2.*a12.*a21.*a23.*s6.*s7 + 4.*s10.*a12.*a21.*s4 - 2.*a12.*a21.*s7.*s8 - 2.*a12.*a22.*a23.*s6.*s8 + 4.*s2.*a12.*a22.*a23.*s9 - 2.*a12.*a22.*s8.^2 + 8.*s2.*s10.*a12.*a22 + 2.*a12.*a23.^2.*s6.*s9 - 4.*s3.*a12.*a23.^2.*s8 + 4.*s10.*a12.*a23.*s6 - 2.*a12.*a23.*s8.*s9 + a13.^2.*a21.^2.*s5.^2 - 4.*s1.*s3.*a13.^2.*a21.^2 - 4.*s3.*a13.^2.*a21.*a22.*s4 + 2.*a13.^2.*a21.*a22.*s5.*s6 + 2.*a13.^2.*a21.*s5.*s9 - 4.*s3.*a13.^2.*a21.*s7 + a13.^2.*a22.^2.*s6.^2 - 4.*s2.*s3.*a13.^2.*a22.^2 + 2.*a13.^2.*a22.*s6.*s9 - 4.*s3.*a13.^2.*a22.*s8 + a13.^2.*s9.^2 - 4.*s3.*s10.*a13.^2 + 2.*a13.*a21.^2.*s5.*s7 - 4.*s1.*a13.*a21.^2.*s9 - 4.*a13.*a21.*a22.*s4.*s9 + 2.*a13.*a21.*a22.*s5.*s8 + 2.*a13.*a21.*a22.*s6.*s7 - 2.*a13.*a21.*a23.*s5.*s9 + 4.*s3.*a13.*a21.*a23.*s7 + 4.*s10.*a13.*a21.*s5 - 2.*a13.*a21.*s7.*s9 + 2.*a13.*a22.^2.*s6.*s8 - 4.*s2.*a13.*a22.^2.*s9 - 2.*a13.*a22.*a23.*s6.*s9 + 4.*s3.*a13.*a22.*a23.*s8 + 4.*s10.*a13.*a22.*s6 - 2.*a13.*a22.*s8.*s9 - 2.*a13.*a23.*s9.^2 + 8.*s3.*s10.*a13.*a23 + a21.^2.*s7.^2 - 4.*s1.*s10.*a21.^2 - 4.*s10.*a21.*a22.*s4 + 2.*a21.*a22.*s7.*s8 - 4.*s10.*a21.*a23.*s5 + 2.*a21.*a23.*s7.*s9 + a22.^2.*s8.^2 - 4.*s2.*s10.*a22.^2 - 4.*s10.*a22.*a23.*s6 + 2.*a22.*a23.*s8.*s9 + a23.^2.*s9.^2 - 4.*s3.*s10.*a23.^2,[size(a11,2).*size(s1,1),1])];
            
        end
        
        function [t_coeff] = GetUVCoeff4EdgeTrans(~)
            t_coeff = @(b1,b2,b3,c1,c2,c3,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10) ...
                [reshape(s1.*b1.^2 + s4.*b1.*b2 + s5.*b1.*b3 - 2.*s1.*b1.*c1 - s4.*b1.*c2 - s5.*b1.*c3 + s2.*b2.^2 + s6.*b2.*b3 - s4.*b2.*c1 - 2.*s2.*b2.*c2 - s6.*b2.*c3 + s3.*b3.^2 - s5.*b3.*c1 - s6.*b3.*c2 - 2.*s3.*b3.*c3 + s1.*c1.^2 + s4.*c1.*c2 + s5.*c1.*c3 + s2.*c2.^2 + s6.*c2.*c3 + s3.*c3.^2,[size(b1,2)*size(s1,1),1]),...
                reshape(b1.*s7 + b2.*s8 + b3.*s9 - c1.*s7 - c2.*s8 - c3.*s9 - 2.*c1.^2.*s1 - 2.*c2.^2.*s2 - 2.*c3.^2.*s3 + 2.*b1.*c1.*s1 + 2.*b2.*c2.*s2 + b1.*c2.*s4 + b2.*c1.*s4 + b1.*c3.*s5 + b3.*c1.*s5 + 2.*b3.*c3.*s3 + b2.*c3.*s6 + b3.*c2.*s6 - 2.*c1.*c2.*s4 - 2.*c1.*c3.*s5 - 2.*c2.*c3.*s6,[size(b1,2)*size(s1,1),1]),...
                reshape(s1.*c1.^2 + s4.*c1.*c2 + s5.*c1.*c3 + s7.*c1 + s2.*c2.^2 + s6.*c2.*c3 + s8.*c2 + s3.*c3.^2 + s9.*c3 + s10,[size(b1,2)*size(s1,1),1])];
            
        end
        
    end
end


