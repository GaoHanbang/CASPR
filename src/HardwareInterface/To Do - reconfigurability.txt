-------------------------------------------
Reconfigurability Goals for the new DingBot
-------------------------------------------
1. works with any number of servos, no need to edit matlab and mega code. (e.g. the trajectory is for 8 servos. We plug in 4. All 4 work They move according to the trajectory and give proper feedback.)
2. works with any servo module, no need to flash nano ID. (e.g. I plug a servo into slot0. It works as servo0. I replace it with another servo. The new servo works as servo0.)
3. lets DIN slot determine servo ID, no need to flash nano ID. (e.g. I unplug the servo from slot0 and plug it into slot1. It now works as servo1)

Ding is working on #2, #3?

-------------------------------------------
#1 How to work with any number of servos
-------------------------------------------
(Assume hot swap is not needed. No one should plug/unplug servos when the system is running.)
1. At the start of the code, mega detects the number of nanos connected (how?)
2. ??????????????????????????????????



VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
   A solution to solve all 3 problems
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
pre-requisite:
- all servo parameters should be stored in its respective nano, so that a foreign servo can be plugged in and still works.
- write down the servo parameters and stick it on the servo, so that if the nano code is accidentally erased, we don't have to calibrate again.


-------------------------------------------
Solution 1: dedicated TX for each nano
-------------------------------------------


-------------------------------------------
Solution 2: random number as initial nano ID
-------------------------------------------
so each nano will have a unique ID in the beginning,
even though we didn't manually program them to be nano0, nano1, nano2.